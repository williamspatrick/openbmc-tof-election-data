{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I969f5f2c32c4acccd4d80615f17c44d0c8fabd0d",
    "number": 50879,
    "subject": "Remove q-factor weighting on Accept Header",
    "owner": {
        "name": "Gunnar Mills",
        "email": "gmills@us.ibm.com",
        "username": "gtmills"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50879",
    "hashtags": [],
    "createdOn": 1643839850,
    "lastUpdated": 1661200217,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1643839850,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1643839864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643839864,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1643839888,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/36503/ : FAILURE"
        },
        {
            "timestamp": 1643839963,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1643839976,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643839976,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1643840146,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643840317,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643840691,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36504/ : SUCCESS"
        },
        {
            "timestamp": 1643840724,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1643842910,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643915299,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1643915310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1643915310,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1643915927,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1643915985,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1643916428,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/36558/ : SUCCESS"
        },
        {
            "timestamp": 1643921539,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1643921657,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1647109267,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1648757900,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1648757967,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1648757973,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Topic set to WIP"
        },
        {
            "timestamp": 1660151932,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1660151964,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660151964,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1660151988,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1660151992,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48942/ : FAILURE"
        },
        {
            "timestamp": 1660152393,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1660152429,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660152430,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1660152432,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1660153018,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48945/ : SUCCESS"
        },
        {
            "timestamp": 1660153700,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1660155565,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1660155615,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660155616,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1660156154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48947/ : SUCCESS"
        },
        {
            "timestamp": 1660156250,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Topic WIP removed"
        },
        {
            "timestamp": 1660192924,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1660289071,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1660583015,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1661199964,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1661199966,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1661200217,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Change has been successfully rebased and submitted as a3526fee27da0e324cd022ea77d282d1146b3317"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b50860e2626c6920453b81db2336d00783114e34",
            "parents": [
                "22228c280c810cc857c0a25904316e48fab04fef"
            ],
            "ref": "refs/changes/79/50879/1",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1643839850,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is an example of COMMON_ERROR 12.  I suspect we should be using something like https://www.boost.org/doc/libs/1_78_0/libs/beast/doc/html/beast/ref/boost__beast__http__ext_list.html\n\nhere?  Which looks like it's purpose built for parsing accept headers."
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nvm, I played with this, and the ext_list headers look like they split on /, which messes the whole thing up.  I wonder if that's a boost bug?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Maybe they just don't have support for q-factor weighting (;q=) ?\n\nWhich is odd because i see this used on both firefox and chrome (Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9)"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> This is an example of COMMON_ERROR 12.\n\nDone. Followed code elsewhere like: \nhttps://github.com/openbmc/bmcweb/blob/41d61c8281ed9af50630c78f0a646e726139fb25/include/authorization.hpp#L57"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That code as written isn't an example of common error 12, because Basic auth defines \":\" as a delimiter, and the next call to that is a substr call.  Ideally that code should also be checking for duplicated \":\" to avoid injection attacks, but given that the next call is to pamAuthenticateUser, there's no way to get that code to accept things that it shouldn't.\n\nThis code, in theory, if I was able to inject \";q=\" into an accept header, I could make this algorithm fail.\n\nNow, how much that matters in practice, it implies that the client didn't scrub their inputs properly, which one could argue is a client problem.....\n\nAs an example of something this code would now accept as a valid accept header that it didn't before\n\napplication/json;q=FOOBAR\n\nI don't think that should be permitted, and ideally should be returning a 400 error."
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I could write some more complex code to reject */*;q=FOOBAR, but I am struggling to see the value. We aren't doing anything with the q-factor weighting (;q=).\n\nTrying to enable this GUI code (download the additional data when there is one):\nhttps://github.com/openbmc/webui-vue/blob/9b79a6e7e3df3d3cbaf9a7750bbe343628022026/src/views/Logs/EventLogs/EventLogs.vue#L155\nhttps://github.com/openbmc/webui-vue/blob/9b79a6e7e3df3d3cbaf9a7750bbe343628022026/src/locales/en-US.json#L251\nThe browser says it accepts all content types, we should honor that, which I think we all agree on. I am just struggling with writing code like \nhttps://github.com/openbmc/bmcweb/blob/d9f6c621036162e9071ce3c3a333b4544c6db870/redfish-core/lib/log_services.hpp#L284\nto do a test for if the q-factor weighting is really between 0-1"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I could write some more complex code to reject */*;q=FOOBAR, but I am struggling to see the value. We aren't doing anything with the q-factor weighting (;q=).\n\n\nACK.  I can get behind this \"it's arguably wrong but not wrong in a way that matters\" logic.  I didn't mean for this to be a major blocking thing.\n\n> \n> Trying to enable this GUI code (download the additional data when there is one):\n> https://github.com/openbmc/webui-vue/blob/9b79a6e7e3df3d3cbaf9a7750bbe343628022026/src/views/Logs/EventLogs/EventLogs.vue#L155\n> https://github.com/openbmc/webui-vue/blob/9b79a6e7e3df3d3cbaf9a7750bbe343628022026/src/locales/en-US.json#L251\n> The browser says it accepts all content types, we should honor that, which I think we all agree on. I am just struggling with writing code like \n> https://github.com/openbmc/bmcweb/blob/d9f6c621036162e9071ce3c3a333b4544c6db870/redfish-core/lib/log_services.hpp#L284\n> to do a test for if the q-factor weighting is really between 0-1\n\nq-factor was added later, and servers are allowed to ignore it if they choose, right?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> q-factor was added later, and servers are allowed to ignore it if they choose, right?\n\nYes. \"Quality factors allow the user or user agent to indicate the relative degree of preference for that media-range, using the \u2018q\u2019 value scale from 0 to 1.\".. So it is just the preference from the client."
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 32,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "2cc1b4273c57753a554218b929f7045fb05bef52",
            "parents": [
                "22228c280c810cc857c0a25904316e48fab04fef"
            ],
            "ref": "refs/changes/79/50879/2",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1643839963,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I could move this up to parseAccept ?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think we should, although I know that the requestPrefersHtml check works properly on browsers (which presumably send a q value) I kinda wonder why the octet check fails, but the http check doesn't?  Maybe it actually does, and only \"works\" because most explicitly set (curl like) parsers don't use q values?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 40,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> I think we should, although I know that the requestPrefersHtml check works properly on browsers (which presumably send a q value) I kinda wonder why the octet check fails, but the http check doesn't?\n\nOn the system I tested, on firefox, Accept looks like:\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\n\nSo Html works because it has a separate text/html that does not have a q value.\n\nThe octet check is failing because the any MIME type (*/*) has a q value."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "69c9c2c1c9e4a06f63a007dce4f21343d7c3aa82",
            "parents": [
                "22228c280c810cc857c0a25904316e48fab04fef"
            ],
            "ref": "refs/changes/79/50879/3",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1643915299,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "The whole point of this was to make sure that these binary files were not directly downloadable by browsers, as it can lead to injection attacks (ie, if I hide a windows EXE in a log payload) and have the user execute this.\n\nThis is not to say that this patchset as written is doing the wrong thing, it just seems like it's trying to bypass that explicit design decision on this API, which makes me wonder if we implemented it wrong in the first place if a browser can even download these to a file."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Here is the GUI code attempting to download the additional data:\nhttps://github.com/openbmc/webui-vue/blob/9b79a6e7e3df3d3cbaf9a7750bbe343628022026/src/views/Logs/EventLogs/EventLogs.vue#L155\nhttps://github.com/openbmc/webui-vue/blob/9b79a6e7e3df3d3cbaf9a7750bbe343628022026/src/locales/en-US.json#L251\n\nToday this results in a 400 Bad Request due to isOctetAccepted failing even though firefox and chrome both have a ,*/*;q=0.8"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I looked at that code, so far as I can tell.... it's literally trying to do explicitly what we intentionally tried in the API to disallow (downloading a binary payload to a file).  Maybe I misread it?\n\nIf that's the goal, it's possible there's some level of design we need to change here?  I don't recall the full discussion, but the normal security issue is:\n1. Nefarious user loads executable data into log message\n2. Unsuspecting user downloads, and executes.\n\n\nNow, maybe this is far-fetched these days with OSes not allowing execute by default, but it's probably worth discussing?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "> I looked at that code, so far as I can tell.... it's literally trying to do explicitly what we intentionally tried in the API to disallow (downloading a binary payload to a file).  Maybe I misread it?\n\nIt is doing exactly that, it is downloading the attachment. But how is downloading the attachment via cURL or some other network tool, different than downloading it via the GUI? \n\nThe attachment is base 64 encoded, https://github.com/openbmc/bmcweb/blob/2b82937ecef572954b49569177b16831cbc09cfe/redfish-core/lib/log_services.hpp#L1756. \n\nI see the security concern but it is base 64 encoded, it is already allowed today via Wget, etc, this \" Nefarious user loads executable data; Unsuspecting user downloads, and executes\" isn't something special with OpenBMC, companies don't have to have this API (the GUI doesn't show this button unless there is an AdditionalDataUri on the log entry)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > I looked at that code, so far as I can tell.... it's literally trying to do explicitly what we intentionally tried in the API to disallow (downloading a binary payload to a file).  Maybe I misread it?\n> \n> It is doing exactly that, it is downloading the attachment. But how is downloading the attachment via cURL or some other network tool, different than downloading it via the GUI? \n> \n> The attachment is base 64 encoded, https://github.com/openbmc/bmcweb/blob/2b82937ecef572954b49569177b16831cbc09cfe/redfish-core/lib/log_services.hpp#L1756. \n> \n> I see the security concern but it is base 64 encoded, it is already allowed today via Wget, etc, this \" Nefarious user loads executable data; Unsuspecting user downloads, and executes\" isn't something special with OpenBMC, companies don't have to have this API (the GUI doesn't show this button unless there is an AdditionalDataUri on the log entry).\n\n\n> Unsuspecting user downloads, and executes\" isn't something special with OpenBMC\n\nYes and no.  We have a lot of APIs that are likely to be able to have injection attacks, and we have no ability to run any kind of site-wide anti-virus or injection mitigation, so we differ pretty significantly from say, a website that hosts binaries.\n\nFWIW, I'm going to close out this thread.  Happy to keep talking about it somewhere, but holding up your review for it for behavior that's already on master doesn't make sense to me."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Also, FWIW, holy hell parsing ACCEPT headers per the spec is complicated;\n\nhttps://www.xml.com/pub/a/2005/06/08/restful.html"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "is this still being worked?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I'll come back to it in the next month. Marked as WIP"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "if we use string view here we avoid a copy when we do the substr below (I think)?"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 37,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Was about to comment this on the last patchset, but you already found it."
                },
                {
                    "file": "include/http_utility.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Ack."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "bcf81ad1ef77f7a240799f8b43766efc76ac8745",
            "parents": [
                "2c98676dca920b736b937ad33004bc05b75a450d"
            ],
            "ref": "refs/changes/79/50879/4",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1660151932,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 2
        },
        {
            "number": 5,
            "revision": "0e7ec04cbbbc79892efcd7aad891fbaa91b5a485",
            "parents": [
                "2c98676dca920b736b937ad33004bc05b75a450d"
            ],
            "ref": "refs/changes/79/50879/5",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1660152393,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 54,
            "sizeDeletions": 2
        },
        {
            "number": 6,
            "revision": "3f69e139e1de86a442a5eb88b5351266c616c928",
            "parents": [
                "2c98676dca920b736b937ad33004bc05b75a450d"
            ],
            "ref": "refs/changes/79/50879/6",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1660155565,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 55,
            "sizeDeletions": 2
        },
        {
            "number": 7,
            "revision": "a3526fee27da0e324cd022ea77d282d1146b3317",
            "parents": [
                "0d4befa8f0b8c3fecb96f6c8c7acd26439ad122e"
            ],
            "ref": "refs/changes/79/50879/7",
            "uploader": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "createdOn": 1661200217,
            "author": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/http_utility.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "include/ut/http_utility_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 55,
            "sizeDeletions": 2
        }
    ]
}