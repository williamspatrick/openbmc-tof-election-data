{
    "project": "openbmc/libpldm",
    "branch": "main",
    "id": "I11d25ee7da8326a5f5fe2c8a237ac014882e436e",
    "number": 59033,
    "subject": "Add numeric sensor PDR and sensor aux names PDR",
    "owner": {
        "name": "Gilbert Chen",
        "email": "gilbert.0225@gmail.com",
        "username": "gilbert225"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/59033",
    "hashtags": [],
    "createdOn": 1669794961,
    "lastUpdated": 1672841164,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1669794961,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1669794987,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1669794987,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1669795235,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/56347/ : SUCCESS"
        },
        {
            "timestamp": 1669882602,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1669883213,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1670295341,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1670377238,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1670408023,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1670545531,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1670554030,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1670559242,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1670597251,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1670993198,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1: -Code-Review\n\n(1 comment)"
        },
        {
            "timestamp": 1672839600,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 2: Patch Set 1 was rebased\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1672839626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1672839626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1672839881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58545/ : SUCCESS"
        },
        {
            "timestamp": 1672839944,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1672839975,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1672839975,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1672840231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58547/ : SUCCESS"
        },
        {
            "timestamp": 1672841164,
            "reviewer": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "9482e709ab51bdd07f86030fd6f025dbf336209e",
            "parents": [
                "b7c73e502f8bcf4ab348e9566e1b7cb594f8aa8c"
            ],
            "ref": "refs/changes/33/59033/1",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "createdOn": 1669794961,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/platform.h",
                    "line": 455,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "The struct is difference with section 28.8 Sensor Auxiliary Names PDR.\nIt seem names[1] is simpler form for array of struct which includes nameStringCount, nameLanguageTag and sensorName.\nI also have one MR for pldm_effecter_auxiliary_names_pdr which use difference approach. @ManojKiran Eda Do you have any idea on this?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 455,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.0225@gmail.com",
                        "username": "gilbert225"
                    },
                    "message": "According to the sensorCount field description of table 83, there will M vary structure {nameStringCount=N, nameLanugageTag, sensorName[N]} if sensorCount=M and M > 1.\nSo address of vary length data is after sensor_count and it is where the address of names[] array is."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 455,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.0225@gmail.com",
                        "username": "gilbert225"
                    },
                    "message": "Resolved the comment since https://gerrit.openbmc.org/c/openbmc/libpldm/+/59006 also was updated to unit8_t array"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 669,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "This union is the same as union_effecter_data_size, just difference the name. Should we rename union_effecter_data_size to use for both sensor and effecter data size?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 669,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.0225@gmail.com",
                        "username": "gilbert225"
                    },
                    "message": "The reason to add union for sensor data size is because that effecter and sensor data size are described in two different tables in DSP0248.\nsensorDataSize: table78\neffecterDataSize: table87"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 669,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "lets have it as two different unions. Incase if one of them changes in future, i think its cleaner to have both seperate."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 701,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This has me concerned.\n\nThe first concern is that DSP0248 1.2.0 28.4 Table 78 doesn't specify structure offsets for data elements. If the data structure was composed of fixed-length members then this should be feasible. It's not possible to provide sensible values for offsets if members are variable length. The implication of not providing them is that some members are variable length.\n\nFurther, the type of sensorDataSize in Table 78 is `enum8`, which is fixed-length, however the type of hysteresis is described as `uint8 | sint8 | uint16 | sint16 | uint32 | sint32`. This suggests the data of the type of any one of the types listed.\n\nFrom the C99 draft specification WG14/N1256 6.7.2.1 Structure and union specifiers we have:\n\n> 14 The size of a union is sufficient to contain the largest of its members. The value of at most one of the members can be stored in a union object at any time. A pointer to a union object, suitably converted, points to each of its members (or if a member is a bit-field, then to the unit in which it resides), and vice versa.\n\nDSP2048 refers us to DSP0240 for PLDM conventions, notations and data types. By DSP0240 5.3 and its associated Table 1, there's no suggestion of padding out a type disjunction to the largest type, or even of the disjunction notation they've used in DSP0248 (|, the pipe character).\n\nI think we have to assume the length of the hysteresis field is entirely defined by the sensorDataSize member, which means it's inappropriate to cast a buffer containing a sensor value PDR message to this struct-based description. If sensorDataSize is anything but a u32 or s32 type, the data in all following members is corrupt, and accessing members towards the end of the struct may lead to out of bounds memory accesses.\n\nVariable length structures require explicit unpacking of members via e.g. memcpy()."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 701,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.0225@gmail.com",
                        "username": "gilbert225"
                    },
                    "message": "Yes, the structure is for unpacked numeric sensor PDR data. Unpacking the variable length field to the structure is done by parseNumericSensorPDR()\nhttps://gerrit.openbmc.org/c/openbmc/pldm/+/53961/35/platform-mc/terminus.cpp#175/\n\nlibpldm has a similar sturcture defined for numeric effecter pdr. The patch set follows its style to define a structure for numeric sensor pdr.\nhttps://github.com/openbmc/libpldm/blob/main/include/libpldm/platform.h#L608."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 701,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "But it's declared as __attribute__((packed)) on 719, which implies it was intended for casting onto a received buffer, or a buffer to be sent out? Declaring it as __attribute__((packed)) and then only using it in circumstances where the accesses would be properly aligned is going to impact efficiency as the compiler is forced to emit code for arbitrarily aligned accesses.\n\nShouldn't we be dropping __attribute__((packed)) given you intend to have an explicit parsing function?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 701,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.0225@gmail.com",
                        "username": "gilbert225"
                    },
                    "message": "The __attribute__((packed)) is still needed for current implementation of parseNHumericSensorPDR(). For example, the memcpy() at line 120 is trying to copy bunch of fixed PDR fields from received buffer to structure.\nhttps://gerrit.openbmc.org/c/openbmc/pldm/+/53961/35/platform-mc/terminus.cpp#120\nEven all the fields before hysteresis are fixed length, the total size could be different to structure declaration due to complier optimize options.\n\nSo dropping __attribute__((packed)), the parseNumericSensorPDR() has to unpack all fixed length fields one by one instead of memcpy()."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 701,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Mmm. I don't particularly like it, my preference would be to explicitly unpack each member rather than do a bulk memcpy() and require __attribute__((packed)). Using __attribute__((packed)) as you have feels like it violates the principle of least surprise, and really it's an implementation detail leaking out (convenience of a single memcpy() across multiple members) which has an outsized impact on the library ABI. However, we're already pretty far down the this path. Maybe we open an issue and look to clean it up before releasing a 1.0 of the library?\n\nDoes the documentation make it clear that it's not correct to cast these types over a wire-format buffer? Is requirement to use an explicit unpacking/packing function despite the type declaration something someone looking to adopt libpldm will easily become aware of?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 701,
                    "reviewer": {
                        "name": "Gilbert Chen",
                        "email": "gilbert.0225@gmail.com",
                        "username": "gilbert225"
                    },
                    "message": "Sorry for the late response. The attribute((packed)) is removed and the the unpack function, parseNumericSensorPDR(), in https://gerrit.openbmc.org/c/openbmc/pldm/+/53961/35/platform-mc/terminus.cpp#120 will be updated accordingly.\n\nPer your feedback, will it be better that libpldm provides a function to unpack PDR buffer to this struct? and then I will convert parseNumericSensorPDR() to C function and move to libpldm repo."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 88,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "006add013d1c0876b98ad1d386ba1ca57e42fb09",
            "parents": [
                "0585de95306d3e4c04f89dbed2bc413a9dee8cd6"
            ],
            "ref": "refs/changes/33/59033/2",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "createdOn": 1672839600,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 88,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "c610bb4a3bd972c7c5dbd4aea31368234ee5ef9b",
            "parents": [
                "0585de95306d3e4c04f89dbed2bc413a9dee8cd6"
            ],
            "ref": "refs/changes/33/59033/3",
            "uploader": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "createdOn": 1672839944,
            "author": {
                "name": "Gilbert Chen",
                "email": "gilbert.0225@gmail.com",
                "username": "gilbert225"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 88,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 0
        }
    ]
}