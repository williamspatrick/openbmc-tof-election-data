{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I5c570e3a0a37cbab160aafb8107ff8a5cc99a6c1",
    "number": 54457,
    "subject": "query: implement generic $select",
    "owner": {
        "name": "Nan Zhou",
        "email": "nanzhoumails@gmail.com",
        "username": "FighterNan"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54457",
    "hashtags": [],
    "createdOn": 1654820382,
    "lastUpdated": 1659397635,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1654820382,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1654820397,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654820397,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1654820719,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44752/ : FAILURE"
        },
        {
            "timestamp": 1654821659,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1654821683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654821683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1654821724,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1654821767,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654821768,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1654821768,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44753/ : ABORTED"
        },
        {
            "timestamp": 1654821772,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 4: Patch Set 3 was rebased"
        },
        {
            "timestamp": 1654821782,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654821783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1654821783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44754/ : ABORTED"
        },
        {
            "timestamp": 1654822464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44755/ : SUCCESS"
        },
        {
            "timestamp": 1654828852,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5: Patch Set 4 was rebased"
        },
        {
            "timestamp": 1654828868,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654828868,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1654829546,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44760/ : SUCCESS"
        },
        {
            "timestamp": 1654893707,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(8 comments)"
        },
        {
            "timestamp": 1654898370,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1654899054,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1654899675,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1654904244,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1654904268,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654904268,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1654904283,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1654904312,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654904313,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1654904313,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44831/ : ABORTED"
        },
        {
            "timestamp": 1654904424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44832/ : FAILURE"
        },
        {
            "timestamp": 1654904481,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n(5 comments)"
        },
        {
            "timestamp": 1654904534,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1654904593,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654904598,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1654904618,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1654904795,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1654904913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44833/ : FAILURE"
        },
        {
            "timestamp": 1654905139,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1654905455,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1654905473,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1654905495,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1654905523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654905523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1654905905,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44834/ : FAILURE"
        },
        {
            "timestamp": 1654906522,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1654906558,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654906558,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1654906840,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 11: Commit message was updated."
        },
        {
            "timestamp": 1654907171,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/44836/ : FAILURE"
        },
        {
            "timestamp": 1654907536,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 12: Published edit on patch set 11."
        },
        {
            "timestamp": 1654907547,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 13: Published edit on patch set 12."
        },
        {
            "timestamp": 1654907593,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1654907593,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1654908107,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/44837/ : SUCCESS"
        },
        {
            "timestamp": 1655255343,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1655255366,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 15: Patch Set 14 was rebased"
        },
        {
            "timestamp": 1655255382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655255382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1655255432,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1655255497,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1655255897,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45049/ : SUCCESS"
        },
        {
            "timestamp": 1655354716,
            "reviewer": {
                "name": "John Broadbent",
                "email": "jebr@google.com",
                "username": "jebr224"
            },
            "message": "Patch Set 15:\n\n(4 comments)"
        },
        {
            "timestamp": 1655395926,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1656347461,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1656347464,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16: Patch Set 15 was rebased"
        },
        {
            "timestamp": 1656347512,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656347513,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1656348036,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45936/ : SUCCESS"
        },
        {
            "timestamp": 1656348909,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1656351872,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1656352242,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1656356348,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1656356369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1656356369,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1656356390,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1656356883,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/45950/ : SUCCESS"
        },
        {
            "timestamp": 1656357161,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1656358929,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1656442003,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1656443156,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1656446160,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1658343846,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1658343870,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1658343899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658343899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1658344438,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47338/ : SUCCESS"
        },
        {
            "timestamp": 1658347148,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1658349538,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1658419706,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1658421287,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1658506953,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1658507095,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 19."
        },
        {
            "timestamp": 1658507131,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658507131,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1658507627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47431/ : SUCCESS"
        },
        {
            "timestamp": 1658589190,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1658681321,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1658713539,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1658795146,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1658795412,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1658795457,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658795458,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1658795515,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/47787/ : FAILURE"
        },
        {
            "timestamp": 1658796684,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 21."
        },
        {
            "timestamp": 1658796707,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658796707,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1658797204,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47788/ : SUCCESS"
        },
        {
            "timestamp": 1658803070,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1658805243,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1658805801,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1658890997,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 22."
        },
        {
            "timestamp": 1658891038,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658891038,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1658891635,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47849/ : SUCCESS"
        },
        {
            "timestamp": 1658894907,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 23: Commit message was updated."
        },
        {
            "timestamp": 1658942270,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1658942367,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1658943813,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 24: Patch Set 23 was rebased"
        },
        {
            "timestamp": 1658943835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1"
        },
        {
            "timestamp": 1658943857,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658943858,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1658944424,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47910/ : SUCCESS"
        },
        {
            "timestamp": 1658970415,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(8 comments)"
        },
        {
            "timestamp": 1658972096,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 24:\n\n(5 comments)"
        },
        {
            "timestamp": 1659038696,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 24:\n\n(6 comments)"
        },
        {
            "timestamp": 1659038720,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 25."
        },
        {
            "timestamp": 1659038783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659038783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1659039287,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47990/ : SUCCESS"
        },
        {
            "timestamp": 1659059714,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 25:\n\n(9 comments)"
        },
        {
            "timestamp": 1659061748,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 25:\n\n(8 comments)"
        },
        {
            "timestamp": 1659067301,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 25:\n\n(6 comments)"
        },
        {
            "timestamp": 1659131848,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 26."
        },
        {
            "timestamp": 1659131895,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 25:\n\n(7 comments)"
        },
        {
            "timestamp": 1659131903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659131903,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: -Ok-To-Test"
        },
        {
            "timestamp": 1659131941,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1659132054,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1659132416,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48031/ : SUCCESS"
        },
        {
            "timestamp": 1659364327,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(2 comments)"
        },
        {
            "timestamp": 1659364729,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(4 comments)"
        },
        {
            "timestamp": 1659373038,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1659373226,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1659374413,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(3 comments)"
        },
        {
            "timestamp": 1659374844,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1659388402,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1659391827,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 27."
        },
        {
            "timestamp": 1659391834,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 26:\n\n(3 comments)"
        },
        {
            "timestamp": 1659391847,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659391848,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1659391861,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 27:\n\n(1 comment)"
        },
        {
            "timestamp": 1659391973,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48154/ : FAILURE"
        },
        {
            "timestamp": 1659392290,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 28."
        },
        {
            "timestamp": 1659392337,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659392338,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: -Ok-To-Test"
        },
        {
            "timestamp": 1659392840,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48157/ : SUCCESS"
        },
        {
            "timestamp": 1659396816,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 28: Code-Review+2\n\n(2 comments)"
        },
        {
            "timestamp": 1659396819,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as e155ab54ec5ad4c31937f4d7de8b502e91468e43"
        },
        {
            "timestamp": 1659397635,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 29:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "156a9b32225df08d0810ab1d4178721d73995fff",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/57/54457/1",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654820382,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 139,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 314,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "af86d246e25aaa26c2f511c72119faa0415e1c2e",
            "parents": [
                "c127a0f4d49fd2152e8c25615aedc53aa8ded1d5"
            ],
            "ref": "refs/changes/57/54457/2",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654821659,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 315,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "bec17eec2cd14f618d3a9166c328a2a9687748a6",
            "parents": [
                "5b9e95a17fae7aaf9f8716b65345bb64ade5f403"
            ],
            "ref": "refs/changes/57/54457/3",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654821724,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 315,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "afc6afb3a57033ffd7510286117a11599fa3f4ca",
            "parents": [
                "c9b5fad5e7858ad133c8afdbe12c27fd45a4e1bc"
            ],
            "ref": "refs/changes/57/54457/4",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654821772,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 315,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "a97976c06207fd39134f975f6b6c0687a4f79b90",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/5",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654828852,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, generally we don't do = {} for objects that default construct with no arguments.  can be removed."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Oh, right, I now remember why I add this.\n\n```\n../redfish-core/include/utils/query_param_test.cpp:122:73: error: missing initializer for member \u2018redfish::query_param::Query::selectedProperties\u2019 [-Werror=missing-field-initializers]\n  122 |                   Query{.expandLevel = 1, .expandType = ExpandType::Both}),\n      |\n```\n\nIf without explicit initialization, compiler will complain about missing field initializers."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "that honestly feels like a bug in using gcc libstdc++ with clang and partial initialization being a new feature.\n\nOk, fine as is."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, this is a little subtle that delegated.selectedProperties is empty, so swapping will result in an empty query.selectedProperties\n\nwould it be more clear if we just did\n\ndelegated.selectedProperties = std::move(query.selectedProperties);\nquery.selectedProperties.clear();\n\nJust so it's more obvious what's going on?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 112,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What are the escaping rules on $select properties?\n\nis \"\\,\" a valid property name?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I didn't find any words in the spec talking about validating the properties"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this goes beyond validation.  if I did\n\n$select=\"\\,\"\nThat I think is valid?\n$select=\",\"\nThat is invalid.\n\nwe should read through the odata spec and understand what the naming limitations are so we can at least detect the base escape case."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "for other examples:\n\nis $select=\"\\0\" allowed?\nwhat about $select=\"\\x24\"?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I didn't find anything in odata spec regarding this \n\nhttp://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#_Toc31358942. \n\nWhat's your suggestion?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you're looking under $select.  Look for a section dealing with property naming conventions/requirements.\n\nSurely it's not legal to put a null terminator in a property, we just need to find what the exact rulesset is."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 270,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I did some research and added some basic validation. Please take a look at the |queryCapabilities| function."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 622,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Does redfish allow $select on arrays?  I've never seen that before.  That seems odd, given that an array would be a collection, so $filter would be used, right?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 622,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This branch is needed because of the current algorithm goes to every leaf of the JSON tree.\n\nNo. I didn't see array can be selected in the spec.\n\nAnd yes, \"select\" arrays should be $filter."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 622,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Oh, I see, so we need to select at every level, and an array might have a sublevel.  Ok.\n\nDo we have guidance on how select works for autoexpand resources?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 622,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Do we have guidance on how select works for autoexpand resources?\n\nMy understanding is that this is the same as $expand + $select, which is unclear. In this commit, AutoExpand is not errored out. And expanded objects can be selected using nested keys.\n\nI can ask this question in the DMTF discussion."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This looks like it will give the wrong result if message objects are added when select is used.  I suspect we need to add more keys to this list.  Take a look at how the messages:: namespace works, we'll need to allow all messages through."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "You mean all error messages should be just selected?\n\nI thought we won't execute Query parameters if the response is not OK. Is there a case where there are messages with OK response code?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> You mean all error messages should be just selected?\nThat's one thing, there are others.  We need to determine the rules.  It might be if there's an @ in the key name?  but we need to research the specs and understand.\n\n\nYes.  not all messages are fatal."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "In the Redfish spec, it only mentioned these four. It doesn't mention other @ properties.\n\n```\nThe @odata.id and @odata.type properties shall be in the response payload and contain the same values as if $select was omitted. If the @odata.context property is supported, it shall be in the response payload and should be in the context property recommended format. If the @odata.etag property is supported, it shall be in the response payload and contain the same values as if $select was omitted.\n```\n\nIf the message contains these four properties, they will be selected by default as well. What are the other keys?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I will close this. Please reopen if you still have concerns."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It doesn't mention other @ properties.\n\n\nThey're not @ properties, they're messages, for example, when errors occur, or there are warnings.  If you'd like them to clarify the spec in that regard, we can discuss it in a meeting, but considering that messages sit outside the redfish schemas, it seems that they should not be effected by select.\n\n\"error\" is one type of these keys."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Adding error to this list should work, right?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "it's just just error.  You will need to append all properties message, which to do that will require reading the spec."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "First sentence should've read \"It's not just error\""
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I don't understand. What are \"all properties message\"? In the current algorithm, if \"error\" is selected, all attributes under error will be selected as well, e.g., \"error/message\".\n\nIn the spec, I didn't find any other top level nodes in response that need to be selected.\n \nhttps://redfish.dmtf.org/schemas/DSP0266_1.15.0.html#service-responses"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Check out section 8.6, 9.3.3.1 (and I'm sure there's others). in the specification.  They outline the message requirements.\n\nFrom the beginning of 8.6 \"HTTP status codes often do not provide enough information to enable deterministic error semantic\".\n\n\nWhen select is used, we shouldn't be stripping the messages as well."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> When select is used, we shouldn't be stripping the messages as well.\n\nThis is already handled by this implementation:\n\n1. \"HTTP status codes often do not provide enough information to enable deterministic error semantics\" is under \"8.6 Error responses\". I would assume responses here have error http code, so that these query parameters won't be execute at all.\n\n2. Even if there is case \"8.6 Error responses\" have Ok HTTP codes (which I didn't find a case in the spec). I added \"error\" in this array, so all attributes under it will be selected.\n\nDo you still have concerns on this?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > When select is used, we shouldn't be stripping the messages as well.\n> \n> This is already handled by this implementation:\n> \n> 1. \"HTTP status codes often do not provide enough information to enable deterministic error semantics\" is under \"8.6 Error responses\". I would assume responses here have error http code, so that these query parameters won't be execute at all.\n\nI think you've read that incorrectly.  that statement means that NOT all messages will result in an error code.  There's a number of messages that return 200, but will still have messages.\n\n> \n> 2. Even if there is case \"8.6 Error responses\" have Ok HTTP codes (which I didn't find a case in the spec). \n\nThere is that case.\n\n> I added \"error\" in this array, so all attributes under it will be selected.\n> \n> Do you still have concerns on this?\n\nYes, there are other parameters other than \"error\" that can contain a message, including per property messages."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Let me try to find these parameters other than \"error\".\n\nDoes adding them into this array (we might get it into a static set instead as it grows) solve your concern?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes, if we have the complete list here, I think the concern would be solved, but there are some that can't be direct string matches (ie per property messages) so I suspect this code will need to change."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Revive this.\n\nI created an issue in https://redfish.dmtf.org/schemas/DSP0266_1.15.1.html#payload-annotations.\n\nFirstly, it might be that we are just worrying too much and the other annotations don't need to implicitly selected.\n\nSecondly, do we implement any of the other annotations today in bmcweb? If not, can we accept this patch as the first iteration and evolve it in the future as needed?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Wrong link. \n\nhttps://github.com/DMTF/Redfish/issues/5175\n\n\"Based on the wording today, I would expect things like @Message.ExtendedInfo and other annotations to be omitted.\"\n\nWe can discuss that in the next DMTF meeting if you want."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Cool.\n\n> Firstly, it might be that we are just worrying too much and the other annotations don't need to implicitly selected.\n\nIf that's true, then we should get a quick answer from DMTF (I'm assuming we'll talk about it tomorrow) and that should be the end of it;  Lets figure out what the consensus is, and then this patchset should be pretty doable to update (or maybe is already correct as it stands).\n\n\nThanks for starting that!"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "DMTF said in the current spec, implementation should omit these unless selected.\n\nGiven that we don't yet have these per property annotations, could we merge this patch as the first iteration?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> DMTF said in the current spec, implementation should omit these unless selected.\n\nYep, I was in the discussion, and they said that might not be the intent, and we spent about 2 minutes talking about it given the time constraints.  Considering that this patch has been in review for a while, and it took us 4 weeks to file the question, we need to give DMTF equal time to respond;  Waiting a little longer (I'm assuming til next Tuesday) until we have the intended answer on this seems like an ok compromise.\n\nOnce we have the \"intent\" called out, we can discuss what to do with this patch, and if we want to check in this patchset as is.\n\n\nDid anyone do the testing on the interop lab to see how most other systems implemented this?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Did anyone do the testing on the interop lab to see how most other systems implemented this?\n\nThese three companies implement $select: Lenovo, HPE, and Dell. All of them have the same behavior: these annotations are omitted unless selected explicitly.\n\n```\n/redfish/v1/Systems/1?$select=Boot\n{\n    \"@odata.context\": \"/redfish/v1/$metadata#ComputerSystem.ComputerSystem\",\n    \"@odata.id\": \"/redfish/v1/Systems/System.Embedded.1\",\n    \"@odata.type\": \"#ComputerSystem.v1_10_0.ComputerSystem\",\n    \"Boot\": {\n        \"BootOptions\": {\n            \"@odata.id\": \"/redfish/v1/Systems/System.Embedded.1/BootOptions\"\n        },\n        \"Certificates\": {\n            \"@odata.id\": \"/redfish/v1/Systems/System.Embedded.1/Boot/Certificates\"\n        },\n        \"BootOrder\": [\n            \"Boot0005\",\n            \"Boot0000\",\n            \"Boot0001\"\n        ],\n        \"BootOrder@odata.count\": 3,\n        \"BootSourceOverrideEnabled\": \"Disabled\",\n        \"BootSourceOverrideMode\": \"UEFI\",\n        \"BootSourceOverrideTarget\": \"None\",\n        \"UefiTargetBootSourceOverride\": null,\n        \"BootSourceOverrideTarget@Redfish.AllowableValues\": [\n            \"None\",\n            \"Pxe\",\n            \"Floppy\",\n            \"Cd\",\n            \"Hdd\",\n            \"BiosSetup\",\n            \"Utilities\",\n            \"UefiTarget\",\n            \"SDCard\",\n            \"UefiHttp\"\n        ]\n    }\n}\n\n/redfish/v1/Systems/System.Embedded.1?$select=Boot/BootSourceOverrideTarget\n{\n    \"@odata.context\": \"/redfish/v1/$metadata#ComputerSystem.ComputerSystem\",\n    \"@odata.id\": \"/redfish/v1/Systems/System.Embedded.1\",\n    \"@odata.type\": \"#ComputerSystem.v1_10_0.ComputerSystem\",\n    \"Boot\": {\n        \"BootSourceOverrideTarget\": \"None\"\n    }\n}\n\n```"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ok, that's really good information to have.  The second one shows that context, id and type are included, so we did the right thing there.  Did you check to see if they validate input?\n\nIf not, that's probably ok.\n\nThis patch I think should be ready to go in."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Did you check to see if they validate input?\n\n```\n/redfish/v1/Systems/1?$select=Boot/NotExist\n\n{\n    \"PCIeFunctions@odata.count\": 6,\n    \"@odata.type\": \"#ComputerSystem.v1_11_0.ComputerSystem\",\n    \"@odata.id\": \"/redfish/v1/Systems/1\",\n    \"@odata.etag\": \"\\\"25bd2d9a1ea4630e845d97\\\"\",\n    \"Boot\": {},\n    \"PCIeDevices@odata.count\": 5\n}\n```"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "interesting.  I\u2019m surprised it\u2019s that common considering they input validation of network input is such a common requirement.\n\nI\u2019m assuming all the systems operate that way?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": ">  I\u2019m surprised it\u2019s that common considering they input validation of network input is such a common requirement.\n\nWho're \"they\"?\n\n> I\u2019m assuming all the systems operate that way?\n\nI checked all systems available on interop lab today.\n\nHPE and Lenovo didn't implement validation. Dell did validate the input of $select. By doing some reverse engineering, I believe what they do is checking if the value of $select is in resolvable in the final JSON. If not, they return 400.\n\nWDYU? Do you want this patch to be perfect? Or we can improve in future patchsets? \n\nI prefer improve in future patchsets. This patch has simple validation already (it checks it is a valid path). And it has been in review for a while."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> >  I\u2019m surprised it\u2019s that common considering they input validation of network input is such a common requirement.\n> \n> Who're \"they\"?\n\nThe other system vendors (non openbmc)\n\n> \n> > I\u2019m assuming all the systems operate that way?\n> \n> I checked all systems available on interop lab today.\n> \n> HPE and Lenovo didn't implement validation. Dell did validate the input of $select. By doing some reverse engineering, I believe what they do is checking if the value of $select is in resolvable in the final JSON. If not, they return 400.\n\nThat seems problematic too for backward compatibility, if a parameter gets added later.\n\n> \n> WDYU? Do you want this patch to be perfect? Or we can improve in future patchsets? \n\nI'm ok with not comparing against a fixed list, but SOME kind of validation is required  to meet the security principals we require.  https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html#implementing-input-validation\n\nSure if you want to break it up into another patch, that's fine, but I'd like to have some understanding of what we need before this patchset merges.\n\nWhat about:\nProperty is in the range [A-Za-z0-9]\nProperty is less than 40 characters long.\n\n\n> \n> I prefer improve in future patchsets.\n\nUnfortunately in open source, people pull and deploy continuously, so if we check in bugs, we get CVEs;  As written, this feature isn't behind the option flag, if you want to do it incrementally, put it behind the option flag, and it can probably go in.\n\n> This patch has simple validation already (it checks it is a valid path). And it has been in review for a while.\n\n\n\nAre we sure we have the recursive bits correct?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> The other system vendors (non openbmc)\n\nI did check all systems in interop lab. What else do you want me to do?\n\n> That seems problematic too for backward compatibility, if a parameter gets added later.\n\nAre you saying returning 400 by checking if a property is in the final JSON is problematic if a new attribute is added? Why is that? Could you elaborate?\n\n> I'm ok with not comparing against a fixed list, but SOME kind of validation is required  to meet the security principals we require.  https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html#implementing-input-validation\n> Sure if you want to break it up into another patch, that's fine, but I'd like to have some understanding of what we need before this patchset merges.\n> What about:\n> Property is in the range [A-Za-z0-9]\n> Property is less than 40 characters long.\n\nThis can be implemented in this patch. But this seems to me OpenBMC specific, not in the Redfish spec. Any other requirements besides this? Do you want to limit the number of properties being selected?\n\n> Unfortunately in open source, people pull and deploy continuously, so if we check in bugs, we get CVEs;  As written, this feature isn't behind the option flag, if you want to do it incrementally, put it behind the option flag, and it can probably go in.\n\nThis is behind insecure-query-params, right?\n\n> Are we sure we have the recursive bits correct?\n\nCould you please point out which part are wrong so I can fix them?\n\nI am okay with fixing concerns without massive change \ud83d\ude0a. But it is difficult if we go with A then several weeks later we drop A completely and say we need to do B."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I have implemented \n\n```\nWhat about:\nProperty is in the range [A-Za-z0-9]\nProperty is less than 40 characters long.\n```\n\nHowever, some properties might contain @, ., #, and /. I added these chars as well. 40 is not enough for some nested properties. I loose the limit to 60."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > The other system vendors (non openbmc)\n> \n> I did check all systems in interop lab. What else do you want me to do?\n> \n> > That seems problematic too for backward compatibility, if a parameter gets added later.\n> \n> Are you saying returning 400 by checking if a property is in the final JSON is problematic if a new attribute is added? Why is that? Could you elaborate?\n> \n> > I'm ok with not comparing against a fixed list, but SOME kind of validation is required  to meet the security principals we require.  https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html#implementing-input-validation\n> > Sure if you want to break it up into another patch, that's fine, but I'd like to have some understanding of what we need before this patchset merges.\n> > What about:\n> > Property is in the range [A-Za-z0-9]\n> > Property is less than 40 characters long.\n> \n> This can be implemented in this patch. But this seems to me OpenBMC specific, not in the Redfish spec.\n\nThe naming is the redfish specification naming pattern.  the 40 is intended to be longer than Redfish would ever put in a Property.\n\n> Any other requirements besides this? Do you want to limit the number of properties being selected?\n\nThat's probably a good idea too.  Maybe a limit of 50?\n\n> \n> > Unfortunately in open source, people pull and deploy continuously, so if we check in bugs, we get CVEs;  As written, this feature isn't behind the option flag, if you want to do it incrementally, put it behind the option flag, and it can probably go in.\n> \n> This is behind insecure-query-params, right?\n \nAs written, I didn't think it was, but I can look more tomorrow.\n\n> \n> > Are we sure we have the recursive bits correct?\n> \n> Could you please point out which part are wrong so I can fix them?\n\nI'm asking the question, because I don't know the answer.  When we select things like Foo/Bar, we need to only recurse into the Complex objects, not the resources, the resources would reset to the start.  That seems subtle, which is why I'm asking how confident you are that it's right.  if you're confident, then that's fine.\n\n> \n> I am okay with fixing concerns without massive change \ud83d\ude0a. But it is difficult if we go with A then several weeks later we drop A completely and say we need to do B.\n\nChange happens in the project.  Either the options are:\n1. We leave things in review until we're CERTAIN they're correct, well tested, and bug free, then once it's merged they don't have to change.\n2. We merge things that look correct, and adapt to change where needed.\n\nFWIW, I generally try to go for #2."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> When we select things like Foo/Bar, we need to only recurse into the Complex objects, not the resources, the resources would reset to the start. \n\nI don't understand this comment. I agree the recursive part is subtle but we are programming on a tree, and recursion algorithm is intuitive on tree, right? We used recursion on expand before already. I have tried to write unit test to cover all cases. If you find a gap in the test case, I can add.\n\n> 2. We merge things that look correct, and adapt to change where needed.\n\nGiven that some of the issues are really ambiguous and we don't know the answer (neither does DMTF). I prefer going for #2."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": ">  I agree the recursive part is subtle but we are programming on a tree, and recursion algorithm is intuitive on tree, right?\n\nNope, there are two types of Redfish structures in an object, a ComplexType, and a Resource.  As written this recurses into both, which I don't believe it should.\n\n\n> Given that some of the issues are really ambiguous and we don't know the answer (neither does DMTF). I prefer going for #2.\n\nSure, but I don't believe the complex type versus property is ambiguous at this point.  Has there been any more discussion on the issue trackers?\n\nArguably this is a good reason to wait for a response from DMTF about how this should behave."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> Nope, there are two types of Redfish structures in an object, a ComplexType, and a Resource.  As written this recurses into both, which I don't believe it should.\n\nWhy does this matter from an implementation point of view? The spec clearly said \"The syntax for properties in objects or properties in arrays of objects shall be the object and property names concatenated with a slash (/).\". Why shouldn't it recurse into both Resource and ComplexType? Which one should it recurse? And, by Resource you mean an \"URI-addressable Redfish data structure\"? Why is it involved? We don't have expand here.\n\n> Arguably this is a good reason to wait for a response from DMTF about how this should behave.\n\nThe ticket I create is not about complextype. It is about annotation properties. https://github.com/DMTF/Redfish/issues/5175\n\nThe latest feedback is that we are doing the correct thing here: \"error\" will always exist regardless of $select. Other annotation properties aren't a must."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I believe this thread can be closed. Outstanding concerns are moved to other threads."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": ">Why does this matter from an implementation point of view? The spec clearly said \"The syntax for properties in objects or properties in arrays of objects shall be the object and property names concatenated with a slash (/).\" Why shouldn't it recurse into both Resource and ComplexType\n\nBecause in complex objects, the elements aren't \"Properties\".  So the above statement doesn't apply."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Apologize, still unclear. Could you kindly point out what are \"complex objects\" referring to? And do you have some solution on your head for this situation?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Take a look at any schema csdl file and search for \"ComplexType\"\n\nI believe there are also references in the odata specification."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 645,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This was resolved in the Discord discussion. https://discord.com/channels/775381525260664832/855566794994221117/1003775864053448754\n\nWe are doing the right thing. The spec allows selecting both Resource and ComplexType."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 670,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "in theory a select with nothing in it is invalid right?  We probably don't need an optimization for this case, I would expect it to return a query error earlier."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 670,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I believe what you mentioned here is a different thing. This branch handles that after $select, the result JSON becomes empty. And yeah, it can be just removed. \n\nAnd I can add a branch in the parsing part to error out when $select value is empty."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 670,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think you've seen my concern.  I'm going to resolve, and we'll reopen this if it's still an issue."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 671,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In terms of algorithms, this is making a complete copy of the data set, and several copies of each key in the dataset.  In general in bmcweb, we try to avoid complete replacement of the json object, as it has lead to subtle bugs in the past with async operations.\n\ncould we just, as part of recursiveSelect, do something like\n\n\nrecursiveSelect(json, selectList){\n\n    auto key = json.begin();\n    while(key != json.end()){\n       if (key.first in selectLIst){\n          recursiveSelect(key.second, selectList);\n          continue;\n          key++;\n       }\n       \n       key = json.erase(key);\n    }\n}\n\nI think this also greatly simplifies the \"parentSelected\" behavior."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 671,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This doesn't work when selected properties are nested keys, for example, \"Parameters/AllowableValues\". We still need to do recursion and traverse to the leaves.\n\n> this is making a complete copy of the data set, and several copies of each key in the dataset\n\nOnly $selected keys are copied. And only $selected values are copied.\n\nLet me think whether erase while doing recursion is possible"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 671,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> This doesn't work when selected properties are nested keys, for example, \"Parameters/AllowableValues\". We still need to do recursion and traverse to the leaves.\n\nI'm not following why this doesn't work.  Sure, I didn't handle the split on the key to do that matching and construct the new allowlist.  That would look nearly identical to the code in readJson, so it seems like it should be doable.\n\n> \n> > this is making a complete copy of the data set, and several copies of each key in the dataset\n> \n> Only $selected keys are copied. And only $selected values are copied.\n\nYep, but they're still copied and reconstructed.\n\n> \n> Let me think whether erase while doing recursion is possible\n\nCool.  Let me know if you need help."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 671,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Please take a look at what I have now"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 730,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We should be using a redfish message for this."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 730,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Right, that's what I wanted to do until I didn't find a not implemented message in https://github.com/openbmc/bmcweb/blob/24861a286eb148fcec22afecffb73b596752700f/redfish-core/include/error_messages.hpp"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 730,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "that file is losely based on the Base registry, which is defined by DMTF.  FWIW, I think this shouldn't use not_implemented, it should do queryParameterValueFormatError, given that it's a combination of query params that's not available (and isn't really defined by the standard yet)."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 730,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I changed to queryParameterValueFormatError and moved them into the parse function."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 315,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "8718f39f8d70861a9adff91cd34a40ecc37f6bcb",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/6",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654904244,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 321,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "db60a799b6847f5202618011c896cb8b66acc74c",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/7",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654904283,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 321,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "c88278b54673aef573a0f74427f882f923e6652d",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/8",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654904534,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 321,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "b90e41f4f36c8f915368894050c791794d109a3e",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/9",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654905495,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 321,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "08a0d8e4819af6f61cecbf079c834617926cb5ef",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/10",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654906522,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 81,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 312,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "24c8a05acc8686524a7085750750d9f71201ee10",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/11",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654906840,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 313,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "9e0ab1630d0286b9654fd5729c2628ec3b59edc8",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/12",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654907536,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 313,
            "sizeDeletions": 1
        },
        {
            "number": 13,
            "revision": "42ff2554567208816163e693e6e1891adad50bdd",
            "parents": [
                "593f6449a6afa130a28c4cc9a55fb857e019917e"
            ],
            "ref": "refs/changes/57/54457/13",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1654907547,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 96,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 135,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 313,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "369ac5f33d64a894685af508a1fed3cc99e9c4dc",
            "parents": [
                "4c97f2d8532b7d9d79e2c47dc130e22fc9c60f06"
            ],
            "ref": "refs/changes/57/54457/14",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1655255343,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 156,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 367,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "e15322e72b77c1b9d54a2a4573f6b23b73db8d94",
            "parents": [
                "d7f04fd9ef456a6e6871adba6f3c5803f1ee88c6"
            ],
            "ref": "refs/changes/57/54457/15",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1655255366,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "It is only a partial review, I am not familiar enough with the json, so recursive section took longer then I thought."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 221,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "do you need this?\n\n```\n[](char c) { return c==',';}\n```\nmight be better"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 221,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I thought compiler will do some optimization here. If you search \"is_any_of\", you can find a lot of other boost lib is using it for a single character.\n\nhttps://github.com/boostorg/fiber/blob/71f5b89bd195b5fe24225d80aaf0649744bc8c59/src/numa/linux/topology.cpp#L104"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 268,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "nit:\nThere are two statements (lines), in this \"if\" condition, and I dis-prefer it"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 268,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This check is arguably in the wrong spot.  We shouldn't do a second iteration of the query params.\n\nPlease move this check to line 331, and make it use ret.selectedParams to determine if both expand and select are enabled."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 268,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 679,
                    "reviewer": {
                        "name": "John Broadbent",
                        "email": "jebr@google.com",
                        "username": "jebr224"
                    },
                    "message": "Is it a safe assumption, that all non-array and non-objects are properties.\n(It probably is, but it is not clear to me)"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 679,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I believe so, if you look at all the JSON types, https://json.nlohmann.me/api/basic_json/type/, only array and objects can contain children JSON nodes."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 679,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "in that list you linked, discarded and binary types aren't properties in this context, so johns question is valid;  With that said, bmcweb should never be producing either of those types, so it seems like a reasonable assumption.  Even if we did produce those types, this code doesn't break."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 156,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 367,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "73b8982fb7777df541eed706a90da1ddf747ba1c",
            "parents": [
                "01358549a0ee0d2f321f037d670f1981c8533623"
            ],
            "ref": "refs/changes/57/54457/16",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1656347464,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 156,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 367,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "634c220daa413cfb4bf9ccee78e1c5c22bf4194c",
            "parents": [
                "01358549a0ee0d2f321f037d670f1981c8533623"
            ],
            "ref": "refs/changes/57/54457/17",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1656356348,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 155,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 366,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "028d238f113f337c16f396d60b353502505fab15",
            "parents": [
                "a170f2756716f13d906678ab93351ead035e37b4"
            ],
            "ref": "refs/changes/57/54457/18",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658343870,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Mike replied"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 155,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 364,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "8a5cbac9ad12f2c172744f0428b71b7d2ac312f6",
            "parents": [
                "0d7702c0246c5948caf12a3e441f74952c7d0ccf"
            ],
            "ref": "refs/changes/57/54457/19",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658507095,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 155,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 364,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "b8b51b38f799f1ae5cc6f3d6bdf2ac6c7d9fcdc6",
            "parents": [
                "45248ba327bcf330fd2e49f90a59159fdf8ebecc"
            ],
            "ref": "refs/changes/57/54457/20",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658795412,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 150,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 359,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "218ca04e1a89baaaefac2f3165801adeb43df423",
            "parents": [
                "45248ba327bcf330fd2e49f90a59159fdf8ebecc"
            ],
            "ref": "refs/changes/57/54457/21",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658796684,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is the only debate that I am aware of.\n\nI see the other implementation omits this prefix1/${reserved_property}. WDYT?"
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done\n\nI have fixed this. Now our behavior is the same as the other systems."
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "line": 274,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure, that seems like a good first step."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 370,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "385a7a47c4ebd173fe862549873f3aa97ad1420a",
            "parents": [
                "349094b29002395cd5d441992a8f574b775a46dc"
            ],
            "ref": "refs/changes/57/54457/22",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658890997,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 82,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 204,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 457,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "ec58410dab42cfc029cc8eaed99b9f195b590e32",
            "parents": [
                "349094b29002395cd5d441992a8f574b775a46dc"
            ],
            "ref": "refs/changes/57/54457/23",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658894907,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 204,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 415,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "0a79ebea5fa350f68932d010f9bd57127d86599e",
            "parents": [
                "3648c8be1c03c8ebe099185bc651613862fc0027"
            ],
            "ref": "refs/changes/57/54457/24",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1658943813,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generally you iterate a char by value, not reference."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Properties can't contain any of these, right?\n\n@ is reserved for messages, which I don't think users should be allowed to select.\n\n. I think is ok for multidepth.  Ideally we would make sure that \"foo..bar\" is disallowed, but that might be a little overly paranoid.  Up to you.\n\n# is reserved for fragments, and I don't think a property can have a # in the name, right?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "@: all implementation allow selecting @odata.id at least. The other properties include \"BootOrder@odata.count\", \"BootSourceOverrideTarget@Redfish.AllowableValues\". All the implementation allow selecting these properties.\n\n.: 2 of 3 implementation don't check \"foo..bar\". So I prefer keep it as is here.\n\n#: \"#ComputerSystem.Reset\" is one of those properties. 1 of 3 implementation allow selecting this.\n\nAren't these valid properties?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> @: all implementation allow selecting @odata.id at least.\n\nI thought the @odata.id header was required to be included regardless?\n\n> The other properties include \"BootOrder@odata.count\", \"BootSourceOverrideTarget@Redfish.AllowableValues\". All the implementation allow selecting these properties.\n\nACK.\n\n> \n> .: 2 of 3 implementation don't check \"foo..bar\". So I prefer keep it as is here.\n\n\"other implementations do this incorrectly\" isn't a good justification, but sure, if we want to push it to another patch, that's fine.\n\n> \n> #: \"#ComputerSystem.Reset\" is one of those properties. 1 of 3 implementation allow selecting this.\n\nACK, I forgot actions had # in them.\n\n\n> \n> Aren't these valid properties?\n\nNo, technically ComputerSystem.Reset is an action, not a property, but I was looking at the property rules, which is why I got confused.  This looks fine."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 288,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "missing const."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 288,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Yes, I used to change the property, forgot to update in the latest patch. Will do"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 288,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 392,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is going to produce the wrong message.  I think you want maybe queryCombinationInvalid?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 392,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "nice, will do."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 392,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 392,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't work, right?  erase() invalidates iterators, so when you do this, nextIt is now invalidated, right?\n\nhttps://json.nlohmann.me/api/basic_json/erase/#notes\n\nLook at note #1.\n\n\nI suspect we need to be doing something like\n\nit = root[currRootPtr].erase(it.key());\n\nto avoid lifetime issues?\n\n\nIt looks kinda like you've worked around this with json_pointer?  I'm assuming you saw issues, which is why you had to go back to root every time you did an erase (guessing)"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Let me think about it.\n\nIf JSON use std::map under the hood. erase won't invalidate other iterators than the erased one. See Iterator validity in https://cplusplus.com/reference/map/map/erase/.\n\nWhy does unit test work?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Okay, I got it. Here, I used the #3 overload.\n\n```\n// (3)\nsize_type erase(const typename object_t::key_type& key);\n```\n\nThe note for this is https://json.nlohmann.me/api/basic_json/erase/#notes\n\n```\n3. References and iterators to the erased elements are invalidated. Other references and iterators are not affected.\n```\n\nI want to use json_pointer to erase elements but that's not supported yet. Regarding why I keep a reference to root, that's because it's more clear to me than operating the reference to subtree nodes.\n\nLet me know if there are other questions or concerns."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I want to use json_pointer to erase elements but that's not supported yet\n\nNor will I suspect it will ever be, because generally the only reason to use it would be inefficient if you already walked the structure, you have an iterator to the element you want to erase, and erase is required to deal with things that you know exist in the tree.\n\n\nACK on only invlidating this pointer, but we're still duplicating lookups by using the json_pointer to the root.  IN theory those could still invalidate any item on the root object."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "> but we're still duplicating lookups by using the json_pointer to the root. IN theory those could still invalidate any item on the root object.\n\nCould you explain what you want me to do here? We already have a lot up lookup everywhere."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "walk the tree.  if a node isn\u2019t in the select statement, remove it immediately using the iterator to avoid re-looking up the key by the Json pointer which will re-recuse the json object that we already recursed.\n\nthat deletes a bunch of code I think?  if you don\u2019t want to do that, I can look at it and stack at patch on top."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 754,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I have used the iterator to remove. It doesn't save any line though. It does save a json pointer look up as you said. \ud83d\udc4d \n\nLet me know if there's anything else"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Same problem as above, you're invalidating iterators."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "In this branch, there's no iterator at all. I replied your concern in the above thread and said it is WAI.\n\nLet me know if there are other questions or concerns."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> In this branch, there's no iterator at all. I replied your concern in the above thread and said it is WAI.\n\ncurrRoot is a pointer to something in the root object, which you've just modified.  Yes, it's not an iterator, but pointers (references in this case) invalidate with the same rules.\n\n> \n> Let me know if there are other questions or concerns."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "After erase, we return. currRoot is never referenced anymore. What is the problem?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "that\u2019s a good point, shouldn\u2019t we be recursing here?  what if it\u2019s an array of objects?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "One of the existing implementation allows selecting properties in an array of objects. The other two have different behaviors. It's ambigious. That's why I used to recurse here but removed in newer patches.\n\n```\n/redfish/v1/Chassis/1/Thermal?$select=Fans/Reading\n{\n    \"Temperatures@odata.count\": 15,\n    \"@odata.id\": \"/redfish/v1/Chassis/1/Thermal\",\n    \"Fans@odata.count\": 14,\n    \"@odata.context\": \"/redfish/v1/$metadata#Thermal.Thermal\",\n    \"@odata.etag\": \"\\\"a8b2942326b383598e52eb\\\"\",\n    \"@odata.type\": \"#Thermal.v1_7_1.Thermal\",\n    \"Fans\": [\n        {\n            \"Reading\": 5712,\n            \"@odata.id\": \"/redfish/v1/Chassis/1/Thermal#/Fans/0\"\n        },\n     ],\n }\n\n\n{\n    \"@odata.context\": \"/redfish/v1/$metadata#Thermal.Thermal\",\n    \"@odata.etag\": \"W/\\\"611928B7\\\"\",\n    \"@odata.id\": \"/redfish/v1/Chassis/1/Thermal\",\n    \"@odata.type\": \"#Thermal.v1_6_2.Thermal\",\n    \"Fans\": [\n        {\n            \"Reading\": 13\n        },\n        {\n            \"Reading\": 13\n        },\n        {\n            \"Reading\": 13\n        },\n        {\n            \"Reading\": 13\n        },\n        {\n            \"Reading\": 13\n        },\n        {\n            \"Reading\": 13\n        },\n        {\n            \"Reading\": 13\n        }\n    ]\n}\n\n```\n\nI have created an issue https://github.com/DMTF/Redfish/issues/5188.\n\nFor now, do we accept not allowing selecting on array of objects as what Dell does? This is only an issue with AutoExpand resources."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": ">  This is only an issue with AutoExpand resources.\n\nThis is not entirely true. I take it back. There are arrays elsewhere. But mostly likely people want to select properties of objects array when query is expanded."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> For now, do we accept not allowing selecting on array of objects as what Dell does?\n\nWe probably need to document a TODO list that we agree on here.  Yes, I don't want to hold up this patch any longer, but I'd like to make sure we have consensus on what needs done to make it correct before it merges.\n\nOn the list:\n1. Array selection handling.\n2. Complex vs Resource type objects selection (is the syntax the same)\n\nAnything else?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ALso, combining with expand."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Sure, will put them as TODOs in comments."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 768,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d\n\nClosing out this thread.  We can discuss on individual TODO items."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 204,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 415,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "feb007dd1bda5661a1ab5541cb4816d1b81f4d93",
            "parents": [
                "3648c8be1c03c8ebe099185bc651613862fc0027"
            ],
            "ref": "refs/changes/57/54457/25",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1659038720,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this a filesystem path?  Dbus properties don't exist in the filesystem, so won't this give us incorrect behavior on escaping?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "See the other thread. Does splitBy \"/\" look good?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "isn\u2019t it a json pointer?  should we be storing as that?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 82,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "No need to care about path or json_pointer anymore after going with split_by \"/\""
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 294,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this have to do with the filesystem?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 294,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is what the current algorithm relies on. We store the intermediate path to help the recursion so that we don't recurse into subnodes that are not selected.\n\nI use fs::path here so that it's very easy to construct intermediate paths from nested select like \"/a/b/c\".\n\nIf you agree, I can change to splitBy(\"/\")."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 294,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "yeah, I think split by / is going to make this a lot better.  we should decide if we want to split first or split later, but that\u2019s a discussion we can have."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 294,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Went with split by later in |performSelect|."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 740,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this is going to be duplicating a lot of comparisons.  Should we be breaking up the childPtr into pieces, and rely on something that does direct comparison at this level?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 740,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Could you elaborate? How do you know which subnode is selected?\n\nThe current algorithm does some preprocessing (stores the intermediate path) so that lookup at each level will be O(1) + O(len(childPtr)). This is one of the most efficient algorithm I could think about.\n\nThe other efficient option I have is to implement a Trie. But that requires a lot of extra codes."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 740,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "on line 754, you\u2019re redoing a lookup for something we\u2019ve already validated.  we\u2019ve already verified the parent objects, the only thing left to do is to delete the leaf, right?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 740,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Erase via iterator now."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 795,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "why do we need to make a copy here?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 795,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is to change from fs::path to string. This can be removed."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 795,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 795,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 864,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should we simplify processSelect by relying on the completionHandler() call on line 867.  This is the same thing processTopAndSkip does."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 864,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "It is reasonable. Will do."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 864,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 204,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 415,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "0093c17562676afb5dbfcab14a3572be06e8c6fb",
            "parents": [
                "3648c8be1c03c8ebe099185bc651613862fc0027"
            ],
            "ref": "refs/changes/57/54457/26",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1659131848,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FYI, I stacked a patch on top with what I was thinking for the tree walking.  Lets get this patch in first, then I think the one I wrote is just an optimization."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Other thing I realized, the odata spec says \"The value of the $select query option is a comma-separated list of properties, qualified action names, qualified function names, the star operator (*), or the star operator prefixed with the namespace or alias of the schema in order to specify all operations defined in the schema. Only aliases defined in the metadata document of the service can be used in URLs.\"\n\nI don't think we handle the namespace or * things today, but that's something to be added to the TODO so we can get this patch moving."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. See the TODOs I left."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 287,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, should be const."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 287,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Not anymore. I changed property in the loop."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, I believe emplace would avoid the string copy here."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nIt saves just an extra move?\n\nI was following https://abseil.io/tips/112. But I am okay with changing here."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "From the above.\n\n> Consequently, if you have a choice between push_back() and emplace_back() with the SAME ARGUMENTS, your code will tend to be more readable if you choose push_back(), because push_back() expresses your intent more specifically.\n\nIn this case, you don't have the same arguments, you have\n\ninsert(std::string(str))\nversus\nemplace(str)\n\nwhich can use the std::string_view constructor for string and save the type."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 304,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Oh, I see. This is resolved anyway in your CL."
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 728,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Looks like this now doesn't get used, except in recursive calls to itself, can it be removed?"
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "line": 728,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Still need it in the array branch.\n\nI guess we can accept this for now. I will help review your patch on top of it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 206,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 415,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "318543523d26e9d6925f3ef3569e50ef38b72244",
            "parents": [
                "dd64162dfe253640d80ee3f5d3c0eb0be82e9619"
            ],
            "ref": "refs/changes/57/54457/27",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1659391827,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 215,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 428,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "e9a920b1025dcc209707ae2548ca53269f69e94f",
            "parents": [
                "dd64162dfe253640d80ee3f5d3c0eb0be82e9619"
            ],
            "ref": "refs/changes/57/54457/28",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1659392290,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "TODO LGTM."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 215,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 437,
            "sizeDeletions": 0
        },
        {
            "number": 29,
            "revision": "e155ab54ec5ad4c31937f4d7de8b502e91468e43",
            "parents": [
                "85e6471b5e526c2f752623a01c14c09c7cf8c9cd"
            ],
            "ref": "refs/changes/57/54457/29",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659396819,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/query_param.hpp",
                    "type": "MODIFIED",
                    "insertions": 215,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 437,
            "sizeDeletions": 0
        }
    ]
}