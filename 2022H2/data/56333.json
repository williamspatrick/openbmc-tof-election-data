{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I4660788c09521f0e5f49e02d365f1939839bad7e",
    "number": 56333,
    "subject": "Initial doc for Redfish OEM support",
    "owner": {
        "name": "Jason Bills",
        "email": "jason.m.bills@linux.intel.com",
        "username": "jmbills"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/56333",
    "hashtags": [],
    "createdOn": 1659726006,
    "lastUpdated": 1668031098,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1659726006,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1659726027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659726027,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1659726046,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48642/ : SUCCESS"
        },
        {
            "timestamp": 1659732585,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1659734765,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1659821617,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1659973606,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n(5 comments)"
        },
        {
            "timestamp": 1659980199,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1659980246,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659980246,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1659980442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48750/ : SUCCESS"
        },
        {
            "timestamp": 1660863350,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668030878,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased."
        },
        {
            "timestamp": 1668030931,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668030932,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1668031098,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55139/ : SUCCESS"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "59f40c861546037a814ffd5ec805ae01ad6170f7",
            "parents": [
                "fa1cca721c824446929705bac1654ec7ae0973fe"
            ],
            "ref": "refs/changes/33/56333/1",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1659726006,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redfish-oem.md",
                    "line": 12,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We need to add some more background here.\n\n1. How do we ensure that we get interop in industry between systems (which is the whole point of redfish)?\n2. Are there any guard rails (like the ones in OEM_SCHEMAS.md) that would still apply?\n3. How has the OpenBMC OEM namespace been handled so far?  Has it gone well?\n4. How has company specific OEM namespace items been handled so far?  Has it gone well?\n5. What other projects (cough, sailfish, cough) have tried this and failed?  Why did they fail?"
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 12,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "I'll do my best, but I don't know the answers to many of these.  Does anyone have suggested text?\n\nAlso, are the answers to these part of the problem description, or will they fit better in requirements?"
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not true, there's a couple OEM schemas in upstream today, and company specific features in APIs, including intel crashdump which was at one point oem.\n\nAlso, patches are a companies prerogative on how they want to maintain their downstream code.  They are more than welcome to use SVN, CVS, tarballs, or a beacons of Gondor style Morse code mechanism with torches.  I don't see how anything in this document can change how people manage their forks, because we have no enforcement there;  At the end of the day, code is going to end up in a patch SOMEWHERE, so the idea that it's not a patch needs rephrased."
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "My assumption was that those are also considered part of this problem that we want to solve.  Aside from those that are already in, will new company-specific OEM things be considered?\n\nI can generalize away from \"patches\", but wouldn't the solution in this document eliminate the need to fork bmcweb for OEM support?"
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "On the mailing list we talked about single repo, which would turn these into branches.  Does that solve the problem?  Either way, probably worth putting in the background, or at least the alternatives considered section."
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "I guess it could.  If someone moves to a fork of the single repo, then the issue of maintaining an individual bmcweb fork is gone."
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Any evidence to back this up?"
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Only that we have decided not to allow OEM resources to be checked into bmcweb.  I guess I can find a statement to that effect somewhere, if needed?"
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FWIW, when we first talked about this, I thought the intent was for upstream separable oem modules (in the same track as IPMI).  \"I want downstream modules\" is a very different problem space, and implies that we're going to have a never changing library interface.  I'm not sure that's technically possible.\n\nSo the background really needs to discuss:\n1. How do we build a library interface?\n2. How do we ensure that the project remains buildable.\n3. What other projects (I'm thinking kernel modules) have solved this, and how did they solve it?\n\n\nFor downstream, just fork bmcweb, add your stuff, and rebase it at a reasonable interval.  If the interfaces break too often, try to come up with a subset that will be more concrete."
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "I guess I thought separable oem modules and downstream support were the same problem.  I will reword this to focus on separable modules.\n\nAre these questions for the background section or will they fit better in other sections?  Maybe I don't understand the questions..."
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lots more details needed here:\n1. Privilege registry is a thing that requires changes for any OEM schema.  Is that required?  Do we have to finish those per-system designs first before this can start?  (I think the answer is yes).\n2. Should we require that schemas meet the upstream requirements?  Do we need testing to verify that they meet the requirements?\n3. Does it need to be maintainable?\n4. What guarantees will the interfaces provide, given that we can't compile the code?  Are they versioned?  What's the TTL for a breaking change to go in?\n5. What sort of Features do we need in this interface?  Does it allow adding:\nProperties?\nActions (technically kind of answered below)?\nResources?\nCollections?\nMessageRegistries?\nPreviously unknown namespaces?\nEventing?\nBinary outside-the-redfish-tree payloads (like crashdump)?\n5. What do we do about the existing OEM?  Do we port those forward first, or do we keep two mechanisms?  (side note, I'm not going to be super happy with the second answer).\n\n\nTake another stab at answering the above, and we can go from there."
                },
                {
                    "file": "designs/redfish-oem.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "I will work on answers to these in the next draft."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-oem.md",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 66,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "62a7eb5f353fa00fea4f83cc0c3883488f176c42",
            "parents": [
                "fa1cca721c824446929705bac1654ec7ae0973fe"
            ],
            "ref": "refs/changes/33/56333/2",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1659980199,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Any further comments on the updated requirements?  Do they look good enough to start looking at implementation?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-oem.md",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "d66c0a70ff4e587a37d0b9ce7520b09d796bb605",
            "parents": [
                "1adafbb37e1325af7d62aea8589114e483204e53"
            ],
            "ref": "refs/changes/33/56333/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1668030878,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "designs/redfish-oem.md",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 0
        }
    ]
}