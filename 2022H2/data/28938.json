{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I3c918df15d3efce06f1d07dcc927a8c5d627e66e",
    "number": 28938,
    "subject": "Add Activate method in Activations interface",
    "owner": {
        "name": "Vikram B",
        "email": "vikram.bodireddy@linux.intel.com",
        "username": "vbodired"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/28938",
    "hashtags": [],
    "createdOn": 1580476315,
    "lastUpdated": 1665685115,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1580476315,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1580476346,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1580476361,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/42594/"
        },
        {
            "timestamp": 1580476473,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/42594/ : SUCCESS"
        },
        {
            "timestamp": 1580726243,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(4 comments)"
        },
        {
            "timestamp": 1580737564,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1580737590,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1580737602,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/42691/"
        },
        {
            "timestamp": 1580737647,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1580737726,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/42691/ : SUCCESS"
        },
        {
            "timestamp": 1580757872,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1580758307,
            "reviewer": {
                "name": "Patrick Venture",
                "email": "venture@google.com",
                "username": "pstrinkle"
            },
            "message": "Removed reviewer Patrick Venture."
        },
        {
            "timestamp": 1580761713,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1580761738,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1580761750,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/42720/"
        },
        {
            "timestamp": 1580761815,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1580761859,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/42720/ : SUCCESS"
        },
        {
            "timestamp": 1580784715,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1580795876,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1580796836,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1580796930,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1580797767,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1580797970,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1580805569,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1580838185,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1580887965,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 3: -Code-Review\n\n(1 comment)"
        },
        {
            "timestamp": 1580932159,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1581415877,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1581415898,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1581415910,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/43528/"
        },
        {
            "timestamp": 1581415955,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/43528/ : FAILURE"
        },
        {
            "timestamp": 1581417266,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 5: Patch Set 4 was rebased"
        },
        {
            "timestamp": 1581417289,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1581417300,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/43530/"
        },
        {
            "timestamp": 1581417343,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://openpower.xyz/job/openbmc-repository-ci/43530/ : FAILURE"
        },
        {
            "timestamp": 1581418174,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1581421696,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1581421725,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1581421736,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6:\n\nBuild Started https://openpower.xyz/job/openbmc-repository-ci/43534/"
        },
        {
            "timestamp": 1581421854,
            "reviewer": {
                "name": "Jenkins",
                "email": "openbmc-ci-admin@ozlabs.org",
                "username": "jenkins-openbmc"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://openpower.xyz/job/openbmc-repository-ci/43534/ : SUCCESS"
        },
        {
            "timestamp": 1581447392,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1581501244,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582051764,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582076483,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1582129755,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582166114,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582646363,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582650257,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582651370,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582819883,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> (1 comment)\n\n@Patrick, Can you update if you have any further inputs and comments on Richard's reply?"
        },
        {
            "timestamp": 1582834422,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1582843338,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1582855906,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1583756337,
            "reviewer": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "message": "Patch Set 6:\n\n@Patrick , any further update?"
        },
        {
            "timestamp": 1583872497,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1583872623,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> @Patrick , any further update?\n\nSince we don't seem to be converging on an agreement on these commits very quickly, it might be useful to start a mailing list thread.  I'm not sure if everyone is paying attention to, or remembers all, all the design paths this feature has gone.  I wasn't even completely aware that this change was related to 28237."
        },
        {
            "timestamp": 1583879774,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1665685115,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5f191e04615ed8baac16f68a467bd90231a8406a",
            "parents": [
                "1702368dc68e36eb59c78530fcfb3d87d491f3ca"
            ],
            "ref": "refs/changes/38/28938/1",
            "uploader": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "createdOn": 1580476315,
            "author": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Add activate method in Activation interface"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Certain properties like ApplyOptions, Priority is required when activating an image. In order to better reflect the interfaces exposure time and activating the same in proper manner, use Activate method to initiate Activation by providing the properties as parameters"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "As the property is not from this interface, i think either we need to add dict[Interface, dict[string, variant[byte,boolean]] or just indicate current acceptable parameters.\nClearConfig  boolean\nRedundancyPriority byte"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "i described it as later way, that is as 2 parameters to the method instead of specifying interfaces as well."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "this must indicate as next option to provide the Activate a version. \ni meant, \n1. Modify RequestedActivation to *Active*\n2. Call Activate method to *Activate* the firmware version with optional parameters as needed."
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Still specify it as 2 options, or update saying that let's deprecate the RequestedActivation."
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 26,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "0271538e4b8d6450037a07371e8cad4a0a52fe8c",
            "parents": [
                "b43056fbbf3342b6e822854b849b02c1568429f8"
            ],
            "ref": "refs/changes/38/28938/2",
            "uploader": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "createdOn": 1580737564,
            "author": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "this is not optional now right. \nI meant we need to mandatorily provide. Please either change it to Optional / remove the text message"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 17,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "same as above"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 17,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 36,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "6fb8c4f7fcde7e0148f8199b841527495c275c1b",
            "parents": [
                "b43056fbbf3342b6e822854b849b02c1568429f8"
            ],
            "ref": "refs/changes/38/28938/3",
            "uploader": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "createdOn": 1580761713,
            "author": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "The interface was using `RequestedActivation` to do the \"activate' operation.\nSo I was expecting the `RedundancyPriority` and `ClearConfig` to be the properties of this interface, instead of the method parameters.\n\nBy adding this method, the interface will have two ways to do the \"activation\", which we should avoid."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Yes Lei YU.\nBut this keeps on increasing the complexity and the order of the execution. Hence the correct plan would be to deprecate the RequestedActivation, and go ahead with Activate method (which can accept optional RedundancyPriority & ClearConfig attribute). \n\nThe problem with old approach is (before RequestedActivation, other properties must be set, and in that case, we need to differentiate the state of the object as the property value during that time, will not be applicable or will convey different meaning, till RequestedActivtion is applied. With method approach, this can also be avoided."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "So eventually this change will break existing code (involves bmcweb/webui).\nI think we should be very careful about such changes.\n\n> The problem with old approach is (before RequestedActivation, other properties must be set, and in that case, we need to differentiate the state of the object as the property value during that time, will not be applicable or will convey different meaning, till RequestedActivtion is applied. With method approach, this can also be avoided.\n\nI am not following.\nDo you mean the `RedundancyPriority` and `ClearConfig` are not really the properties of an activation object?\nI am not sure for what `RedundancyPriority` is used here, but for `ClearConfig`, it could be explained as a property of activation, to indicate that if this is to be activated, the config shall be cleared."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "An off-topic discussion:\nWhen I was first using the phosphor-dbus-interfaces, I remembered that someone suggested that it's encouraged to use properties instead of methods. I do not remember who made this suggestion. But if you see existing interfaces, we do use properties a lot to express actions, e.g. RequestedActivation, RequestedBMCTransition, etc.\n\n@Patrick @Brad @Adriana do you know the history?"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "yes, that's correct expectation Lei, as long as the value act like a attribute and used to change, property makes sense. (Because keeping it as property allows us to get the PropertiesChanged signal and easier to maintain the state value). \n\nBut in this case, with (more values to be set), using property will not be a good one, and better to switch to method based one. (esp, the order of property change will be a troublesome to maintain).\n\n@Patrick, earlier we discussed the same in IRC (just thought of refreshing your memory :) )."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Previously when there was only one thing to change we used properties often rather than method calls.  When there are multiple items to change we tend to use method calls.  I don't recall the rationale for preferring properties when there is only a single thing to change, except that it is probably just simpler.  It has been a long time for me now.\n\nIf this is going to be a required method, we need to make sure that all the code repositories consuming this Activation interface are bought in to support this method call.  We need to ensure that phosphor-bmc-code-mgmt and openpower-pnor-code-mgmt are planning to support this.  Otherwise those repositories will start to fail to compile because they haven't implemented the pure-virtual function that gets spawned from this."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Let's involve @Adriana and see her comments.\n\nIf this change is to be merged, we need further changes to:\n* bmc/pnor/psu-code-mgmt update the code to use the new method;\n* bmc/pnor/psu-code-mgmt remove the code related to RequestedActivation.\n* Remove the `RequestedActivation` property here."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "We could stage the migration, make this method a no-op in the *-code-mgmt repos for now, implement the method as time permits, maybe Vikram can help, then move bmcweb and any other repo calling RequestedActivation to this new method, and finally deprecate it."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Yes, we will eventually need to deprecate 'RequestedActivation'. I will submit the changes in phosphor-bmc-code-mgmt and bmcweb soon."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "how is this possible ? are we reserving any value for this ? \n\nNote: In your earlier patchset it was property name with value, so there was a way not to expose the same. As current patch expose this as parameter, this can't be a optional value / not -specified"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "I presumed, if there are no params are passed the activate happens on the default firmware target i.e with redundancy priority '0'. I will change it back to Dict to be consistent and compatible to older approach as well."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Is it a value of the target priority to replace?\nE.g. if the system has 3 versions, one with priority 0 which is the running software;\nthe others with priority 1 and 2, which are the backup software.\n\nAnd when this RedundancyPriority is set to 1, it is going to replace the one with priority 1, and when it's set to 0, it is going to replace the running software?\n\n(I am not sure if the running software could be \"erased and updated\")"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "One you change it back to dict, maybe would be good to have a comment of example supported properties, like saying that the are under xyz/openbmc_project/Software"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Currently we are in need of using 'RedundancyPriority' property under Software during image Activation in the method. The other property 'ClearConfig' is not going to be stored under Software."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "Yes, we actually have a use case where we support updating and activating a running image (priority '0'), we  have already introduced 'Staged' image state for this purpose, which gives a transitional state for any 'Ready' to activate image which can go selected priority image."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 37,
            "sizeDeletions": 2
        },
        {
            "number": 4,
            "revision": "8c2443eec7175d74d526fdaf363aefdac0e7c8c8",
            "parents": [
                "b43056fbbf3342b6e822854b849b02c1568429f8"
            ],
            "ref": "refs/changes/38/28938/4",
            "uploader": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "createdOn": 1581415877,
            "author": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 37,
            "sizeDeletions": 2
        },
        {
            "number": 5,
            "revision": "5026de5557e5af48c7083c0ab39906c3a02e0879",
            "parents": [
                "a8cc70263e4e6771bca6166428820d7fd89c04f8"
            ],
            "ref": "refs/changes/38/28938/5",
            "uploader": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "createdOn": 1581417266,
            "author": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 37,
            "sizeDeletions": 2
        },
        {
            "number": 6,
            "revision": "bb5e140eab55cf5b562e8b001f9266cd60b254c0",
            "parents": [
                "b43056fbbf3342b6e822854b849b02c1568429f8"
            ],
            "ref": "refs/changes/38/28938/6",
            "uploader": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "createdOn": 1581421696,
            "author": {
                "name": "Vikram B",
                "email": "vikram.bodireddy@linux.intel.com",
                "username": "vbodired"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "parameters"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I must have missed the follow on discussion ~Feb 4th to change this to a dict.  Dicts are bad because they cannot be statically confirmed (ie. at compile time).  Do we really want to start passing parameters as dictionaries in interfaces?  Are there other examples of doing that and has it worked well?\n\nIt seems like we're trying to pass them as 'dict' because they are optional?  The typical way to create optional items is to create a new interface that is optionally added to the same object.  We could add a new interface with a property \"DesiredRedundancyPriority\" that must be set before the Activation property.  Implementations can then either not implement this interface or implement it with the desired default (0?)."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Vikram B",
                        "email": "vikram.bodireddy@linux.intel.com",
                        "username": "vbodired"
                    },
                    "message": "This is new approach we are trying. Yes, dicts are chosen since the parameters are optional. With this method, the no.of parameters and its types can be varied as per each OEM's requirements. For e.g: now we want to send both priority value and clearconfig bool to the method, later in future we might need to pass any other parameters that's needed for activation.\nWe don't want to limit or confine the Activation process to one's design specific."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "My concern with this approach is much broader than this specific feature.  If we start to allow dynamic fields like this, there is no way to document and statically confirm what are valid.  \n\nOne of the reasons we moved away from a dynamic language like Python was because we kept running into maintenance issues where one part of the code would change and you couldn't tell until you exercised that code path.  With dynamic properties like this we have no way to know if a particular client/server combination of this dbus interface will work together without runtime tests, and we don't have a good runtime testing framework that is supported by all machines."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "@Patrick What do you suggest for such case?\nI had comments before to use separated properties, which resolves the above concern (and re-use the RequestedActivation). But at that time there were disagreements."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The only options we have are:\n\n- Dynamic parameters via dict (current proposal).\n- New functions for different parameter requirements.\n   - https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/28880 is sort of doing this.\n- Additional properties either here or in new [optional] interfaces.\n\nWe could also request a feature to sdbusplus to allow defaulted parameters, but since we don't have a generated client binding this isn't all that helpful yet.\n\n----\n\nIn my reading of the history of this commit, these seem to be optional properties that will only be used by specific implementations.  My personal preference would be we make new optional interfaces that hold the property and can be implemented just by the implementations that require them.\n\nEx. xyz/openbmc_project/Software/Activation/ClearConfig.interface.yaml with a single property ClearConfig that can be implemented on BMC and Host update providers but not on PSU."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "> My personal preference would be we make new optional interfaces that hold the property and can be implemented just by the implementations that require them.\n> Ex. xyz/openbmc_project/Software/Activation/ClearConfig.interface.yaml with a single property ClearConfig that can be implemented on BMC and Host update providers but not on PSU.\n\nI would definitely give +1 on that approach, and we already have\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/28262 about this."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Actually, the same has been started in that angle, and we changed the logic to this way, when tried to add invalid state value to the Priority property https://gerrit.openbmc-project.xyz/#/c/openbmc/phosphor-dbus-interfaces/+/28237/\n\ni.e. ClearConfig / Priority can be implemented as optional interfaces, but when the image is downloaded, before requesting for activation, it may need to expose the property with value being invalid / need to initialize. \n\nChanged to method for the following reason\n1. Invalid state / value was rejected sighting, method update is better.\n2. Method solves the problem of setting the properties in order etc.\n\nThe only reason we have dynamic parameters was it allows a way to provide lot more information for oem based on the need. Can be updated to fixed param here too, provided invalid / ignore value for those params are acceptable. \nHaving more in property results in too many D-Bus calls to do one single methodology.\n\nNote: I agree dictionaries doesn't control checking, and we have association in the similar manner. I am not against dictionary when it is used in places where it is really required. Let us know the acceptable scenario in this case.\n\nWe need to set both Priority & Clear config to the downloaded image, and if interface needs to be exposed, then we need to define invalid value / ignore value to the priority, to differentiate between the states."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Having more in property results in too many D-Bus calls to do one single methodology.\n\nThis rationale sounds like an optimization.  Do you have data to back up it being necessary?"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "what data you are looking for? I thought we don't need any data as in theory need to set 3 property in our case. Also before #3, 1 & 2 must be set (ordering is also needed).\n1. Priority\n2. clear config\n3. RequestedStateTransition\n\nwith method, it is one D-Bus call."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "The \"too many\" in your original implies there is a problem.  What does 3 vs 1 matter unless it has a performance impact?\n\nI think what we're trying to do here is decide direction overall on how to handle these new \"parameters\" (see the 3 options I gave earlier).  Your response implies you have ruled out one option and you've given the reason as being too many D-Bus calls.  My request for data is only that I don't see any data to back up \"too many D-Bus calls\" as being a reasonable rationale for rejecting that option.\n\nDonald Knuth once wrote \"premature optimization is the root of all evil.\"  My concern is that we are rejecting a better design from an API perspective because we're worried about a [potential] performance issue that we aren't sure exists.\n\nStated another way: clearly 3 calls has worse performance than 1, but does it really matter for the less than 20 times the average server has its firmware updated (Activated)?"
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Patrick, we started with property way, as we didn't want to disturb the existing design of updating the firmware, We changed the direction, as the invalid state was not approvd. \n\nhttps://gerrit.openbmc-project.xyz/#/c/openbmc/phosphor-dbus-interfaces/+/28237/\n\nWill you approve the above one then, in that case we can go ahead with interface (property style). Only thing we want to make sure is, when this interface is exposed, it will be exposted with value (invalid or something) till the requestedStateTransition is manually set."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Sorry for my slowness at getting back to this.\n\nWe had a long discussion over IRC about change 28237 and I'm not remembering all the details.  I thought we determined, from the current design, that the RedundancyPriority doesn't even make sense for an image that isn't yet Active?\n\nI know the default phosphor implementation fairly well but not the Intel one.  When the phosphor one activates a new image, it currently always goes to a default RedundancyPriority of 0 (highest priority).  In that implementation, we could make an optional (in a new interface) property DesiredPriority which defaults to 0.  If the user were to set DesiredPriority to something other than 0 prior to calling Activate, it can be applied at that point; if they don't change it then the priority of 0 is what would have been applied anyhow.\n\nIs there a case where you don't know what the \"default\" priority would be when someone calls Activate?  My point here is that an \"invalid\" priority doesn't really gain us anything."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "After reading all the comments, I think I would agree with Patrick. Setting a handful of parameters is not a real burden. Firmware updates are measured on the order of many seconds to minutes. An extra 10 or even 1000 D-Bus calls will not make much of a difference.\n\nIt should be well documented that the order might matter (i.e., don't change the RequestedActivation until you have set all the other properties), but setting each of the individual properties is not the end of the world."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 12,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Trailing space."
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "line": 29,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Is the implementation going to reflect this? Why not remove it?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Activation.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/README.md",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 40,
            "sizeDeletions": 2
        }
    ]
}