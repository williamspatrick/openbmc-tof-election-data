{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Id15ba88f2ee85d1cc7f777a0ed31ea67a6e5c392",
    "number": 37869,
    "subject": "Mock Sensors Project Design Doc",
    "owner": {
        "name": "Junho Park",
        "email": "junhopark2001@gmail.com",
        "username": "didjunho"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/37869",
    "hashtags": [],
    "createdOn": 1604357945,
    "lastUpdated": 1665658009,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1604357945,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1604447626,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(9 comments)\n\nI've left some deeper commentary against the doc, but have a couple of nitpicks: Can you please strip the trailing whitespace and add a newline at the end of the document?\n\nFrom a writing perspective, I wish other proposals were as well-structured as this one out of the gate."
        },
        {
            "timestamp": 1604455100,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(10 comments)\n\nWell done on your first design doc.  It was quite refreshing to read in comparison to others."
        },
        {
            "timestamp": 1604532315,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1604532503,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1604707313,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Patch Set 3:\n\n(14 comments)"
        },
        {
            "timestamp": 1605046108,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1605220372,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1605221293,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1605221799,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 5: Commit message was updated."
        },
        {
            "timestamp": 1605566323,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review+1\n\n(4 comments)"
        },
        {
            "timestamp": 1605911333,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1606165511,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1606169520,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Patch Set 5:\n\n(6 comments)"
        },
        {
            "timestamp": 1606170271,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1606854543,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Patch Set 6:\n\nHello,\n\nThe initial iteration of the code for the mock-sensor-tool has been pushed to openbmc/openbmc-tools (https://gerrit.openbmc-project.xyz/c/openbmc/openbmc-tools/+/38643).\n\nThank you!\nJunho"
        },
        {
            "timestamp": 1607039453,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 6: Code-Review+1\n\n(4 comments)\n\nPlease close the unresolved comments in previous patchesets (it looks like you addressed most of them but just didn't click \"Resolve\")."
        },
        {
            "timestamp": 1607455456,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1607455581,
            "reviewer": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "message": "Patch Set 7:\n\n(24 comments)"
        },
        {
            "timestamp": 1607550576,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1611537466,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 7: Code-Review+1\n\nGood stuff! Sorry that it's taken me a while to get back to it."
        },
        {
            "timestamp": 1665658009,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "5c62a2c170a96aca69b50dd25eb14e866caace88",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/1",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1604357945,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "mock-sensors.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Bit of a nit-pick, but this isn't really part of the problem description."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1.  Maybe move to the requirements section?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Went ahead and moved this to the requirements section - will be reflected in the next version of the design doc"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "What does it mean to mock out non-existing hardware? What are we trying to achieve?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1.  Presumably the kernel interface needs to exist that we're mocking, right?  Maybe providing some examples would help elaborate?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "After some discussion, we decided that it would be best to focus on the first requirement provided in this section (mocking out values/error cases of existing sensors) - realized that adding custom virtual sensors would require changes at the kernel level and we want to avoid that for the scope of this project."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 89,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You might also want to comment on how you're planning on creating the correct inodes for the descriptor to open if the hardware isn't physically present."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 89,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Scope has been refocused onto the first requirement above - we won't be mocking hardware that isn't physically present for this design."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 89,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "a little nitpicky, but not all sensors pull from something physical.  I suspect you're planning on limiting this to physical sensors that utilize sysfs but that wasn't the most clear in reading this."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "I wasn't aware that there were sensors that are part of the sensor stack that don't utilize sysfs - the design currently focuses on the sensors that write to a path in sysfs, but as long as other sensors are writing to some file, the mock sensor tool should be able to overwrite the value returned from the file just as it would do for the files in sysfs. For now, I think it's appropriate to limit this to physical sensors that utilize sysfs but I can definitely look into the other sensors later on."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: I'd remove all mention of ifstream;  It's an implementation detail that's unimportant at this level.  The important part here is that you're overriding the return of the read() call."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "will be reflected in the next commit!"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 131,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "As Zev pointed out, this isn't strictly true. The list of conditions for ptracing is documented in the man page: https://man7.org/linux/man-pages/man2/ptrace.2.html"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Ah this was a reading error on my part: it looks like we can use ptrace through just the PID of the tracee program, but there isn't a strong guarantee that using ptrace with a PID would work (dependent on the PTRACE_MODE_ATTACH permissions). I've been able to strace through phosphor-hwmon, so the tool should work with PID on the static stack and I believe it should work with dbus-sensors as well but I will investigate."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Squashing commits, Zev's comment from the other one: This seems to imply that ptrace is only possible between a parent process and its child, but the existence of things like `gdb -p` and `strace -p` would indicate otherwise.  If there's a reason that this really cannot be implemented through non-parent/child ptrace I think it might be good to explain why here."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 146,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That means that this level of testing would require a special build to accomplish?  I'd highly recommend avoiding that if technically possible (it sounds like Zev had some ideas for you) as it limits the availability of this.  In a perfect world, dbus-sensors \"override\" mode could simply be adjusted to use this instead of overriding in userspace, thus testing more code, and making it testable by anyone."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 146,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "I've found above that ptrace can be used to trace a tracee by PID instead of being a parent process (with some conditions), this makes it really easy now to pull the tool into any testing instance - the binary just needs to be pulled in and we don't need to have any special build. This will be written in the next version of the design doc."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 146,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 152,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "What about inotify or sighup?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 152,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 152,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "I wasn't aware about inotify - it looks pretty perfect for the use-case here and simplifies the implementation quite a bit. Thank you!"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 152,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Only half-serious here, but if we have to use a tool to change the mock configuration the config file seems like just an intermediate representation. In which case, why not use dbus instead? Is there a reason to persist mock configs?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1 to Andrews comment.  If this works out, I'd be willing to simply use this mechanism to replace the dbus-sensors DBus override code for the sensors that poll from sysfs.  The config file seems a little redundant, but might be useful for phosphor-hwmon use cases?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Being on a limited timeframe (about 4/5 weeks of internship remaining), I wanted to prioritize having a tested, working build of the tool - the config file was the 'easiest' solution I could think of as I don't know all the mechanics behind dbus. You're right in that the goal of the config file is really just to serve as an intermediate representation between the user and the ptrace tool and dbus could serve that purpose - for someone that has never worked with dbus, do you think it would be feasible to get it integrated into the tool within the timeframe?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Why?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "We needed a temporary store of data that could be accessed relatively quickly and persist throughout the lifetime of the ptrace tool. /tmp and /var/tmp seemed to fill the roles pretty well and I decided that /tmp would be a bit better since /var/tmp is a bit slower (but persists through reboots) - is there any better place you'd recommend? (assuming we don't go with dbus as per the comments above)"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Okay, so from a high level I'd expect that to test the system using mocks you'd want the smallest configuration delta possible to the actual platform firmware. From there:\n\nHow would you design this? It sounds like you're proposing a generic mock hwmon module, in which case how would you represent the module configuration? You'd want to make it look like what's exposed by sensor hardware used in the platform, which feels like you would wind up with a lot of tedious descriptions for devices.\n\nFurther, what userspace interface would you use to manipulate the sensor values once the sensors to expose have been described? These are different problems: one is a driver-bind-time configuration problem, the other is run-time configuration problem.\n\nFor seamless interaction with e.g. phosphor-hwmon and the existing systemd units you'd need the sysfs paths to remain the same, in which case you'd need to convince the mock driver to bind to the real device at a higher priority than the real driver for the device. Was this what you had in mind, or were you anticipating more invasive changes to the system configuration to stand up the mocks in this manner?\n\nI realise this proposal is a rejected alternative but I'd still like to see it explored some more. I think further exploration would make a stronger case for not going this route."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "We do want the smallest configuration delta possible to the actual platform firmware - with the new ptrace/pid changes above (line 139), we see that making use of the tool requires 0 build changes (just need to pull the binary in). With this in mind, going this route would require changes to the kernel which is a pretty large reason it's a rejected alternative (will be written in the next version of the design doc). The original design of this approach was to modify what device drivers would write to their respective sysfs files - creating a custom mock sensor/driver is out of the requirements now (line 80)."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This is the sentence that drove me to more thoroughly review this proposal :)\n\nI feel like you're a bit caught up in the ideas for the mock strategies you've outlined. There's no need to write additional (mock) kernel drivers: QEMU mocks an entire machine/platform. At that point you just use the real device drivers from your real BMC firmware to drive your QEMU models and inject whatever sensor values you wish via the monitor interface[1]. The only requirement is that you model your platform and as many of its associated devices as needed in QEMU, as described by the relevant hardware specifications. Ideally you'd do this anyway as it would be a strong contribution to the project's CI efforts.\n\n[1] Here's an example, the tmp421, where you have the ability to set the sensor temperature values: https://git.qemu.org/git/qemu.git/?p=qemu.git;a=blob;f=hw/misc/tmp421.c;h=49abe2d246a67cbea21998cc68f853b41a86bce6;hb=d0ed6a69d399ae193959225cdeaa9382746c91cc#l343"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "My bad - I realize now that I wouldn't need to touch any of the kernel code to add virtual sensors to QEMU. With the focus of this design now on requirement 1 (injecting custom sensor values and error cases into existing sensors), we don't need to add any custom sensors via QEMU, and looking through the link provided it doesn't seem like there's a way to inject user configurable error values at the QEMU level using the monitor interface."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Given that you're mocking the sensors, what benefit is there to _not_ running the firmware in QEMU for the purposes of these tests?"
                },
                {
                    "file": "mock-sensors.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not the author of this, but in the past I've seen wanting to test other pieces of bmc behavior at a system/hardware level, without having adequate ways to simulate the condition.  For example the requirement:\n\"If the intake air temperature exceeds 50C, the system should automatically and forcefully shut down\"\nhas been a requirement on past systems I've worked on.  Being able to mock a sensor, and simulate a 51C intake temp allows testing the rest of the system behavior, without needing to break out a heat gun is highly useful.  Unless qemu has a perfectly accurate model of all CPLDs, BIOS, and devices on the system, it's really hard to test the above to a level of certainty at system level."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "We wanted the tool to be able to be ran on as many builds/platforms as possible, not necessarily limited by QEMU, to increase the number of use-cases it may have."
                },
                {
                    "file": "mock-sensors.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "47215a65265fd8c12f958704f31f45d741592f7a",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/2",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1604532315,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "e7ebb399ed24851b8bfb19f8a09abfaeb24ebf58",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/3",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1604532503,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Suggest adjusting your 'git config' with a legal-ish name here.  This looks like a user-id which isn't what signed-off-bys should be."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Will be reflected in the next iteration of the design document!"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit.  It does, your way just enables a larger range of errors, which is good."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Will update this to be reflected in the next version of the design doc!"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 21,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "One piece I'm missing in reading this is who is the intended user.  Is this to debug an application like `phosphor-hwmon` or are you intending on creating integration tests of some sort?  How does the proposal end up being used in a real system?"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "We uploaded this design document to gauge interest/receive feedback and see if anyone would find use-cases for it. Users could choose to install the binary for the tool into their build (doesn't require any special build anymore) and use it to overload the values returned by sensors or inject error cases in both the static stack (currently working on phosphor-hwmon) and the dynamic stack. It's current use is for debugging/development purposes but there was a stretch goal to integrate it into some form of integration testing for phosphor-hwmon."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "TBH, this seems somewhat backwards to me.  Why would we approve a design for and write code for something for which there are no uses cases?\n\n> It's current use is for debugging/development purposes but there was a stretch goal to integrate it into some form of integration testing for phosphor-hwmon.\n\nPlease record this."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> TBH, this seems somewhat backwards to me.  Why would we approve a design for and write code for something for which there are no uses cases?\n\nI think you misread what he said.  One of the primary use cases in user story format would be:\n\nAs an OpenBMC developer, I would like a tool that allows me to test all  userspace code north of the hwmon driver, by simulating hardware interactions that require a lot of hardware (ovens/cooling chambers) or require physically destroying the machine to replicate.\n\nA possible later use case would be:\n\nAs an OpenBMC developer/QA tester, I would like to be able to simulate all driver/userspace interactions in a unit test, without relying on the behavior of the underlying hardware to verify the software behavior.\n\n> \n> > It's current use is for debugging/development purposes but there was a stretch goal to integrate it into some form of integration testing for phosphor-hwmon.\n> \n> Please record this.\n\nRecord the things he's not going to do?  We could put down \"this could be used for\" type stuff, but in general, we just amend the design docs later to add things like that."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "I think I worded in poorly in this iteration of the design doc - thanks Ed for the specific examples. I'm going to clarify some of the use-cases and drop in some of the specific examples in the next iteration of the design doc."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm curious what form this would take."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "This requirement should have been taken out of the design doc (patch set 5) - the project is solely focusing on requirement 1 now."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 123,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nice diagram."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 123,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there any concern with `ptrace` w.r.t. security settings?  Could we end up with an SELinux config where your tool doesn't work (or similar to SELinux)."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "the ptrace tool may bring security threats if brought into a build, but users can choose whether to include it into their build or not - it probably shouldn't be built into any production BMC unless it's for debugging/development purposes. That being said, if built in it can be disabled by disabling permissions for PTRACE-ATTACH in /proc/sys/kernel/yama/ptrace_scope."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Today, OpenBMC doesn't implement SELinux, so any answer Junho would give is conjecture based on \"if Openbmc did SELinux\" we could certainly go into that level of detail in this kind of design review, but that seems like overkill, and we would have to cover a whole lot more \"what if\" type scenarios.\n\nThe tool itself existing just makes the permissions issue more obvious, it doesn't open any new vulnerabilities that didn't exist before by running processes as root.\n\nIf Junho put \"In the future, this tool might require special user privileges to function\" would that mitigate your concerns?"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Security considerations were better addressed in patch set 5, with the new design that doesn't require any build changes."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think I agree with this.\n\nLots of kernel subsystems create debug drivers exactly like this.  Often the driver exposes debugfs entries to set the values from userspace.  I think you could easily formulate a generic driver that takes a deliminated string of hwmon sensors (ex. \"in0;in1;out0;temp0\") in the bind call and populates both the standard hwmon entries and custom debugfs to modify the values."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "You're right - I previously wasn't aware of all the approaches around this. We've decided that a big priority for this tool is to make sure it doesn't require any build changes and we want to avoid adding kernel code - that's the biggest case against this approach now."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> We've decided that a big priority for this tool is to make sure it doesn't require any build changes and we want to avoid adding kernel code - that's the biggest case against this approach now.\n\nWhy do you want to avoid adding kernel code?  If this is the typical path the kernel teams have already plowed for making dummy drivers why would we do something different?"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > We've decided that a big priority for this tool is to make sure it doesn't require any build changes and we want to avoid adding kernel code - that's the biggest case against this approach now.\n> \n> Why do you want to avoid adding kernel code?  If this is the typical path the kernel teams have already plowed for making dummy drivers why would we do something different?\n\nJust a guess (I haven't asked Junho directly): Because adding kernel code would significantly increase the scope of what's required to execute this design, and reduces the usefulness as a generic debugging/unit testing tool.  To my understanding, Junho is planning on using existing kernel mechanisms for doing this work, so it's not like we're reinventing the wheel, we're just attaching the wheel to a bicycle instead of a jeep.\n\nWith all that said, I think the statement above could probably be removed, and the previous sentence would stand up as a defense why this is less desirable."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "We want this tool to be as portable as possible and require as little configuration delta as possible. This wording change is reflected in the updated design doc in Patch set 5, and that specific line was removed."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 259,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "43d83b60499da2cc9070e59a46b8c57beb0ecca5",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/4",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1605221293,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "bc449a3eadaa18b2f1a0e1b54b1626966d508db7",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/5",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1605221799,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "designs/mock-sensors.md",
                    "line": 189,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I see the kernel questions are somewhat answered here."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "790413dad94a7c5ef8dabb7f50dc8ee25ecc083c",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/6",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1606170271,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/mock-sensors.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "nit: white space here"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 142,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "An example of how big your first iteration binary is could be good to give an idea."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I believe you didn't need to edit this for OpenBMC Romulus QEMU, maybe note that we should have the correct permission by default."
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 240,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Did you possibly mean for the dynamic sensor stack? or both static and dynamic?"
                },
                {
                    "file": "designs/mock-sensors.md",
                    "line": 240,
                    "reviewer": {
                        "name": "Junho Park",
                        "email": "junhopark2001@gmail.com",
                        "username": "didjunho"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 266,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 276,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "5100ae02631cb1c9867f109cb2936211a93082c2",
            "parents": [
                "754b1048bacca146a1b718b7df336dd7c8606cf8"
            ],
            "ref": "refs/changes/69/37869/7",
            "uploader": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "createdOn": 1607455456,
            "author": {
                "name": "Junho Park",
                "email": "junhopark2001@gmail.com",
                "username": "didjunho"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "designs/mock-sensors.md",
                    "type": "ADDED",
                    "insertions": 267,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 277,
            "sizeDeletions": 0
        }
    ]
}