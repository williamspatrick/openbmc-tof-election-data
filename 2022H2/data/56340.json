{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Iafc6fc74fc7c1a3b6ecc6d7ecce9c4b092a49973",
    "number": 56340,
    "subject": "WIP: Generate unique ID based on the serviceroot guid",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56340",
    "hashtags": [],
    "createdOn": 1659736140,
    "lastUpdated": 1673035132,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1659736140,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1659736201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659736201,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1659736539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/48671/ : FAILURE"
        },
        {
            "timestamp": 1659737201,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1659737255,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659737256,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1659737769,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48673/ : SUCCESS"
        },
        {
            "timestamp": 1659801688,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1665679460,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1665679529,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665679529,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1665679591,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/53544/ : FAILURE"
        },
        {
            "timestamp": 1672955081,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1672955130,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1672955130,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1672957748,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58665/ : SUCCESS"
        },
        {
            "timestamp": 1672965382,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1672969610,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 5:\n\n(8 comments)"
        },
        {
            "timestamp": 1673031250,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(7 comments)"
        },
        {
            "timestamp": 1673035132,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "f111c9a03572c0d4a588b5d432e0d034e6dba5ec",
            "parents": [
                "1ebb5d985842796119b3644b31b825c8d2350ab9"
            ],
            "ref": "refs/changes/40/56340/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659736140,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 56,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "f7bec517712e2a5f1f8e7587e7988842ff842d06",
            "parents": [
                "1ebb5d985842796119b3644b31b825c8d2350ab9"
            ],
            "ref": "refs/changes/40/56340/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659737201,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 55,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "86f7f95c7c010863905f79170e77391575ca86e8",
            "parents": [
                "1ebb5d985842796119b3644b31b825c8d2350ab9"
            ],
            "ref": "refs/changes/40/56340/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659801688,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 55,
            "sizeDeletions": 2
        },
        {
            "number": 4,
            "revision": "2304cb5db4d297ac1fea20cff0224d34af780ca4",
            "parents": [
                "40e4f380d645c6bbe6bd8050e501203798a0c488"
            ],
            "ref": "refs/changes/40/56340/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1665679460,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 67,
            "sizeDeletions": 4
        },
        {
            "number": 5,
            "revision": "fb91e2745ae3d009ff3e60a9d9b9c48bfa6a8d4b",
            "parents": [
                "9017faf2918308a375f37bebc9d431da9a75a7b2"
            ],
            "ref": "refs/changes/40/56340/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1672955081,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "@carson, what are your thoughts here?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Seems good for the most part.  The comments I left are pretty minor.\n\nThe system should give the same result across reboots which means the UUID shouldn't change.  Would it be alright to just generate the hash in the RedfishAggregator's constructor and save it as a private variable?  That'll save us from needing to query persistent_data each time."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We could, but then we'd duplicate it.  Querying the persistent_data is already in memory, so it's not like we're hitting the filesystem every time.  Let me look at your way, but I don't think there's a huge difference between the two."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "If it's already in memory then I'm fine leaving it as is.  I don't imagine calling systemUniqueId() each time is that much of a hit"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 271,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "We'll also need to generate the hash in beginAggregation().  I'd prefer that the initial seed was a private variable of RedfishAggregator (or a similar constant) so that we don't have to hard code the same value in multiple spots."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 271,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 811,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "nit, this will change"
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 827,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "This also needs to be updated or else this path will partially break aggregation."
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "line": 827,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Is there a way to add a few test cases for this function to make sure the prefix is being generated like we expect it to be?"
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I can look into it, but we'd need to mock out persistent_data.  Should be doable."
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Should this instead be something like:\n\nuuid = \"0x\" + uuid.substr(0, 8);\n\nso that \"0x\" is at the beginning of the new value of uuid?"
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yep....   I think I goofed in a refactor when I moved line 9."
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "What would the mechanism look like to make sure we wouldn't have collisions due to two entities choosing the same \"random unique ID\".  Right now we're hardcoding so that's easy enough to check by hand as long as the number of entities remain small.\n\nI'm just thinking out loud.  No need to address this now since if this ever even becomes an issue I'm guessing it'll be way on down the road."
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "My thinking is that every id would be hardcoded, or at least hardcoded within a namespace.  Aggregation would use\n\n0XABC01\n0XABC02\n0xABC03\n\nas their hashes.  In theory, we could get collisions, but given the number of bits of entropy, it seems unlikely.  This could use more thought though."
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Can the returned string be in hex without the leading \"0x\"?  I know at most it'll only save us two characters, but it'll be consistent with the UUID which is in hex instead of decimal."
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Std::to_string returns the number itself, so it wouldn't even be hexified.  We might want to base64 encode it though."
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "line": 27,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Right, I'm asking would we want the string to be hexified instead by using something like std::format(\"{:x}\", hash) instead of std::to_string(hash)?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/utils/uri_utils.hpp",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "redfish-core/include/redfish_aggregator.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 65,
            "sizeDeletions": 4
        }
    ]
}