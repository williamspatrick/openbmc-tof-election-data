{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ife8dae921e2d9772e7676dc927b41f7dfc00c047",
    "number": 57925,
    "subject": "Aggregation: Document Redfish aggregation",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/57925",
    "hashtags": [],
    "createdOn": 1665701561,
    "lastUpdated": 1669137625,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1665701561,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1665701611,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665701611,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1665701798,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1665702179,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53566/ : SUCCESS"
        },
        {
            "timestamp": 1665702501,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1665702531,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1665702585,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665702585,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1665703223,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53568/ : SUCCESS"
        },
        {
            "timestamp": 1667574396,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "andrew@geissonator.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1667580570,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(4 comments)"
        },
        {
            "timestamp": 1667581931,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1667589650,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1667599908,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1668025522,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1668029354,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1668029370,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1668029414,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668029414,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1668031309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55134/ : SUCCESS"
        },
        {
            "timestamp": 1668043914,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1668191594,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1668194028,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1668194091,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1668194091,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1668194337,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1668195716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55294/ : SUCCESS"
        },
        {
            "timestamp": 1668198371,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1668203243,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1669080843,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1669080871,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1669080871,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1669082480,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/55922/ : SUCCESS"
        },
        {
            "timestamp": 1669137625,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "04e4d937399bd0871cd8131c22b9f375106aa36d",
            "parents": [
                "b595326e2f64a2758a710ed006fa089583b462e7"
            ],
            "ref": "refs/changes/25/57925/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1665701561,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "AGGREGATION.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "nit, delete"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 15,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "AGGREGATION.md",
                    "type": "ADDED",
                    "insertions": 153,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 170,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
            "parents": [
                "b595326e2f64a2758a710ed006fa089583b462e7"
            ],
            "ref": "refs/changes/25/57925/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1665702501,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "Good summary of what you got in place!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "LGTM.  Only some VERY minor nits."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Thanks for writing this. I am good with this, some minor things but I think this is a great start "
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We need to get this feature more fleshed out, and get this turned on by default."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Off the top of my head these are the remaining features:\n1. Aggregate all top level resource collections\n2. Add links to satellite only collections in responses from service root and other appropriate locations\n3. Generate aggregation prefix from uuid\n4. Contains/ContainedBy relationship between local and aggregated Chassis resource\n5. Aggregate more than one satellite\n6. Add Authentication (login with satellites)\n7. Support HTTPS connection to satellite.\n\n\nThere are already various levels of WIP patches for a number of those features.  How many are needed to turn it on by default?  My guess is the first 3, maybe #5 as well."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "I think 7 as well because otherwise you have to have a bmcweb with insecure options (we don't recommend insecure options for production) as the Satellite. Without that, it still feels like a non-production / wip option"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Sounds good.  I can add a section that mentions these planned/missing features"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "DO we need to mention $metadata?"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I'm open to it, but in what way do you mean?"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I think this topic from rde forum is probably similar to this concern?   \nhttps://redfishforum.com/thread/314/metadata-document-rde-devices"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Yeah that touches on the part about versions differing between the aggregator and satellites.  Outside of that though there is still the issue of how large some of the JsonSchema files are.  In testing there were singular ones which were larger than the internal HTTP client's response buffer could handle.  It seems reasonable to expect the operator of the aggregating BMC to keep the BMC up to date so that the satellite BMCs are not using newer schema versions."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "#metadata is the CSDL equivalent of JsonSchemas, and arguably more used than JsonShemas, so it should probably be mentioned in how we handle it special (although I don't think we handle it specially today)."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Aggregation currently doesn't do anything special for $metadata.  I'm not familiar with using $metadata so I'm using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n\nIt doesn't seem like we treat /redfish/v1/$metadata as an actual endpoint.  Instead requests to there get treated as requests to /redfish/v1.  I don't know if it matters that I'm just sending normal curl requests.\n\nIf $metadata is a collection like /redfish/v1/JsonSchemas is then we'd aggregate it like any other collection since we don't have a specific blocker like we do for /redfish/v1/JsonSchemas.\n\nEven then, \"@odata.type\" doesn't include a full path so aggregation won't touch that field as part of aggregation.  It will look like aggregated resources are using the metadata definition on the aggregating bmc.\n\nAlso, aggregation doesn't touch header fields when we receive valid responses from satellites.  We only copy over the JSON payload so if the \"Link\" header exists it gets dropped.  That might not be much of an issue right now because currently there are not too many endpoints that bmcweb adds a \"Link\" header for.  Maybe that needs to change in the future?\n\nIf any of these information sounds relevant then I can add it to the write-up."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Aggregation currently doesn't do anything special for $metadata.\n\nRight..... this needs some amount of mention.\n\n>  I'm not familiar with using $metadata so I'm using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n> \n> It doesn't seem like we treat /redfish/v1/$metadata as an actual endpoint.  \n\nI'm not sure where you got this idea, but we do.\nhttps://github.com/openbmc/bmcweb/blob/master/static/redfish/v1/%24metadata/index.xml\n\n\n> Instead requests to there get treated as requests to /redfish/v1.\n\nNo.... they don't.  You probably forgot to escape the $ in your bash curl request (if I had to guess, because I've done the same thing before).\n\n>  I don't know if it matters that I'm just sending normal curl requests.\n> \n> If $metadata is a collection like /redfish/v1/JsonSchemas is then we'd aggregate it like any other collection since we don't have a specific blocker like we do for /redfish/v1/JsonSchemas.\n\nit's not a \"normal\" collection.  It's the schema collection, which has a lot of weird stuff.\n\n> \n> Even then, \"@odata.type\" doesn't include a full path so aggregation won't touch that field as part of aggregation.\n\nI'm not sure what this statement has to do with anything?  The path is enough to look up the schema via $metadata, which is what tools like redfish-service-validator does.\n\n>  It will look like aggregated resources are using the metadata definition on the aggregating bmc.\n> \n> Also, aggregation doesn't touch header fields when we receive valid responses from satellites.\n\nAs a side comment, I'm not sure this policy is going to be able to survive very long.  I very much suspect that when we start to think through query param forwarding and cache forwarding, this is going to be important.\n\n>  We only copy over the JSON payload so if the \"Link\" header exists it gets dropped.  That might not be much of an issue right now because currently there are not too many endpoints that bmcweb adds a \"Link\" header for.  Maybe that needs to change in the future?\n> \n> If any of these information sounds relevant then I can add it to the write-up."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> > Aggregation currently doesn't do anything special for $metadata.\n> Right..... this needs some amount of mention.\nAlright I'll add a mention of that to the doc\n\n\n> > I'm not familiar with using $metadata so I'm using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n> > It doesn't seem like we treat /redfish/v1/$metadata as an actual endpoint.\n> I'm not sure where you got this idea, but we do.\n> https://github.com/openbmc/bmcweb/blob/master/static/redfish/v1/%24metadata/index.xml\n> > \n> > Instead requests to there get treated as requests to /redfish/v1.\n> No.... they don't.  You probably forgot to escape the $ in your bash curl request (if I had to guess, because I've done the same thing before).\nYup I forgot to escape it and that's why it looked like we weren't handling it.\n\n\n> it's not a \"normal\" collection.  It's the schema collection, which has a lot of weird stuff.\nI can't tell where exactly the hook is for handling /redfish/v1/$metadata, but it does not hit our query parameters handling and thus it doesn't reach the aggregation hook.  If it was somehow to reach aggregation handling then it would be handled like a \"normal\" collection such that the response from the satellite would be ignored because it's not of type application/json.  It would've also been ignored because it doesn't contain the expected \"Members\" array.\n\n\n> > Even then, \"@odata.type\" doesn't include a full path so aggregation won't touch that field as part of aggregation.\n> I'm not sure what this statement has to do with anything?  The path is enough to look up the schema via $metadata, which is what tools like redfish-service-validator does.\nI'm saying that when querying a satellite resource, there won't be anything added to \"@odata.type\" to indicate that the info is supposed to come from the $metadata of a satellite BMC.  Whatever entity can use the value of \"@odata.type\" to lookup the schema, but the result will be from the aggregating BMC instead of the satellite.\n\n\n> As a side comment, I'm not sure this policy is going to be able to survive very long.  I very much suspect that when we start to think through query param forwarding and cache forwarding, this is going to be important.\nYeah I'm getting that feeling as well.  I've maybe bumped up against this issue already in forwarding responses from satellite BMCs.  For valid response codes we only copy over the JSON response and use the aggregator's headers.  For invalid codes we copy over the entire message.  That's a potential issue since it includes the satellite's headers."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > Aggregation currently doesn't do anything special for $metadata.\n> > Right..... this needs some amount of mention.\n> Alright I'll add a mention of that to the doc\n> \n> \n> > > I'm not familiar with using $metadata so I'm using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n> > > It doesn't seem like we treat /redfish/v1/$metadata as an actual endpoint.\n> > I'm not sure where you got this idea, but we do.\n> > https://github.com/openbmc/bmcweb/blob/master/static/redfish/v1/%24metadata/index.xml\n> > > \n> > > Instead requests to there get treated as requests to /redfish/v1.\n> > No.... they don't.  You probably forgot to escape the $ in your bash curl request (if I had to guess, because I've done the same thing before).\n> Yup I forgot to escape it and that's why it looked like we weren't handling it.\n> \n> \n> > it's not a \"normal\" collection.  It's the schema collection, which has a lot of weird stuff.\n> I can't tell where exactly the hook is for handling /redfish/v1/$metadata, but it does not hit our query parameters handling and thus it doesn't reach the aggregation hook.\n\ncheck webassets.hpp.  Today it's a fixed static file, so it just uses that handling.  As part of aggregation, that will probably have to move to code, rather than generating it at compile time.\n\n>  If it was somehow to reach aggregation handling then it would be handled like a \"normal\" collection such that the response from the satellite would be ignored because it's not of type application/json.  It would've also been ignored because it doesn't contain the expected \"Members\" array.\n\nIt's also XML..... so yeah..... it's not going to be able to be parsed as json.\n\n> \n> \n> > > Even then, \"@odata.type\" doesn't include a full path so aggregation won't touch that field as part of aggregation.\n> > I'm not sure what this statement has to do with anything?  The path is enough to look up the schema via $metadata, which is what tools like redfish-service-validator does.\n> I'm saying that when querying a satellite resource, there won't be anything added to \"@odata.type\" to indicate that the info is supposed to come from the $metadata of a satellite BMC.\n\nCorrect, because as far as the caller is concerned, there is no \"satellite $metadata\".  It all gets aggregated.\n\n>  Whatever entity can use the value of \"@odata.type\" to lookup the schema, but the result will be from the aggregating BMC instead of the satellite.\n\nRight, but we need some way for the aggregating bmc to aggregate the schema files.  We punted on this originally, but we should probably document that assumption here, which is where my original comment was geared at.\n\n> \n> \n> > As a side comment, I'm not sure this policy is going to be able to survive very long.  I very much suspect that when we start to think through query param forwarding and cache forwarding, this is going to be important.\n> Yeah I'm getting that feeling as well.  I've maybe bumped up against this issue already in forwarding responses from satellite BMCs.  For valid response codes we only copy over the JSON response and use the aggregator's headers.  For invalid codes we copy over the entire message.  That's a potential issue since it includes the satellite's headers."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've added an additional section which mentions that aggregation currently makes the same assumptions around $metadata as it does for /redfish/v1/$metadata.  Please reopen this thread if you think additional information should be included"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> >  Whatever entity can use the value of \"@odata.type\" to lookup the schema, but the result will be from the aggregating BMC instead of the satellite.\n> Right, but we need some way for the aggregating bmc to aggregate the schema files.  We punted on this originally, but we should probably document that assumption here, which is where my original comment was geared at.\n\nAlright I think I understand now.  I've added an additional clarification for $metadata to the doc.  It's immediately after this portion on /redfish/v1/JsonSchemas.\n\nI'm going to mark this resolved, but please let me know if you think I should include additional information like the discussion from the link provided in Milton's comment.  I'm assuming we'll ultimately want to do something rather than make assumptions.  My preference is to not include talk of that until there's something more concrete, kinda like how there is list of specific features that must be implemented before we can turn on aggregation by default."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "responses"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 104,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Nit, maybe just omit this?  This command itself isn't going to work on any bmc."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 104,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "The terminal command or the entire example?  I also do the same thing in the later example."
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 104,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "maybe do \ncurl -k -H \"X-Auth-Token: $token\" https://${bmc}/redfish/v1/Systems \nlike we do in https://github.com/openbmc/docs/blob/master/REDFISH-cheatsheet.md or yeah just omit it"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 104,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I want to include an example of how a collection looks so I'll use Gunnar's first suggestion"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 104,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "same comment here"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I used Gunnar's example like I did for the above comment"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "response"
                },
                {
                    "file": "AGGREGATION.md",
                    "line": 148,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "AGGREGATION.md",
                    "type": "ADDED",
                    "insertions": 152,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "f6ff0dd9c287b6d82430b93650c1ddb52d39040d",
            "parents": [
                "df0c4ee06aaa7cd147d69e938ebd89ee81c50402"
            ],
            "ref": "refs/changes/25/57925/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1668029354,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "AGGREGATION.md",
                    "type": "ADDED",
                    "insertions": 152,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 169,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "64c469c83d53bf8943723e64ef75ed278b5f540b",
            "parents": [
                "69fca03e92f1b96e1c02173d37742d74aeb9cb21"
            ],
            "ref": "refs/changes/25/57925/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1668194028,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "AGGREGATION.md",
                    "type": "ADDED",
                    "insertions": 170,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 187,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "90ba4853b42af98de573ec78c9de5783b34b5ddd",
            "parents": [
                "33a32b3427483fbeab3f1cf6c57dd1593db674a1"
            ],
            "ref": "refs/changes/25/57925/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1669080843,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "AGGREGATION.md",
                    "type": "ADDED",
                    "insertions": 174,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 191,
            "sizeDeletions": 0
        }
    ]
}