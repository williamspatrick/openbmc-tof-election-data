{
    "project": "openbmc/openbmc-build-scripts",
    "branch": "master",
    "id": "If42a22bfeca223fd5bc8f35ed937aa5f60713f2a",
    "number": 54756,
    "subject": "Enforce commit message style",
    "owner": {
        "name": "Ed Tanous",
        "email": "ed@tanous.net",
        "username": "edtanous"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openbmc-build-scripts/+/54756",
    "hashtags": [],
    "createdOn": 1655828903,
    "lastUpdated": 1660881546,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1655828903,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1655828980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655828980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1655828987,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/521/"
        },
        {
            "timestamp": 1655829819,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/521/ : SUCCESS"
        },
        {
            "timestamp": 1655830687,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1655830694,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655830865,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655834696,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1655835241,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655837192,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655837514,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655840993,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1655841312,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1655841321,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1655841332,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1655841332,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1655841338,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/522/"
        },
        {
            "timestamp": 1655842166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/522/ : SUCCESS"
        },
        {
            "timestamp": 1655847709,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1655848041,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1655875130,
            "reviewer": {
                "name": "Joel Stanley",
                "email": "joel@jms.id.au",
                "username": "shenki"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1655908417,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1657905976,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1657908192,
            "reviewer": {
                "name": "Nancy Yuen",
                "email": "yuenn@google.com",
                "username": "yuennancy"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1657909916,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1657911807,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1659473236,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1659623640,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "andrew@geissonator.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1659629778,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1659646224,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "andrew@geissonator.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1659646433,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1659646578,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1659646621,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1659651157,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1659651165,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1659651186,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659651186,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1659651193,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/558/ (2/2)"
        },
        {
            "timestamp": 1659652011,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48567/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/558/ : SUCCESS"
        },
        {
            "timestamp": 1659654614,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1659654626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659654627,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1659654633,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/559/ (2/2)"
        },
        {
            "timestamp": 1659654884,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1659655309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48569/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/559/ : SUCCESS"
        },
        {
            "timestamp": 1659656196,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1659705329,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1659707154,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "andrew@geissonator.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(3 comments)"
        },
        {
            "timestamp": 1659718742,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1659718866,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1659739446,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5: Published edit on patch set 4."
        },
        {
            "timestamp": 1659739503,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659739503,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1659739509,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/562/ (2/2)"
        },
        {
            "timestamp": 1659739595,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1659739990,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1659740185,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1659740759,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48677/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/562/ : SUCCESS"
        },
        {
            "timestamp": 1659748856,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1659802763,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1659802816,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659802816,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1659802823,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/563/ (1/2)"
        },
        {
            "timestamp": 1659802918,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1659802935,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1659802961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1659802961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1659802962,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/563/ : ABORTED\n\nhttps://jenkins.openbmc.org/job/ci-repository/48687/ : SUCCESS"
        },
        {
            "timestamp": 1659802968,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/564/ (2/2)"
        },
        {
            "timestamp": 1659803599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/48688/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/564/ : SUCCESS"
        },
        {
            "timestamp": 1659962391,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1659977610,
            "reviewer": {
                "name": "Brandon Kim",
                "email": "brandonkim@google.com",
                "username": "brandonkimbk"
            },
            "message": "Patch Set 7: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1659995601,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1659999761,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1660575125,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1660583753,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "andrew@geissonator.com",
                "username": "geissonator"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1660686184,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(7 comments)"
        },
        {
            "timestamp": 1660688396,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(7 comments)"
        },
        {
            "timestamp": 1660692113,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1660692168,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660692168,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1660692174,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/570/ (1/2)"
        },
        {
            "timestamp": 1660692238,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1660693113,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49263/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/570/ : SUCCESS"
        },
        {
            "timestamp": 1660738363,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1660749755,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(7 comments)"
        },
        {
            "timestamp": 1660752884,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1660752887,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(5 comments)"
        },
        {
            "timestamp": 1660752931,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1660752931,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1660752937,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nBuild Started https://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/573/ (2/2)"
        },
        {
            "timestamp": 1660753996,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49314/ : SUCCESS\n\nhttps://jenkins.openbmc.org/job/CI-MISC/job/ci-openbmc-build-scripts/573/ : SUCCESS"
        },
        {
            "timestamp": 1660757877,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1660829425,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "andrew@geissonator.com",
                "username": "geissonator"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1660837703,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9: Code-Review+2"
        },
        {
            "timestamp": 1660881546,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully rebased and submitted as fb9948a3a859500188e468d4f247b13687f3fefb"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "38402e08578452716284770e2968996028c80161",
            "parents": [
                "971a6978985ad9fdcffce1ef5cfa3e203ee56f03"
            ],
            "ref": "refs/changes/56/54756/1",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1655828903,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "speaking of 72 chars, is there a gitlint option for checking 72 chars?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "in the body of the message?  Yes.  Actually, looking at it, it looks like the default is 80, not 72.  I'll need to resolve that.\n\nACK\n\nhttps://jorisroovers.com/gitlint/rules/#b1-body-max-line-length"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Updated body-max-line-length in the latest patchsets .gitlint file."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Thanks, looks good"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I feel I end up enforcing the commit message body 72 chars check rather than 50 char title, with the style that we have where we usually list the component we're touching as part of the commit message title for example in openbmc/openbmc:\n\nmeta-google: phosphor-host-ipmid: We now have like\n\n^ that being 50 chars (meant to say \"We now have like 2 words left\" but ran out of chars)"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why aren't we trusting what is in the .gitlint?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d\n\nI don't know how well gitlint handles URLs and test plans either...\n\nWe should probably discuss that as part of the default .gitlint proposal (in docs?)."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "because this seems like the kind of thing that we shouldn't be pushing into per-repo semantics.  Our rules for this are projectwide, and unlike format/tidy where they need to be rolled out incrementally, gitlint only applies to HEAD on code reviews, so there should be no need to roll things out gradually (with the exception of opting in a couple repos to start with as a test).\n\nWith that said, yes, given that we need more than one rule here, I'm going to check in a .gitlint file into this commit shortly."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I can check in a .gitlint file here, and we can discuss.  This seems like the kind of thing that we don't need to propagate out to all the individual repos.\n\nIMO, as a standard, we shouldn't be prefixing <repo name> to the beginning of commits, given that, as Brandons comment asserts, you run out of characters in a hurry, and if you really want to append the repo name in something like a combined commit log, that can be done when you aggregate the commits into one, instead of making every user do it in a commit message."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": ">IMO, as a standard, we shouldn't be prefixing <repo name> to the beginning of commits, given that, as Brandons comment asserts, you run out of characters in a hurry, and if you really want to append the repo name in something like a combined commit log, that can be done when you aggregate the commits into one, instead of making every user do it in a commit message.\n\nI'm not understanding what you're suggesting here.\n\nCommits in a code repository, like bmcweb, should not be prefixed with \"bmcweb:\" because that is redundant.\n\nWe absolutely want commits in openbmc/openbmc to be prefixed with something like 'meta-google' if they only affect meta-google.  This helps everyone filter out the noise but especially the maintainers.  If I had to choose between \"your commit has the meta layer affected in the commit message\" and \"you went past 50 (or even 72) characters\" I'd pick the former every time.\n\nI glanced through the rules in gitlint.  I'm going to be very surprised if we can get something that is both useful and makes most everyone happy..."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> >IMO, as a standard, we shouldn't be prefixing <repo name> to the beginning of commits, given that, as Brandons comment asserts, you run out of characters in a hurry, and if you really want to append the repo name in something like a combined commit log, that can be done when you aggregate the commits into one, instead of making every user do it in a commit message.\n> \n> I'm not understanding what you're suggesting here.\n> \n> Commits in a code repository, like bmcweb, should not be prefixed with \"bmcweb:\" because that is redundant.\n\nCorrect.\n\n> \n> We absolutely want commits in openbmc/openbmc to be prefixed with something like 'meta-google' if they only affect meta-google.  This helps everyone filter out the noise but especially the maintainers.  If I had to choose between \"your commit has the meta layer affected in the commit message\" and \"you went past 50 (or even 72) characters\" I'd pick the former every time.\n\nAh, I guess that's a good point;  I missed the subtlety between the two.\n\n> \n> I glanced through the rules in gitlint.  I'm going to be very surprised if we can get something that is both useful and makes most everyone happy...\n\nThe only thing we can do is try?\n\ngitlint does have a convention for ignoring certain rules or all rules via comment flags in your commit message, so maybe that's a good trapdoor for the cases where we need to ignore certain rules for good reason?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "https://jorisroovers.com/gitlint/rules/#i4-ignore-by-author-name\n\nI take it this isn't going to be an acceptable addition to the .gitlint:\n```\n[ignore-by-author-name]\nregex=patrick@stwcx.xyz\n```"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "LOL, probably not, but you could add:\n\ngitlint-ignore: all\n\nto your commit messages, and it would bypass the checks.  If you have good reasons for bypassing a check, it seems ok as a trapdoor."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "added a .gitlint to this commit."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think this issue can be punted because:\n1. This doesn't enforce anything on openbmc/openbmc, and I believe that's the only exception\n2. There's a path to allow ignoring meta-<name> in the plugin we now have.  I'm pretty sure the above concern is addressed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 73,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "e31ec3e259a46fb32024ec2f7841e81db03c5140",
            "parents": [
                "971a6978985ad9fdcffce1ef5cfa3e203ee56f03"
            ],
            "ref": "refs/changes/56/54756/2",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1655841312,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "A few violations of the 72 char limit in this commit message. Maybe you were trying to make a point that this is needed? :)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Not done intentionally, but HA!\n\nWill fix."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "My vote would be that this always be an opt-in for projects. As noted elsewhere, when you have to do something like \"meta-facebook:\" or \"meta-google\" in the commit message title, it takes a lot of real estate. And I like those in the title for openbmc/openbmc to know what to ignore. As seen in the review comments here, this feels like a pretty personal choice for a maintainer."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Like I said in the above thread, surely there's SOMETHING we can enforce project wide.  A 300 word paragraph put into the first line is surely universally something CI could flag?\n\nI'm happy to just have this in, at least it helps me as a maintainer, but I really think there's some level of rules that we could enforce.  I think we can all agree that there is no case where we'd accept a whitespace character at the end of a line, or a single paragraph of text?  (and even in those cases, maintainers can override)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "I agree we could def come up with something. I just don't think that something is what you have in config/.gitlint. So should we try to get agreement on what that something is or just say the file in this commit is for reference at this point?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think the later is what I'm hoping for.  That gitlint file was a starting point, which is why I intentionally included everything that's the default, so we can talk about which things are universal, and which things would we sometimes allow."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "format-code.sh doesn't apply to openbmc/openbmc commits, so as this commit is written, the points about including meta-<company> in the commit message are moot.  They are definitely an issue that I will look at when and if I try to apply this to openbmc/openbmc patches, but as written, I don't think there's anything to change here.\n\nI did test the quote thing, and it doesn't seem to understand quotes.  Will need to look into it further."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I ended up writing a minor plugin that handles a bunch of openbmc-specific stuff.  Arguably we could add to the plugin to check for meta-<name> and not include that in the limit, but for the moment, that's left until we add this to repotest.\n\nDoes that work for you?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "Oh nice, it's got plugin support too."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Joel Stanley",
                        "email": "joel@jms.id.au",
                        "username": "shenki"
                    },
                    "message": "I think this is something to review for, but we want common sense to be able to override the tools.\n\nIf there's a case where eg. a URL to a bug tracker, or a stack trace, is included in a commit message, the developer and maintainer should be able to ignore the suggestion of the tool for the benefit of a clearer commit message.\n\nIf this is simply advisory, and is able to be overridden by the repo maintainer, then that is fine."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I think this is something to review for, but we want common sense to be able to override the tools.\n\nWhich part?  Surely end of line whitespace in your commit message or a 200 character title are something we can just blanket disallow?  Yes, the lint length thing could use some discussion, or maybe we just don't check the title length at all, or set it to a higher-than-documented value.\n\n> \n> If there's a case where eg. a URL to a bug tracker, or a stack trace, is included in a commit message, the developer and maintainer should be able to ignore the suggestion of the tool for the benefit of a clearer commit message.\n\nAgreed;  I assumed the tool treated URLs as a single \"word\" so they wouldn't be split across lines, but I can test that.  I'm also assuming that if stack traces are quoted, they don't count against your line limit, but I can test that as well.\n\n> \n> If this is simply advisory, and is able to be overridden by the repo maintainer, then that is fine.\n\nAt this point it's able to be overridden by either the maintainer or the submitter by adding \"gitlint-ignore: all\" to the commit message somewhere.  Is that enough?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It'd be good to get your opinions here;  I think they're valuable, as you've been doing this kind of thing a lot longer than I have."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Nancy Yuen",
                        "email": "yuenn@google.com",
                        "username": "yuennancy"
                    },
                    "message": "Is there a way to disable linting on certain lines to a commit message?  It would be nice if it isn't all or nothing. Something that allows for escaping valid longer items like a URL or multiline items like a stack trace?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think so:\nhttps://jorisroovers.com/gitlint/configuration/\n\nGo to the heading: \"Commit specific config\"\n\nbut it's certainly something we could talk with them about adding."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Joel?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "Did you get a chance to run those tests noted above Ed (how a URL is treated, quoted things like stack traces)? May be somewhat moot if we agree this will be enabled at each repos maintainers discretion."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I have not yet.  I'm wanting to make sure this as an idea isn't completely dead in the water before I spend a lot more time refining it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This was done.  The plugin has a lot of callouts for exceptions.  We can add more over time."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Maybe we should move the discussion we were having on the other file to here - I'm against hard-setting the title max length to 50 and instead using 72 due to how openbmc/openbmc usually prefers at a minimum specifying the meta layer, preferring to also list the repo it's touching (OR we should change that rule). When I'm reviewing code here and downstream, I tell people that 50 is the rule to follow but 72 is the real hard limit.\n\n\"meta-google: \" is 13 characters for instance, so we'd have 37 chars left for the header which is often not enough."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Maybe we should move the discussion we were having on the other file to here - I'm against hard-setting the title max length to 50 and instead using 72 due to how openbmc/openbmc usually prefers at a minimum specifying the meta layer, preferring to also list the repo it's touching (OR we should change that rule). When I'm reviewing code here and downstream, I tell people that 50 is the rule to follow but 72 is the real hard limit.\n\nThis commit doesn't apply to openbmc/openbmc.  Yes, when and if we do that, we should take that into consideration, does that seem reasonable?\n\n> \n> \"meta-google: \" is 13 characters for instance, so we'd have 37 chars left for the header which is often not enough."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "It's also common to use that style of subject-line tagging in other repos though -- for example in dbus-sensors, I (and others) often put something like \"hwmontempsensor: \" or the like, which eats up a third of a 50-char budget.  Personally, I find that tagging useful and wouldn't want to discourage it."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "there's also reverts, not that they're common, but in that case git just prepends 'Revert ' to the commit."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "For the prefix on the commit message, sure, I can see the advantage, but surely there needs to be some limit?  Would 72 be enough?  Technically the rules are 50/72, but 72/72 might be a good starting point?\n\nAs for reverts, gitlint already ignores reverts by default, so no problems there."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "I think 72/72 is a good enough limit - and is how I usually enforce my code reviews (I usually tell them that 50 is technically the limit so that they are aware to try to get it to be shorter if possible)."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Changed to 72.  I'm not convinced that 72 is the long term answer, id' rather something better like \"if your commit starts with a single word and a colon, you get extra characters, but still must be <50 after the colon\", but in terms of not letting good be the enemy of better, focusing on the things we agree on, and keeping this patch simple I'm happy to push that discussion to another patch."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Brandon Kim",
                        "email": "brandonkim@google.com",
                        "username": "brandonkimbk"
                    },
                    "message": "Agreed, and yeah that's I think the simplest rule to follow -only if there's the usual header prefix (meta-google: phosphor....: adsfasdf) we extend to 72, otherwise 50.\n\nI guess if we want to be fancy, we would want to enforce that there IS a meta* prefix in our meta layer repos like openbmc/openbmc but that's a nice to have feature for the future."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I guess if we want to be fancy, we would want to enforce that there IS a meta* prefix in our meta layer repos like openbmc/openbmc but that's a nice to have feature for the future.\n\nNow that we know how to use the gitlint plugins the above is roughly my eventual lan.  Allow meta-*: at the beginning of the line, an don't count it."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "s/lan/plan/g"
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "line": 848,
                    "reviewer": {
                        "name": "Nancy Yuen",
                        "email": "yuenn@google.com",
                        "username": "yuennancy"
                    },
                    "message": "why are both lines necessary and the sha?"
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "line": 848,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "because gitlint installs in 2 packages, gitlint-core and gitlint, but because of the way the pip machinery works, we needed to install gitlint-core first.\n\nWe could talk about taking out the SHA1 if this goes forward, but I did it because it seems like something we'd want to pin on major versions."
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "line": 848,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Answered.  Please reopen if this isn't adequate."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "If the .gitlint file exists in the repo under test, shouldn't we use that vs. the global one in the openbmc-build-scripts repo?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "FWIW, I'd really prefer if we can get away from per-repo policies.  We have too many repositories that languish behind and don't hold up to the expectations of the rest of the project, and then others that make their own exceptions / policies you have to be aware of and follow.  I'd prefer at most 2 configs for this one: meta-layer (openbmc/openbmc) and code repo (everything else)."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "probably if we're going to do the per-repo thing first.  I was really hoping that we'd avoid the combinatorial problem we have today where we have N versions of .clang-format/tidy checked into N repos, where there's little consistency.  In that case, it makes sense to take the hit, because it requires code changes to be made.  Because gitlint only applies to NEW commits, I had thought we could just have one config, and that the \"enable gitlint for this repo\" flag would be temporary.  Maybe that means it should be .gitlint-openbmc as the filename, to disambiguate from .gitlint?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> FWIW, I'd really prefer if we can get away from per-repo policies. \n\nPatrick submitted this as I was typing, and I completely agree with what he said."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've updated my position in the commit message;  PTAL."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 66,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 204,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "676562403a62027f6b7de2c0d432885187c435e9",
            "parents": [
                "de24e76169bf0f2c6174db9964a07b28e14a3b18"
            ],
            "ref": "refs/changes/56/54756/3",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659651157,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 64,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 208,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "e5c7995f4d74877b4e89eb6bbeb86119b3306377",
            "parents": [
                "de24e76169bf0f2c6174db9964a07b28e14a3b18"
            ],
            "ref": "refs/changes/56/54756/4",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659654614,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "andrew@geissonator.com",
                        "username": "geissonator"
                    },
                    "message": "I wouldn't sign up for this being enabled globally at this point but I like how this commit allows the opt-in via the .openbmc-enforce-gitlint file which will allow us to do some learning with a few repos. We've got the flexibility of the plugin to adapt to what we learn and if a few maintainers still have issues in the future, maybe we switch to a opt-out option for them."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 265,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "bdbb4f59278b5d8bd41373551fd268c1a471f5f5",
            "parents": [
                "de24e76169bf0f2c6174db9964a07b28e14a3b18"
            ],
            "ref": "refs/changes/56/54756/5",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659739446,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "With the title line-length ceiling expanded to 72 I think this is a lot more viable.  I've tested it out running the current parameters over the last 500 commits in the entity-manager & dbus-sensors repos (just two I happened to have sitting nearby, not selected for any particular reason) and it mostly turned up stuff that should legitimately have been fixed.  There were some (IMO) false-positives on rule B3 (hard tabs) from inside pasted log dumps; I think we might want to either disable that one or rig things up to allow tabs inside pasted bits (and perhaps similarly with B2 for trailing whitespace, which is a not-infrequent occurrence in log messages in my experience)."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK;  I can do the later, I'll rig it into the custom rule (seems pretty trivial to add, as we already track the \"in a block comment\" state."
                },
                {
                    "file": "config/.gitlint",
                    "line": 47,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've disabled rule B3, and incorporated the tab checking behavior into our custom plugin rule."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Nit: I might suggest \"shell transcripts\" instead of \"bash lines\".\n\nAlso, might we want to allow triple-backticks as well, markdown-style?"
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK.  Both sound totally reasonable to me.  Will try to get them in monday."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 265,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "0908d8bc7c3b600ed5b1853501050457ff540d20",
            "parents": [
                "de24e76169bf0f2c6174db9964a07b28e14a3b18"
            ],
            "ref": "refs/changes/56/54756/6",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659802763,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 271,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "17864f53d11c4c9db1bc8a69550520ea55ceb702",
            "parents": [
                "de24e76169bf0f2c6174db9964a07b28e14a3b18"
            ],
            "ref": "refs/changes/56/54756/7",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1659802918,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "config/.gitlint",
                    "line": 10,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why'd we disable this?  Does `Testing:` files sometimes contain tabs?\n\nI guess we implement our own `body-hard-tab`.  Maybe make that more obvious in what you wrote?"
                },
                {
                    "file": "config/.gitlint",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Why'd we disable this?  Does `Testing:` files sometimes contain tabs?\n> \n> I guess we implement our own `body-hard-tab`.  Maybe make that more obvious in what you wrote?\n\n\nCheck out the conversation earlier in the review.  Someone found that this rule had some issues on quoted blocks, so it got rolled into our custom rule.  It is still enforced, just in a different rule, and ignores quoted blocks.  I'm of the opinion that even within quoted blocks, your block shouldn't start with a tab, but in the overall theme of \"Start permissive and ratchet down in later patchsets to what we want\" I left it as an option to try to get concensus."
                },
                {
                    "file": "config/.gitlint",
                    "line": 10,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> ...it is still enforced, just in a different rule, and ignores quoted blocks.\n\nAck.  My suggestion was that the comment here (line 9) elaborate on why `body-hard-tab` is ignored.\n\n> I'm of the opinion that even within quoted blocks, your block shouldn't start with a tab,\n\nI'd be onboard with \"no tabs are allowed in commit messages\".  They likely make the display of the commit message different depending on the system used for viewing, which isn't appreciated."
                },
                {
                    "file": "config/.gitlint",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > ...it is still enforced, just in a different rule, and ignores quoted blocks.\n> \n> Ack.  My suggestion was that the comment here (line 9) elaborate on why `body-hard-tab` is ignored.\n\nAh, fair point, added a comment.\n\n> \n> > I'm of the opinion that even within quoted blocks, your block shouldn't start with a tab,\n> \n> I'd be onboard with \"no tabs are allowed in commit messages\".  They likely make the display of the commit message different depending on the system used for viewing, which isn't appreciated.\n\nSounds good."
                },
                {
                    "file": "config/.gitlint",
                    "line": 58,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want WIP or DO_NOT_MERGE?\n\nI'd lean towards no because our format script runs first and ends up bailing out.  Maintainers should be smart enough not to merge one of those so we still get UT signal on the rest of the commit."
                },
                {
                    "file": "config/.gitlint",
                    "line": 58,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Do you want WIP or DO_NOT_MERGE?\n> \n> I'd lean towards no because our format script runs first and ends up bailing out.  Maintainers should be smart enough not to merge one of those so we still get UT signal on the rest of the commit.\n\nEventually, yes/maybe, but in terms of keeping this small and less controversial, I didn't want to do this in this patchset.  I would rather we treat this as slowly ratcheting the rules up, instead of starting overly draconian and backing it off."
                },
                {
                    "file": "config/.gitlint",
                    "line": 58,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ack"
                },
                {
                    "file": "config/.gitlint",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We're likely going to end up flagging the subtree bump commits?  Is there something easy we can do on them.\n\nExample:\nhttps://gerrit.openbmc.org/c/openbmc/openbmc/+/56307"
                },
                {
                    "file": "config/.gitlint",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think this is going to flag subtree commits?  They have a body don't they?\n\nAlso, subtree updates occur on openbmc/openbmc, which in the commit message is currently out of scope for this.  Can we push the \"make this work on openbmc/openbmc\" to a future commit just to keep this commit self contained to repo commits?"
                },
                {
                    "file": "config/.gitlint",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I probably put this into a bad location.  I suspect there is a lot in this gitlint that would flag the subtree updates.  Maybe it is as simple as us modifying the tools that generate those to put the blanked \"ignore gitlint\" exception on every subtree commit.\n\nI also forgot that this doesn't cover that repo yet."
                },
                {
                    "file": "config/.gitlint",
                    "line": 74,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I probably put this into a bad location.  I suspect there is a lot in this gitlint that would flag the subtree updates.  Maybe it is as simple as us modifying the tools that generate those to put the blanked \"ignore gitlint\" exception on every subtree commit.\n\nI'm pretty sure it's that simple, but I haven't looked yet.  I'll get there.\n\n> \n> I also forgot that this doesn't cover that repo yet."
                },
                {
                    "file": "config/.gitlint",
                    "line": 91,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there anything we can do to ensure that \"Signed-Off-By\" contains at least two words?  I see so many times that we end up with a unix id or github id and we really need something close to what is listed in the CLA."
                },
                {
                    "file": "config/.gitlint",
                    "line": 91,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Is there anything we can do to ensure that \"Signed-Off-By\" contains at least two words?\n\nIn the future, absolutely yes; In this patchset, lets get SOME amount of verification turned on and not try to boil the ocean.\n\n\n>  I see so many times that we end up with a unix id or github id and we really need something close to what is listed in the CLA.\n\nACK.  On my list of checks to add."
                },
                {
                    "file": "config/.gitlint",
                    "line": 91,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Feel free for that to be another commit.  Not trying to slow this down for additional requests.  Just raising the common concerns I raise in commit messages (and that one specifically I feel like a lot of maintainers are missing)."
                },
                {
                    "file": "config/.gitlint",
                    "line": 91,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack"
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we describe what we were trying to accomplish here?  I think I often indent bullet lists and we'd still want the line-length checked on those?"
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "the intent is for tabbed in block comments.  IE\n\nTested:\n    My super long curl command that has a large block of test that might be larger\n    that this line, but still is readable because it's a tabbed in block.\n    \nI grabbed it from an upstream gitlint review that was similar, and that's the source.  If it's controversial, I can remove it, but to beat on the same drum, can we ratchet down in the next patch?  (full disclosure, it'll probably take me a week or two to write and test it)."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I guess.  It just didn't make much sense to me that you could simply add 4 spaces to the front of each line and then make lines as long as you wanted.  Couldn't tell what we were accomplishing.\n\nShouldn't any curl command just be escaped with backticks?"
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I guess.  It just didn't make much sense to me that you could simply add 4 spaces to the front of each line and then make lines as long as you wanted.  Couldn't tell what we were accomplishing.\n> \n> Shouldn't any curl command just be escaped with backticks?\n\nThey should.  I removed this exception in the latest patch, because you're right, we should be more consistent here."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why isn't this:\n\n[1]: http://www.myspace.com\n\nThat is proper markdown footnote links.  I'd think we'd want to follow markdown as much as possible for less-thought-required."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 42,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If I'm reading that right, the difference is the colon?  I can add that as optional in the regex.  The intent is to be as permissive as we can be while still keeping things readable, and I didn't think we had a standard for this.\n\nACK."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 42,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done.  Latest patch allows for a colon."
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "line": 42,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd be fine just enabling it and dealing with the fallout by fixing things as they show up."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Understood, but I want to get some amount of traction with this with maintainers that know what's going on (ie, those that have rolled it out) before we blanket roll it out across the project.  This is a new tool, and we always find bugs in new things.  My hope is that we can roll this out to some of the repos maintainers opt-in for, and test it for a couple weeks, get the kinks worked out, then remove this check.\n\nSound reasonable?"
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Your choice.  Like I said, I'd prefer we just break and fix it as needed.  Someone being held up for a day or two of landing a diff isn't really a serious problem in my opinion, considering how long it takes to review diffs around here anyhow half the time.\n\nI hope we don't see a mess of these short-lived commits adding this flag file."
                },
                {
                    "file": "scripts/format-code.sh",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I expected that I was going to be the only maintainer to opt into this in the time window.\n\nI stacked another patch so we can start talking about making this mandatory in 4 weeks, just to make sure the intent isn't lost."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 276,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "1c205a210dcd018afc33b1b56f2103ae59bc3b8d",
            "parents": [
                "de24e76169bf0f2c6174db9964a07b28e14a3b18"
            ],
            "ref": "refs/changes/56/54756/8",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660692113,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 129,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 61,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 276,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "c51db6703e9da0f74c279cbb0f5010c34a8cb2a0",
            "parents": [
                "09dcd89bd67f518275d7e53961cbe6cad87f8eb3"
            ],
            "ref": "refs/changes/56/54756/9",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660752884,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 273,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "fb9948a3a859500188e468d4f247b13687f3fefb",
            "parents": [
                "ec22c46fb8a901d9031649bc7da6f8f5230f6c31"
            ],
            "ref": "refs/changes/56/54756/10",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1660881546,
            "author": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "scripts/build-unit-test-docker",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config/.gitlint",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "config/gitlint/block_comment.py",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "scripts/format-code.sh",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 273,
            "sizeDeletions": 0
        }
    ]
}