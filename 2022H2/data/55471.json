{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "Ie8d022c2195838e383eefcd0e12ae8cfab76e3e1",
    "number": 55471,
    "subject": "HTTP Client: Improve handling operation timeouts",
    "owner": {
        "name": "Carson",
        "email": "clabrado@google.com",
        "username": "carsonlab"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55471",
    "hashtags": [],
    "createdOn": 1658192048,
    "lastUpdated": 1666732384,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1658192048,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1658192127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658192127,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1658192463,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/47182/ : FAILURE"
        },
        {
            "timestamp": 1658192546,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1658192587,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1658192592,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1658193043,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/47184/ : SUCCESS"
        },
        {
            "timestamp": 1661548796,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1661549667,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1661549764,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661549764,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1661550325,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/49933/ : SUCCESS"
        },
        {
            "timestamp": 1661928266,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1661928330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1661928330,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1661928859,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50186/ : SUCCESS"
        },
        {
            "timestamp": 1662062744,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1662062805,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662062805,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1662063066,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50239/ : FAILURE"
        },
        {
            "timestamp": 1662071550,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 6: Patch Set 5 was rebased."
        },
        {
            "timestamp": 1662071605,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662071605,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1662072138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50279/ : FAILURE"
        },
        {
            "timestamp": 1662141937,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 7: Patch Set 6 was rebased."
        },
        {
            "timestamp": 1662142004,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1662142004,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1662142539,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50318/ : SUCCESS"
        },
        {
            "timestamp": 1662142813,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 7:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1662455338,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 7: Code-Review+1"
        },
        {
            "timestamp": 1663002180,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 7: Code-Review-1\n\n(7 comments)"
        },
        {
            "timestamp": 1663091590,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1663093914,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1663093956,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663093956,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1663094481,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50708/ : SUCCESS"
        },
        {
            "timestamp": 1663095744,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1663095820,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663095820,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1663095855,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50711/ : FAILURE"
        },
        {
            "timestamp": 1663095948,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1663096045,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663096045,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1663096367,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/50712/ : FAILURE"
        },
        {
            "timestamp": 1663105241,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1663105321,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663105321,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1663105850,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/50727/ : SUCCESS"
        },
        {
            "timestamp": 1663271775,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 11:\n\n(5 comments)"
        },
        {
            "timestamp": 1663700684,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1663700741,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663700747,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1663701272,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/52003/ : SUCCESS"
        },
        {
            "timestamp": 1663707084,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 12:\n\n(2 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1663707365,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 13: Patch Set 12 was rebased."
        },
        {
            "timestamp": 1663707422,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1663707423,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1663708008,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/52027/ : SUCCESS"
        },
        {
            "timestamp": 1664566420,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 13:\n\n(1 comment)"
        },
        {
            "timestamp": 1664582733,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 14: Commit message was updated."
        },
        {
            "timestamp": 1664582762,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1"
        },
        {
            "timestamp": 1664582809,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1664582815,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1664583157,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/52784/ : FAILURE"
        },
        {
            "timestamp": 1664583272,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 15: Patch Set 14 was rebased"
        },
        {
            "timestamp": 1664583332,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1664583332,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1664583910,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/52786/ : SUCCESS"
        },
        {
            "timestamp": 1664904543,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1664904940,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        },
        {
            "timestamp": 1665520090,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1665520154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665520159,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1665520686,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 16:\n\n(2 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1665520722,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53326/ : SUCCESS"
        },
        {
            "timestamp": 1665524729,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1665526822,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1665536645,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1665553268,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 16:\n\n(3 comments)"
        },
        {
            "timestamp": 1665599764,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1665643520,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1665643596,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1665643596,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1665643639,
            "reviewer": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1665644170,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/53467/ : SUCCESS"
        },
        {
            "timestamp": 1666726304,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1666726309,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18: Patch Set 17 was rebased"
        },
        {
            "timestamp": 1666726368,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1666726368,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1666726429,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1666726436,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18: Code-Review+2"
        },
        {
            "timestamp": 1666728151,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/54099/ : SUCCESS"
        },
        {
            "timestamp": 1666732384,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ea5b9fee881f3310d052ae084cc1c0674647229b",
            "parents": [
                "078746311614d0aea796afb51fce4648981b1284"
            ],
            "ref": "refs/changes/71/55471/1",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1658192048,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 195,
                    "deletions": -15
                }
            ],
            "sizeInsertions": 229,
            "sizeDeletions": 15
        },
        {
            "number": 2,
            "revision": "d7d4d213d7be3d99ba54285e9d02fc0b22ff42b1",
            "parents": [
                "078746311614d0aea796afb51fce4648981b1284"
            ],
            "ref": "refs/changes/71/55471/2",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1658192546,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 185,
                    "deletions": -15
                }
            ],
            "sizeInsertions": 219,
            "sizeDeletions": 15
        },
        {
            "number": 3,
            "revision": "38b03d960a8bd9d99aab5fd1b461083f6e121457",
            "parents": [
                "3e96a4c1b0415b2638afff638fb9a65ebbc79b25"
            ],
            "ref": "refs/changes/71/55471/3",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1661549667,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 219,
                    "deletions": -14
                }
            ],
            "sizeInsertions": 253,
            "sizeDeletions": 14
        },
        {
            "number": 4,
            "revision": "46f64106e9f3570887865f27e39479cc5188152d",
            "parents": [
                "e5e2c6801db9bd0c6f66ff05051604b3544c7f6c"
            ],
            "ref": "refs/changes/71/55471/4",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1661928266,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 236,
                    "deletions": -21
                }
            ],
            "sizeInsertions": 272,
            "sizeDeletions": 21
        },
        {
            "number": 5,
            "revision": "c279f67dee52c65a41949a2506322e329263c013",
            "parents": [
                "e5e2c6801db9bd0c6f66ff05051604b3544c7f6c"
            ],
            "ref": "refs/changes/71/55471/5",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1662062744,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 266,
                    "deletions": -31
                }
            ],
            "sizeInsertions": 301,
            "sizeDeletions": 31
        },
        {
            "number": 6,
            "revision": "e854787bd6142a8ec32051ea6e3f27a19c69c97e",
            "parents": [
                "44c70412e763a63310ef9451f24714c4decef91a"
            ],
            "ref": "refs/changes/71/55471/6",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1662071550,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 266,
                    "deletions": -31
                }
            ],
            "sizeInsertions": 301,
            "sizeDeletions": 31
        },
        {
            "number": 7,
            "revision": "828ed822bd22f111ee22b836d4c495029899541b",
            "parents": [
                "382d64759b0848f18bad9e0d85a8291529ced0e9"
            ],
            "ref": "refs/changes/71/55471/7",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1662141937,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "This will have performance impact and can be used as Denial of service attack. \n\nWith this current implementation, I see resolve and connect is being attempted continuously without  1) Any time delay 2) No exhaust of retry & terminate/abort subscription.  So this make service busy always doing resolve & connect and Impact overall bmcweb performance & even BMC.( Ex: If someone created  max subscriptions to different IP:PORT which are not reachable."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> This will have performance impact \nThe performance impact is pretty minimal since you just have a single connection per IP:PORT asynchronously attempting to establish a connection.\n\n> can be used as Denial of service attack.\n> \n> So this make service busy always doing resolve & connect and Impact overall bmcweb performance & even BMC.( Ex: If someone created  max subscriptions to different IP:PORT which are not reachable.\nI don't think that's true about DoS.  At a minimum this is not worse than what we have now.  Ignoring this change, BMCWeb should already be able to handle sending max subscriptions worth of simultaneous messages.\n\nFollowing your example, someone could create max subscriptions which use a retry policy with no time delay and a large enough number of retry attempts that they effectively won't be exhausted.  That would be the same idea as having an internal polling routine.  What's worse is the existing code does not ignore the retry policy for connection timeouts.  That means you could have an entire connection pool always trying to connect (i.e. MAX_SUBSCRIPTIONS * 4).\n\nAs events get triggered the message queues will expand until they reach the max number and start getting dropped.  At least with this change we'll be able to handle those future messages immediately rather than adding them to an ever growing queue.\n\n> I see resolve and connect is being attempted continuously without  1) Any time delay 2) No exhaust of retry & terminate/abort subscription.\nWe do this because we want the internal polling routine to be able to detect the moment the destination becomes reachable.  If we 1) add a delay then there will be dead periods where we won't detect a destination has become reachable and thus erroneously return a 504.\n\nIf we 2) can exhaust the number of retry attempts then we won't be able to mark the destination as unreachable.  We would give up attempting to reach the destination at some point and then not be able to catch when it does become reachable.  We'd have to clear the bool and allow future message sending attempts to attempt establish a connection to an unreachable destination.  At that point we're really not getting any benefit out of the changes in this patch."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 20,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I'm closing this thread; it's no longer applicable now that the internal polling routine has been removed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Should cover some positive test cases as well."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Who can abort the connection?  I we have transition states in sequential manner and when some connection is in specific stage( Say connectInProgress or HandShakeInprogress, We don't allow other connection).  So When exactly this case can hit?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "We are now at the same time calling timer.async_wait() in addition to an async operation like boost::asio::async_connect().  The associated callbacks for each async operation will eventually get called no matter what.  In the timer callback \"onTimeout()\" we are able to recover from this by exiting immediately if the timer was cancelled rather than timing out.\n\nWe have to do a similar thing at the start of the async operation callbacks.  When we have one of those operations timeout we will proceed to close the connection and then retry to send the message.  Closing the connection will call the operation callback such as \"afterConnect()\" to then get called.  In that instance the connect operation was aborted because the connection was closed.\n\nIf we don't add these checks then we'll cause a fault and crash BMCWeb whenever we have an operation timeout."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't look quite right.  What I would've expected is something like\n\nif (ec == operation_aborted){\n   return;  // Operation didn't time out and was aborted.  Connection can continue like normal.\n}\nif (ec){\n   close();  // Some other timer failure (possibly a kernel failure) close the connetion.\n   return;  \n}"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "On timer timeout we call \"onTimeout()\".  As part of that function we close the connection and retry if we have not exhausted the retry policy.\n\nAs I understand it, closing the connection causes \"operation_aborted\" to occur and the callback such as \"afterConnect()\" gets called.  That's why I return immediately if \"operation_aborted\".\n\nIf there is a different error that occurs then we should go into our normal retry logic instead of just closing the connection.  There are a number of ways that the operation could fail outside of the operation timing out.  If we don't go into our retry logic here then we'll only ever retry on a very limited range of errors like connection attempt timeouts.\n\nDoing that would also start creeping into special retry handling cases. I thought avoiding that was a motivation for removing polling from this patch since it would have involved skipping the retry and going straight to fail."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> On timer timeout we call \"onTimeout()\".  As part of that function we close the connection and retry if we have not exhausted the retry policy.\n\nACK.  I had forgotten that.\n\n> \n> As I understand it, closing the connection causes \"operation_aborted\" to occur and the callback such as \"afterConnect()\" gets called.  That's why I return immediately if \"operation_aborted\".\n\n\"operation_aborted\" is generated if the operation is aborted, either via cancel() being called, or via the destruction of the object.  Generally both of these we'd want to ignore and do nothing.\n\n> \n> If there is a different error that occurs then we should go into our normal retry logic instead of just closing the connection.\n\nIf the timer is throwing any other error, we've hit a logic bug, or a kernel failure and we should be starting to shut down.  At least, this is how we handle it in other cases.\n\n>  There are a number of ways that the operation could fail outside of the operation timing out.  If we don't go into our retry logic here then we'll only ever retry on a very limited range of errors like connection attempt timeouts.\n> \n> Doing that would also start creeping into special retry handling cases. I thought avoiding that was a motivation for removing polling from this patch since it would have involved skipping the retry and going straight to fail.\n\nYeah, that's fair."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> > If there is a different error that occurs then we should go into our normal retry logic instead of just closing the connection.\n> If the timer is throwing any other error, we've hit a logic bug, or a kernel failure and we should be starting to shut down.  At least, this is how we handle it in other cases.\nYes, but this specific check isn't for the timer throwing an error.  It's the async http operation that's throwing the error (boost::asio::async_connect). The timer throwing an error can result in the operation throwing an \"operation_aborted\" error, but this isn't the spot to try to handle timer errors.\n\nWe also can't call the shutdown methods here just to be safe. The timer callback will have already started the retry flow so a close here would result in disrupting that flow."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 206,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 211,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Async timer has to be cancelled first irrespective if ec code. So this has to be moved above operation_aborted check."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 211,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "This is directly related to my above comment.  It's possible for us to reach \"afterConnect()\" after the timer has already expired.  In that case we're just wanting to leave this function without touching anything.  Cancelling the timer in this specific case could cause issues since either the timer is not running or it's running but as part of a different operation that's not connection."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 211,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 223,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "BMCWEB_LOG_ERROR"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 223,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 225,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "For safer side(To avoid race conditions), Set state to failed before performing any operation. (state = ConnState::connectFailed;)"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 225,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Done"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 442,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@intel.com",
                        "username": "apuli1"
                    },
                    "message": "Why only during connectInProgress? What if connection is made unreachable during write/read operations?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 442,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Unreachable denotes that connection attempts timed out.  This is because we want to bypass needing to attempt to connect to an unresponsive destination each time we send a message.  As long as we are able to establish a connection then the server is not unreachable.\n\nOther operations like write or read could time out as well, but that doesn't mean the destination is unreachable.  We have no way of knowing if the operation timed out due to the server becoming unreachable or it timed out because of some other issue.  For example, the read could timeout on certain endpoints if the destination is not able to generate a response in a timely manner.  If the destination did in fact become unreachable then we'll catch that as part of the next message send attempt when we timeout during the connection attempt."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 442,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I'm closing this thread since the code in question has been removed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 266,
                    "deletions": -31
                }
            ],
            "sizeInsertions": 301,
            "sizeDeletions": 31
        },
        {
            "number": 8,
            "revision": "830ada3d809bd98d038ea28ed1c610448d9ffc29",
            "parents": [
                "99351cd856038475cac146029e5db03767a1459c"
            ],
            "ref": "refs/changes/71/55471/8",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1663093914,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 266,
                    "deletions": -30
                }
            ],
            "sizeInsertions": 301,
            "sizeDeletions": 30
        },
        {
            "number": 9,
            "revision": "c225726475b7f8c45ea24fd076e1f850a1985b91",
            "parents": [
                "99351cd856038475cac146029e5db03767a1459c"
            ],
            "ref": "refs/changes/71/55471/9",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1663095744,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 272,
                    "deletions": -30
                }
            ],
            "sizeInsertions": 307,
            "sizeDeletions": 30
        },
        {
            "number": 10,
            "revision": "4d431db6a606d59f4807282a8c369dcbf427f712",
            "parents": [
                "99351cd856038475cac146029e5db03767a1459c"
            ],
            "ref": "refs/changes/71/55471/10",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1663095948,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 271,
                    "deletions": -30
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 30
        },
        {
            "number": 11,
            "revision": "d94c3ed0031c81583233bc063922df329abda395",
            "parents": [
                "99351cd856038475cac146029e5db03767a1459c"
            ],
            "ref": "refs/changes/71/55471/11",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1663105241,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 271,
                    "deletions": -30
                }
            ],
            "sizeInsertions": 306,
            "sizeDeletions": 30
        },
        {
            "number": 12,
            "revision": "24ab5b37be3374ec86f924d6e353076b8bdccd1b",
            "parents": [
                "411e6a1164855c0ebf04e243f0c8ea20146c1dff"
            ],
            "ref": "refs/changes/71/55471/12",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1663700684,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 272,
                    "deletions": -32
                }
            ],
            "sizeInsertions": 322,
            "sizeDeletions": 32
        },
        {
            "number": 13,
            "revision": "c9144576d51d8f4a88030e23800f85a2e4e11149",
            "parents": [
                "6e5a32691a861ef54f7b2e9abd90181a369085d6"
            ],
            "ref": "refs/changes/71/55471/13",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1663707365,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "@Appu, ping"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 272,
                    "deletions": -32
                }
            ],
            "sizeInsertions": 322,
            "sizeDeletions": 32
        },
        {
            "number": 14,
            "revision": "54eca6c9ae5b1c6fda565c2a034df8a143512139",
            "parents": [
                "6e5a32691a861ef54f7b2e9abd90181a369085d6"
            ],
            "ref": "refs/changes/71/55471/14",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1664582733,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 272,
                    "deletions": -32
                }
            ],
            "sizeInsertions": 322,
            "sizeDeletions": 32
        },
        {
            "number": 15,
            "revision": "7b2a83b6c02d176953bc66c1e7cfac75c982b928",
            "parents": [
                "3d69feda9a411aec6a3f89064cd67a5d6b105b9c"
            ],
            "ref": "refs/changes/71/55471/15",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1664583272,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I had offline discussions with Ed about this patch.  For the most part this patch is not really necessary.  Taking more than 30s to connect to a destination is a networking issue and not something we should be trying to specifically handle.  In general we don't want to do special case retry handling like this patch attempts.  There are also existing options like reducing the number of retry attempts and delay between each attempt.\n\nThe only part of this that is truly needed is the error checking to catch when an individual operation fails and as a result we need to make sure we abort rather than advancing to the next stage of the message sending flow.  I'll reopen this patch for review after that change has been made."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "I've removed all of the polling.  Now this patch just fixes our retry behavior so that we don't accidentally crash BMCWeb when one of the HTTP operation timers expires."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 272,
                    "deletions": -32
                }
            ],
            "sizeInsertions": 322,
            "sizeDeletions": 32
        },
        {
            "number": 16,
            "revision": "7ebaad5e52271baab31275ff9f6518569ad82686",
            "parents": [
                "9db4ba251522a6499e55b9060a796f89390bbb3d"
            ],
            "ref": "refs/changes/71/55471/16",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1665520090,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "http/http_client.hpp",
                    "line": 351,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  If we timed out, don't we want to retry?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 351,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "We do, but that is handled within the timer's callback \"onTimeout()\".  This is specifically catching when the timer has already expired."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 351,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is this necessary?"
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "Yes I believe so.  We do not clear \"res\" after we have completely finished processing the response at the end of the message sending flow.  Instead we clear \"res\" before we copy the new response to it.\n\nIf the connection is reused then we don't want to accidentally include the body from a previously received message in the event we exhaust the retry policy and need to return a 502 Bad Gateway."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Yes I believe so.  We do not clear \"res\" after we have completely finished processing the response at the end of the message sending flow.  Instead we clear \"res\" before we copy the new response to it.\n> \n\nAt that point, what data is in the response?  I don't see any case where we'd have a half-filled response.\n\n> If the connection is reused then we don't want to accidentally include the body from a previously received message in the event we exhaust the retry policy and need to return a 502 Bad Gateway.\n\nThat's fair, but that needs handled in a different spot, once the response has been sent completely."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> At that point, what data is in the response?  I don't see any case where we'd have a half-filled response.\nIt's not half-filled, it's just leftover from the previous message that was sent.  Let's say we forward a request to /redfish/v1/Chassis/<satellite_chassis_id>.  We return the response and \"res\" will contain a copy of the response.\n\nNow let's say the satellite BMC goes down and we send a request to something like /redfish/v1/Chassis/<satellite_chassis_id>/Sensors/<sensor_id> and it reuses the same Connection.  The BMC won't be reachable so we'll return a 502 after exhausting the retry policy.  However, \"res\" will still contain the response from /redfish/v1/Chassis/<satellite_chassis_id>.  If we don't clear \"res\" before calling callback() then we'll end up return the same response as before with the only change being the http status code.\n\n> > If the connection is reused then we don't want to accidentally include the body from a previously received message in the event we exhaust the retry policy and need to return a 502 Bad Gateway.\n> That's fair, but that needs handled in a different spot, once the response has been sent completely.\nI can move the res.clear() calls to after the callback() calls rather than before."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > At that point, what data is in the response?  I don't see any case where we'd have a half-filled response.\n> It's not half-filled, it's just leftover from the previous message that was sent.  Let's say we forward a request to /redfish/v1/Chassis/<satellite_chassis_id>.  We return the response and \"res\" will contain a copy of the response.\n> \n> Now let's say the satellite BMC goes down and we send a request to something like /redfish/v1/Chassis/<satellite_chassis_id>/Sensors/<sensor_id> and it reuses the same Connection.  The BMC won't be reachable so we'll return a 502 after exhausting the retry policy.  However, \"res\" will still contain the response from /redfish/v1/Chassis/<satellite_chassis_id>.  If we don't clear \"res\" before calling callback() then we'll end up return the same response as before with the only change being the http status code.\n> \n> > > If the connection is reused then we don't want to accidentally include the body from a previously received message in the event we exhaust the retry policy and need to return a 502 Bad Gateway.\n> > That's fair, but that needs handled in a different spot, once the response has been sent completely.\n> I can move the res.clear() calls to after the callback() calls rather than before.\n\nI literally typed that almost word for word before I read further down.  Yep, I think that's the right approach."
                },
                {
                    "file": "http/http_client.hpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Carson",
                        "email": "clabrado@google.com",
                        "username": "carsonlab"
                    },
                    "message": "> > I can move the res.clear() calls to after the callback() calls rather than before.\n> I literally typed that almost word for word before I read further down.  Yep, I think that's the right approach.\nI moved res.clear() to after the callback() calls."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -21
                }
            ],
            "sizeInsertions": 82,
            "sizeDeletions": 21
        },
        {
            "number": 17,
            "revision": "b595326e2f64a2758a710ed006fa089583b462e7",
            "parents": [
                "b4ad4c05eeb2104de3becaf704fa1055f72e8b61"
            ],
            "ref": "refs/changes/71/55471/17",
            "uploader": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "createdOn": 1665643520,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Haven't seen any response from Appu in a while.  Lets move forward with this, and if his comments are still valid, we can ask that he reviews it again later."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -22
                }
            ],
            "sizeInsertions": 83,
            "sizeDeletions": 22
        },
        {
            "number": 18,
            "revision": "513d1ffca957889c765569cb3d7d713c12394073",
            "parents": [
                "99612247f847877cc06a0277714d77e5e6cdae27"
            ],
            "ref": "refs/changes/71/55471/18",
            "uploader": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "createdOn": 1666726309,
            "author": {
                "name": "Carson",
                "email": "clabrado@google.com",
                "username": "carsonlab"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "http/http_client.hpp",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -22
                }
            ],
            "sizeInsertions": 83,
            "sizeDeletions": 22
        }
    ]
}