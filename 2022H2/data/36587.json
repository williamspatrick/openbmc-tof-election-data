{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Ie5ae7e35f8618181f52f158602b61f990e93423d",
    "number": 36587,
    "subject": "Version Error yaml files",
    "owner": {
        "name": "Miguel Gomez",
        "email": "mgomez@mx1.ibm.com",
        "username": "mgomezmx1"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/36587",
    "hashtags": [],
    "createdOn": 1600370612,
    "lastUpdated": 1665685105,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1600370612,
            "reviewer": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1600370623,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600370634,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4886/"
        },
        {
            "timestamp": 1600370733,
            "reviewer": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "message": "Patch Set 1:\n\nMoving from Activation errors to Version errors.  previous gerrit id 36309\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/36309"
        },
        {
            "timestamp": 1600370818,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4886/ : SUCCESS"
        },
        {
            "timestamp": 1600373001,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1: Code-Review+1"
        },
        {
            "timestamp": 1600373083,
            "reviewer": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1600373102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600373108,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4887/"
        },
        {
            "timestamp": 1600373376,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4887/ : SUCCESS"
        },
        {
            "timestamp": 1600374363,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1600374990,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1600407734,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1600455240,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1600929707,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1600961708,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1601001259,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1665685105,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Abandoned\n\nclose due to inactivity"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "b728c3ab3d0812617628dfe9fd0c465201861b5d",
            "parents": [
                "9c5f64a723210fd1972d6504cbf4b691fa715ee5"
            ],
            "ref": "refs/changes/87/36587/1",
            "uploader": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "createdOn": 1600370612,
            "author": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.metadata.yaml",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 27,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "9569c3f1b67db63d66792a93ecf739eae64f2d77",
            "parents": [
                "9c5f64a723210fd1972d6504cbf4b691fa715ee5"
            ],
            "ref": "refs/changes/87/36587/2",
            "uploader": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "createdOn": 1600373083,
            "author": {
                "name": "Miguel Gomez",
                "email": "mgomez@mx1.ibm.com",
                "username": "mgomezmx1"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Maybe append the name of the new error to the commit msg, like \"Version: Add new WrongBootVersion error\" so it's easy to know in one line what changed."
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "I prefer to make it a property in a separated interface, so that it becomes an optional property of a D-Bus object (e.g. /xyz/openbmc_project/software/\nThe use case would be:\n* In UBI case, it indicates if the running version is the expected one or not;\n* In golden image case, it indicates if the running version is the primary or the golden one.\n\nMaking it a property makes it easier for other services to query the status.\nIf it is just an error in the log, I am not sure how the other services could know the status."
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "We still want an error to be logged to notify the user that something unexpected happened.\nTheoretically the bmc code update app would determine if the expected version or device is loaded, then log this error. At that point it can populate a new property, but is that needed, what other services would be looking at that information?"
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "I'm OK with the error logging.\nBut I still want a property on the DBus to represent which flash it is running on, instead of checking the logs.\n\n> what other services would be looking at that information?\n1. The software update service itself creates and looks for this property;\n2. The system admin could query the property to get the status."
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> But I still want a property on the DBus to represent which flash it is running on, instead of checking the logs.\n\nIsn't this a fallout from your proposed static flash layout design?  Shouldn't you be proposing a property for that?\n\nAs I mentioned in that review, my opinion is that RedundancyPriority already covers that question for UBI-based images (and likely can for Golden also).  If we do need a new property I suspect it would be best as a separate interface because I'm not sure it is applicable to all Software implementations."
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "> Isn't this a fallout from your proposed static flash layout design?  Shouldn't you be proposing a property for that?\n\nYup. Here we are discussing the usecase, and if we all agree I will submit a patch to propose a new property.\n\n> As I mentioned in that review, my opinion is that RedundancyPriority already covers that question for UBI-based images (and likely can for Golden also).\n\nI did not think about this, but it looks promising to use RedundancyPriority to represent the golden image.\n\n> If we do need a new property I suspect it would be best as a separate interface because I'm not sure it is applicable to all Software implementations.\n\nYup, it will be a new interface. It could be an optional property enabled by PACKAGE CONFIG.\n\nBut as you suggested, RedundancyPriority is a good candidate for my usage:\n* It could be made read-only for static-layout case;\n* The phosphor-bmc-code-mgmt sets the priority to 0 when it's running on the primary flash, and 1 when it's on golden image."
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "line": 10,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "\"requested one\""
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.metadata.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Lei, you had commented that this metadata could be filled with:\nBOOTED_VERSION = Golden/Secondary\nEXPECTED_VERSION = Primary\n\nI think that works, even with dual chip systems like Witherspoon we can decide either to add the version string or the chip (primary vs backup) if we detect that the system switched. Or also we could add additional metadata like:\nBOOTED_DEVICE=%s\nEXPECTED_DEVICE=%s\n\nand fill in the VERSION and/or DEVICE metadata when an error occurs either it switched chips or same chip but different version."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.metadata.yaml",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "xyz/openbmc_project/Software/Version.errors.yaml",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 27,
            "sizeDeletions": 0
        }
    ]
}