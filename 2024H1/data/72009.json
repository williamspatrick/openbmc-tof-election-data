{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "Ib3062e442b81855a3ffc23c80bddd3ec7bb41af5",
    "number": 72009,
    "subject": "HwmomTempSensor: Add Enabled to stop sensor polling",
    "owner": {
        "name": "DelphineCCChiu",
        "email": "Delphine_CC_Chiu@wiwynn.com",
        "username": "DelphineCCChiu"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/72009",
    "hashtags": [],
    "createdOn": 1718615700,
    "lastUpdated": 1719546525,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1718615700,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1718615713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718615713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1718615733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86202/ : FAILURE"
        },
        {
            "timestamp": 1718616624,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718616659,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718616659,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1718617073,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86211/ : SUCCESS"
        },
        {
            "timestamp": 1719065121,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1719201133,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1719214447,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719214495,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719214495,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1719215207,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86639/ : SUCCESS"
        },
        {
            "timestamp": 1719215431,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719273993,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1719341980,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719386468,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719386513,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719386513,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1719386889,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86752/ : SUCCESS"
        },
        {
            "timestamp": 1719387716,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1719390314,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1719390504,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719546446,
            "reviewer": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1719546525,
            "reviewer": {
                "name": "BonnieLo-wiwynn",
                "email": "bonnie.lo.wiwynn@gmail.com",
                "username": "BonnieLo"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "f4c4cdc8eb7bc9493b7604e6ab1155f810566893",
            "parents": [
                "d8e48df6fe7a09eaad64becd8a46e42b89ba900c"
            ],
            "ref": "refs/changes/09/72009/1",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1718615700,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -10
                },
                {
                    "file": "src/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 53,
            "sizeDeletions": 10
        },
        {
            "number": 2,
            "revision": "1f1bbaa9b15a29b21a21ff4e397d688ae53a3375",
            "parents": [
                "d8e48df6fe7a09eaad64becd8a46e42b89ba900c"
            ],
            "ref": "refs/changes/09/72009/2",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1718616624,
            "author": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/sensor.hpp",
                    "line": 401,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "```\nif (propIn != old) {\n    old = propIn;\n    isSensorEnabled = propIn;\n}\nreturn 1;\n```\n\n?\n\nBut is this meant to return 1 either way? Seems odd?"
                },
                {
                    "file": "src/sensor.hpp",
                    "line": 401,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "My thought is to avoid unessasary variable assignment if the incoming value is equal to the original one, I think your suggestion is better, updated the code, thanks.\n\nReturn 1 means the value is successfully updated, the code in `object_servcer.hpp` will handle the same-value-updated scenario. I kept the return value 0/1 instead of true/false to keep the consistency of other existing dbus properties such as `Functional`.\n```\n    SetPropertyReturnValue operator()(const std::any& value)\n    {\n        const PropertyType& newValue = std::any_cast<PropertyType>(value);\n        PropertyType oldValue = *value_;\n        if (func_(newValue, *value_) == false) << return 0 would lead to fail\n        {\n            return SetPropertyReturnValue::fail;\n        }\n        if (oldValue == *value_)\n        {\n            return SetPropertyReturnValue::sameValueUpdated;\n        }\n        return SetPropertyReturnValue::valueUpdated;\n    }\n```"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -10
                },
                {
                    "file": "src/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 53,
            "sizeDeletions": 10
        },
        {
            "number": 3,
            "revision": "fd0cbaa1a795af6be1615d0e142b2d131df0e1bb",
            "parents": [
                "d8e48df6fe7a09eaad64becd8a46e42b89ba900c"
            ],
            "ref": "refs/changes/09/72009/3",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1719214447,
            "author": {
                "name": "Chris Wang",
                "email": "Chris_Wang@wiwynn.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "What firmware is being updated and why sensor polling need to be disabled? Is this expected to be controlled on a per sensor bases? There are different ways to stop the polling. I like to understand the requirement/use case better."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "> Zhikui Ren: There are different ways to stop the polling\n\nIs there a existing mechanism to stop polling the sensors managed by `HwmonTempSensor`? If so, could you please provide some related links? Thanks!\n\n**Problem Explanation**:\nWe need to conduct OOB NIC firmware update on a multi-host system via PLDM/MCTP/I2C, there are 4 NICs on the system, since lack of I2C bus, we forced to have an I2C mux between the BMC and the 4 NICs.\n\nDuring PLDM firmware update, the NIC will ask for firmware image from the BMC, which will trigger the mechanism of I2C multi-master. However, only the BMC can use the I2C mux driver to switch the mux, if there is any traffic from the other NICs cause the mux is switched during a firmware update, the updating NIC would loss the connection to the BMC.\n\nPlus, we have a remote temperature sensor on each NIC and read by `HwmonTempSensor`, the service constantly polling the sensors, which would cause the mux being switch, as a result, we need a mechanism to stop polling the NIC's sensors and keep the `HwmonTempSensor` architecture clean."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I like to understand the requirement/use case better.\n\n+1\n\n>  the updating NIC would loss the connection to the BMC.\n\nThis sounds like a missing lock in your MCTP implementation.  If mctp is waiting for a reply, I'd expect it to keep the mux locked during that time so that the device can reply."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "BonnieLo-wiwynn",
                        "email": "bonnie.lo.wiwynn@gmail.com",
                        "username": "BonnieLo"
                    },
                    "message": "Hi ED,\n\nSure thing. Now we are discussing with Meta for all use cases. Let me mark it as WIP."
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 144,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We can do `[weakRef{weak_from_this()}]` here and avoid declaring the local variable."
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 144,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 150,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think this might be nicer:\n\n```\nif (auto self = weakRef.lock())\n{\n    ...\n}\n```"
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "line": 150,
                    "reviewer": {
                        "name": "DelphineCCChiu",
                        "email": "Delphine_CC_Chiu@wiwynn.com",
                        "username": "DelphineCCChiu"
                    },
                    "message": "Done, thanks for the suggestion."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -10
                },
                {
                    "file": "src/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 10
        },
        {
            "number": 4,
            "revision": "33e38e42f87dcaaf13186b0ff751afe027d148fb",
            "parents": [
                "d8e48df6fe7a09eaad64becd8a46e42b89ba900c"
            ],
            "ref": "refs/changes/09/72009/4",
            "uploader": {
                "name": "DelphineCCChiu",
                "email": "Delphine_CC_Chiu@wiwynn.com",
                "username": "DelphineCCChiu"
            },
            "createdOn": 1719386468,
            "author": {
                "name": "Chris Wang",
                "email": "Chris_Wang@wiwynn.com",
                "username": ""
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like a distributed design that needs a lot more documentation or examples of how it's intended to work.\n\nDisabling thermal sensors forever is dangerous, and has very bad effects in the case where an update crashes, or fails to apply.  We need to design around permanent failures, and I don't really see that in what's implemented here.\n\nI see no timeouts, or mentions of what implementations will be selecting these, nor configuration parameters for which sensors are allowed to be disabled.  2 sentences of commit message certainly isn't enough here.\n\nFWIW, there's already some precedence for this, where presence detect in some of the sensor daemons will disable scanning, and power state changes will disable scanning.  These are handled in a very different way, receiving signals about the state chance rather than method calls, which abstracts away the connection between an update/power daemon, and which devices need to be disabled during an update.  What's written here requires the update daemon to know all the sensors that need disabled, which at a design level duplicates a lot of config, especially when entity-manager already has all the sensors attached to a device.\n\nOverall, I'd like to see more problem description before we jump into solutions."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/HwmonTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -10
                },
                {
                    "file": "src/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 10
        }
    ]
}