{
    "project": "openbmc/webui-vue",
    "branch": "master",
    "id": "I9d6159850b109a658b8f980637653e7e4576058b",
    "number": 71974,
    "subject": "Switch to standard Redfish auth endpoint",
    "owner": {
        "name": "Paul Fertser",
        "email": "fercerpav@gmail.com",
        "username": "paulfertser"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/webui-vue/+/71974",
    "hashtags": [],
    "createdOn": 1718220497,
    "lastUpdated": 1721410618,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1718220497,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1718220526,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718220526,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1718220688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/85979/ : FAILURE"
        },
        {
            "timestamp": 1718221983,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 2: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718222015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718222015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1718222143,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718222238,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/85981/ : SUCCESS"
        },
        {
            "timestamp": 1718254129,
            "reviewer": {
                "name": "Sivaprabu Ganesan",
                "email": "sivaprabug@ami.com",
                "username": "sivaprabug"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1718261680,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718261713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718261713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1718261796,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86004/ : SUCCESS"
        },
        {
            "timestamp": 1718261944,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1718902101,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1718919585,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719369158,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719391564,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719524985,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719525321,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1719527554,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1719528748,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719529586,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1719529708,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719531071,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1719532246,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1719564808,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1719939848,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719939857,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719939857,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1719940015,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87183/ : SUCCESS"
        },
        {
            "timestamp": 1719940876,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719951405,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1720742876,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1720742964,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1720764742,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1721063017,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1721293510,
            "reviewer": {
                "name": "Sivaprabu Ganesan",
                "email": "sivaprabug@ami.com",
                "username": "sivaprabug"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1721293550,
            "reviewer": {
                "name": "Sivaprabu Ganesan",
                "email": "sivaprabug@ami.com",
                "username": "sivaprabug"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1721293570,
            "reviewer": {
                "name": "Sivaprabu Ganesan",
                "email": "sivaprabug@ami.com",
                "username": "sivaprabug"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1721400589,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gunnar@gmills.xyz",
                "username": "gtmills"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1721410618,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Change has been successfully rebased and submitted as 1ff8e89fd2397c468ab0237158e5aeeff2692413"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8b27b8fc6acbc1a8ca7893063fe4e8fe35336e75",
            "parents": [
                "d7cd12c2c1c907cae24af6af8711a20291624523"
            ],
            "ref": "refs/changes/74/71974/1",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1718220497,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -20
                },
                {
                    "file": "src/store/api.js",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 20
        },
        {
            "number": 2,
            "revision": "6c23fa45fa1e490cf61e2ddcf913444609685408",
            "parents": [
                "d7cd12c2c1c907cae24af6af8711a20291624523"
            ],
            "ref": "refs/changes/74/71974/2",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1718221983,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Corresponding bmcweb change: https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71986"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Hello,\nThank you for the review. Please see more inline."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Sivaprabu Ganesan",
                        "email": "sivaprabug@ami.com",
                        "username": "sivaprabug"
                    },
                    "message": "Storing tokens in localStorage has security implications, and it is generally not recommended for sensitive information like authentication tokens. We can stored in cookies ?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Please clarify what specific security implications you have in mind. Probably reference some reputable best practicies document or something.\nCookies are meant to be set and received by the server. Here we use HTTP Headers for authentication, the server doesn't expect receiving any cookies from us (as per the Redfish specification!).\nAnd how exactly is Local Storage less secure for this purpose at all anyhow?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Probably reference some reputable best practicies document or something.\n\nHow about:\nhttps://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#scope\n\n\"Due to potential concurrent access from separate windows/threads, data stored using localStorage may be susceptible to shared access issues (such as race-conditions) and should be considered non-locking (Web Storage API Spec).\"\n\nFWIW, that's the document (an older revision obviously) that was quoted when we originally built out cookie management."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > Probably reference some reputable best practicies document or something.\n> \n> How about:\n> https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#scope\n> \n> \"Due to potential concurrent access from separate windows/threads, data stored using localStorage may be susceptible to shared access issues (such as race-conditions) and should be considered non-locking (Web Storage API Spec).\"\n\nSivaprabu mentioned some \"security implications\", not potential confusion from changing the storage from another window or thread. Also, the quoted statement is true for cookies as well to which Sivaprabu contrasted localStorage. If we switch to sessionStorage then it would be possible to have different users logged in on same BMC from same web browser at the same time but it will break session when the window is reloaded (or browser is restarted) and also this concurrent tabs for different users will stop working anyway when the cookie-auth via the standard endpoint is implemented.\n\nI can not see a practical suggestion here.\n\n> FWIW, that's the document (an older revision obviously) that was quoted when we originally built out cookie management.\n\nI agree this is a very good document, thank you for linking me to it. I see it provides reliable and relevant information about all the important features. It's the job of a particular application developer to apply that knowledge to the particular case."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > Probably reference some reputable best practicies document or something.\n> > \n> > How about:\n> > https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#scope\n> > \n> > \"Due to potential concurrent access from separate windows/threads, data stored using localStorage may be susceptible to shared access issues (such as race-conditions) and should be considered non-locking (Web Storage API Spec).\"\n> \n> Sivaprabu mentioned some \"security implications\", not potential confusion from changing the storage from another window or thread. Also, the quoted statement is true for cookies as well\n\nI don't believe it is. The cookie will be valid in both contexts, so even if the cookie changes, the different is \"atomic\".  The XSRF is read per-session, so it doesn't suffer from concurrent access.\n\n> to which Sivaprabu contrasted localStorage. If we switch to sessionStorage then it would be possible to have different users logged in on same BMC from same web browser at the same time but it will break session when the window is reloaded (or browser is restarted) \n\nBetween this tradeoff, I will take what we have.  refreshing the console is a very common operation.  I don't know if I've ever seen a request for different users to be logged into the same BMC from the same browser.  I don't know if I've seen any other site implement this either.  Generally logins are per user-browser.\n\n\n> and also this concurrent tabs for different users will stop working anyway when the cookie-auth via the standard endpoint is implemented.\n\nWhich is another good reason to retain cookie auth, just using the \"prviate\" nonstandard interface.\n\n> \n> I can not see a practical suggestion here.\n\n1. Keep the status quo.  Yes, it's not great, but we've survived this long?\n2. Keep cookie auth basically as it exists (with the two secrets) and make SessionService POST return a cookie if XSR-requested-by is set.  Thought that's where we landed with this in the other thread, but I guess not?\n\n> \n> > FWIW, that's the document (an older revision obviously) that was quoted when we originally built out cookie management.\n> \n> I agree this is a very good document, thank you for linking me to it. I see it provides reliable and relevant information about all the important features. It's the job of a particular application developer to apply that knowledge to the particular case.\n\n\n\n> the server doesn't expect receiving any cookies from us\n\nRedfish doesn't define /login either, so lets treat this as an incremental step toward the goal.  The advantage of this is also that it would be pretty trivial to implement a mode that did something like \"If an openbmc cookie is present, use that, if not, disable websocket things, and use the xtoken\""
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "but lets start with this just handling cookies from SessionService POST in the same way we handle them with /login (because obviously a simple URI change doesn't change any security properties), and we can look at using the x-auth-token in a later patch if we want, but in there, I don't actually see x-auth-token used anywhere to send back to bmc, it's just stored."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> Keep the status quo. Yes, it's not great, but we've survived this long?\n\nIt's just wrong that webui can not know which session it actually created using `/login`. My immediate motivation is that without knowing which session is used it can not get `Roles` but also it doesn't allow to highlight current session in the list of sessions and there might be some other negative implications. And all that for no good reason as this patch shows webui can be easily switched to using standard Redfish and the code becomes just better by that.\n\n> Keep cookie auth basically as it exists (with the two secrets) and make SessionService POST return a cookie if XSR-requested-by is set. Thought that's where we landed with this in the other thread, but I guess not?\n\nI never said I liked the idea of paying attention to XSR-requested-by but I also have forgotten to mention why I exactly I implemented optional query parameter instead in the bmcweb patch, sorry. I think another browser-based UI has every right to send XSR requests and expect Redfish-conformant behaviour. Those wanting special OpenBMC sauce should be explicit aboout it.\n\n> but lets start with this just handling cookies from SessionService POST in the same way we handle them with /login (because obviously a simple URI change doesn't change any security properties)\n\nThis is what this patch does when it gets the cookie.\n\n> and we can look at using the x-auth-token in a later patch if we want, but in there, I don't actually see x-auth-token used anywhere to send back to bmc, it's just stored.\n\n`api.set_auth_token(token);` makes \"axios\" add that header to every request that follows.\n\nI do not see a reason to implement the token based authentication in a separate patch, this one is simple enough and provides both cookie-based if available and token based if not."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > Keep the status quo. Yes, it's not great, but we've survived this long?\n> \n> It's just wrong that webui can not know which session it actually created using `/login`. My immediate motivation is that without knowing which session is used it can not get `Roles` but also it doesn't allow to highlight current session in the list of sessions and there might be some other negative implications.\n\nI understand, the fact that other things have been implemented is blocking new implementation.  I get it.\n\n> And all that for no good reason as this patch shows webui can be easily switched to using standard Redfish and the code becomes just better by that.\n\n\"no good reason\" meaning that KVM and virtual media need to work?  I'm confused by your statement, because as-is, what's written here (if we didn't support cookies) would break virtual media.\n\n> \n> > Keep cookie auth basically as it exists (with the two secrets) and make SessionService POST return a cookie if XSR-requested-by is set. Thought that's where we landed with this in the other thread, but I guess not?\n> \n> I never said I liked the idea of paying attention to XSR-requested-by but I also have forgotten to mention why I exactly I implemented optional query parameter instead in the bmcweb patch, sorry. I think another browser-based UI has every right to send XSR requests and expect Redfish-conformant behaviour.\n\nSorry, I typed the wrong header: X-Requested-With\nIf this hypothetical UI is sending this header, they've already gone beyond the redfish specification which mentions nothing of this header.  note, webui-vue explicitly sets this header to work around places where Redfish the protocol isn't fully compatible with browsers.  If this causes an actual impact to a known browser-based UI that isn't bmcweb, lets talk about it, but for the moment, I'd like to simplify both the code here (which already sets that header), and the code in bmcweb to use a single header.\n\nFWIW, bmcweb sets anti XSS headers, so unless this UI is on the BMC, we're talking about a hypothetical UI that can't really exist anyway, so logging in is the least of the problems.\n\n> Those wanting special OpenBMC sauce should be explicit aboout it.\n> \n> > but lets start with this just handling cookies from SessionService POST in the same way we handle them with /login (because obviously a simple URI change doesn't change any security properties)\n> \n> This is what this patch does when it gets the cookie.\n\nI see it also parsing out the X-Auth-Token and putting it in local storage?\n\n> \n> > and we can look at using the x-auth-token in a later patch if we want, but in there, I don't actually see x-auth-token used anywhere to send back to bmc, it's just stored.\n> \n> `api.set_auth_token(token);` makes \"axios\" add that header to every request that follows.\n> \n> I do not see a reason to implement the token based authentication in a separate patch, this one is simple enough and provides both cookie-based if available and token based if not.\n\nI do see a reason."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "See reason below."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> See reason below.\n\nI'm not sure I can follow. I _do_ keep the status quo when cookie is provided. In this case (talking to bmcweb) the code in the patch tries to parse the token from the response headers but it doesn't actually use it for anything, it doesn't set it, doesn't store it anywhere, doesn't do a thing with it. I do not see how it can harm, and I see how it can help (webui-vue talking to non-bmcweb Redfish servers). I do /not/ propose to merge this webui-vue patch before bmcweb starts giving cookie to webui-vue when creating a session via the standard endpoint.\n\nRe X-Requested-With, I see how my impression about this idea was wrong. I'll rework both this patch and the patch to bmcweb to just use that in the next iteration, thank you."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> doesn't store it anywhere\n\nIt stores it on the line this code is referencing.\n\n```\nlocalStorage.setItem('xAuthToken', token);\n```"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > doesn't store it anywhere\n> \n> It stores it on the line this code is referencing.\n> \n> ```\n> localStorage.setItem('xAuthToken', token);\n> ```\n\nYou quoted out of context, it was \" In this case (talking to bmcweb) the code ... doesn't store it anywhere \". The line from the patch you mention is conditional on not having the cookie! It's supposed to happen only when talking to other than bmcweb implementations!\n```\n      if (state.xsrfCookie === undefined) {\n        api.set_auth_token(token);\n        localStorage.setItem('xAuthToken', token);\n        state.xAuthToken = token;\n      }\n```\n\nSince the idea to support standard Redfish authentication mechanism feels so controversial I'll split it out in the next iteration, no problem. The first patch will switch to standard endpoint but still mandate cookies. The second will add support for token. The third will store the token in the storage. All concerns discussed separately."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > doesn't store it anywhere\n> > \n> > It stores it on the line this code is referencing.\n> > \n> > ```\n> > localStorage.setItem('xAuthToken', token);\n> > ```\n> \n> You quoted out of context, it was \" In this case (talking to bmcweb) the code ... doesn't store it anywhere \". The line from the patch you mention is conditional on not having the cookie!\n> It's supposed to happen only when talking to other than bmcweb implementations!\n> ```\n>       if (state.xsrfCookie === undefined) {\n>         api.set_auth_token(token);\n>         localStorage.setItem('xAuthToken', token);\n>         state.xAuthToken = token;\n>       }\n> ```\n\n\n\nAh, I do understand now;  That was a subtlety that wasn't apparent in the code.  This is yet another good reason to separate the patches.  Unless you've tested against non-bmcweb backends, we should keep the code less complex for the moment until we have testing against other servers.\n\n\n> \n> Since the idea to support standard Redfish authentication mechanism feels so controversial I'll split it out in the next iteration, no problem. The first patch will switch to standard endpoint but still mandate cookies. The second will add support for token. The third will store the token in the storage. All concerns discussed separately.\n\nI don't know if it's controversial, but we'll need to answer questions around things like how we keep non-openbmc backends working.  How we document that while openbmc-usage is \"secure\" to owasp standards, when put into non-openbmc mode, we're no longer secure and potentially could get junk CVEs from code scanners.  Things like that.\n\nThank you for breaking the patches up."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "Sivaprabu, any more concern here?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Sivaprabu Ganesan",
                        "email": "sivaprabug@ami.com",
                        "username": "sivaprabug"
                    },
                    "message": "I have reviewed the code, and I do not have any concerns at this time."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 39,
                    "reviewer": {
                        "name": "Sivaprabu Ganesan",
                        "email": "sivaprabug@ami.com",
                        "username": "sivaprabug"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 73,
                    "reviewer": {
                        "name": "Sivaprabu Ganesan",
                        "email": "sivaprabug@ami.com",
                        "username": "sivaprabug"
                    },
                    "message": "Kindly remove the console log"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 73,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -20
                },
                {
                    "file": "src/store/api.js",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 20
        },
        {
            "number": 3,
            "revision": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
            "parents": [
                "d7cd12c2c1c907cae24af6af8711a20291624523"
            ],
            "ref": "refs/changes/74/71974/3",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1718261680,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 30,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gunnar@gmills.xyz",
                        "username": "gtmills"
                    },
                    "message": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71986 needs to go first correct?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 30,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71986 needs to go first correct?\n\nIndeed, without that bmcweb patch webui wouldn't be able to use the websocket-based features (IP KVM, SOL, VM) so it would be a regression.\n\nI'm working on incorporating the feedback I got there."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 30,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Gunnar, the bmcweb patch has been merged."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nitpick:\n\nThe SessionService URI is actually a known value in the specification, so we don't need to go to service root first."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> nitpick:\n> \n> The SessionService URI is actually a known value in the specification, so we don't need to go to service root first.\n\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP0266_1.20.1.html#redfish-login-sessions tells me\n```\nTo establish a session, find the URI in either:\n\n    The session service's Sessions property.\n    The service root's links property under the Sessions property.\n```\n\"find the URI\" means an extra request is needed either way or do I get it wrong?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's old language in the spec, and while still technically correct, is no longer necessary (since I think redfish 1.6?).\n\nDocumentation from the CSDL:\nhttps://github.com/DMTF/Redfish-Publications/blob/5b217908b5378b24e4f390c063427d7a707cd308/csdl/SessionService_v1.xml#L62"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> That's old language in the spec, and while still technically correct, is no longer necessary (since I think redfish 1.6?).\n> \n> Documentation from the CSDL:\n> https://github.com/DMTF/Redfish-Publications/blob/5b217908b5378b24e4f390c063427d7a707cd308/csdl/SessionService_v1.xml#L62\n\nOK, wasn't aware of that, noted."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I used SessionCollection URI here, hope you meant that as the POST goes there, not to the SessionService. https://github.com/DMTF/Redfish-Publications/blob/5b217908b5378b24e4f390c063427d7a707cd308/csdl/SessionCollection_v1.xml#L57"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "SessionCollection URI is also fixed in the spec, which means we don't need to read or store it."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 62,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Of course I checked it after your hint and used in the patch. I was just slightly confused as you mentioned SessionService in the previous message. Guess this is resolved."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I suspect we could just keep the old paths, and ignore x-auth-token entirely?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> I suspect we could just keep the old paths, and ignore x-auth-token entirely?\n\nIt provides compatibility to standard Redfish and offers way forward to make webui-vue usable on non-bmcweb implementations. It doesn't increase code complexity considerably, it's all nicely contained in this single file. So why not?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > I suspect we could just keep the old paths, and ignore x-auth-token entirely?\n> \n> It provides compatibility to standard Redfish and offers way forward to make webui-vue usable on non-bmcweb implementations. It doesn't increase code complexity considerably, it's all nicely contained in this single file. So why not?\n\nAlso it provides (limited because websocket features wouldn't be available) compatibility with bmcweb versions where non-standard cookie auth via standard endpoint is not enabled.\n\nAnd in general I can not see how making webui-vue more compatible with standard Redfish can be undesired especially if it doesn't increase complexity much."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> why not?\n\nYou're storing fully qualified secrets in local storage available to javascript\n\nDocumentation:\nhttps://cheatsheetseries.owasp.org/cheatsheets/HTML5_Security_Cheat_Sheet.html#local-storage\n\n```Due to the browser's security guarantees it is appropriate to use local storage where access to the data is not assuming authentication or authorization.```\n\ngiven this is literally an auth token, it assumes authentication.\n\nAlso\n\n```Do not store session identifiers in local storage as the data is always accessible by JavaScript. Cookies can mitigate this risk using the httpOnly flag.```\n\nThat second one is pretty concrete that we shouldn't do this."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > why not?\n> \n> You're storing fully qualified secrets in local storage available to javascript\n\nI agree this is less secure than an HttpOnly cookie, no arguing that. But this is the only way to support page reloads when using Redfish-standard token auth.\n\nDo you think webui-vue shouldn't be doing this when talking to non-bmcweb Redfish implementations? Then page reloads would require logging in again.\n\n> ```Do not store session identifiers in local storage as the data is always accessible by JavaScript. Cookies can mitigate this risk using the httpOnly flag.```\n> \n> That second one is pretty concrete that we shouldn't do this.\n\nBut other Redfish implementations won't be giving us cookies, does it mean we should insist on worse UX with them just to enforce some general ideas about security?"
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > > why not?\n> > \n> > You're storing fully qualified secrets in local storage available to javascript\n> \n> I agree this is less secure than an HttpOnly cookie, no arguing that. But this is the only way to support page reloads when using Redfish-standard token auth.\n\nRight, which is one of the several reasons we use cookie auth.  If the goal is to make webui-vue generically work on non-openbmc redfish instances, that's certainly a good goal, and I suspect you'd get support, but that's a significantly different patch, and why I'd recommend splitting up the goals.\n\n> \n> Do you think webui-vue shouldn't be doing this when talking to non-bmcweb Redfish implementations? Then page reloads would require logging in again.\n\n\n\nThe reason I asked you to break up this patch into two is because you're combining two changes:\n1. We should use a (slightly) non standard redfish login that passes cookies, but can also give us the Redfish Session id with the existing levels of security and capability we have today.\n2. We should be arbitrarily compatible with any Redfish server, and disregard owasp security recommendations to do it.\n\nThese are both equally valid to talk about, and certainly could be discussed, but trying to do both at the same time in the same commit is making this harder than it needs to be.\n\n> \n> > ```Do not store session identifiers in local storage as the data is always accessible by JavaScript. Cookies can mitigate this risk using the httpOnly flag.```\n> > \n> > That second one is pretty concrete that we shouldn't do this.\n> \n> But other Redfish implementations won't be giving us cookies, does it mean we should insist on worse UX with them just to enforce some general ideas about security?\n\nFrankly, yes.  If making things compatible with non-openbmc webservers is a goal, I'd probably start with making a feature flag that we could set for \"we should be compatible\" that implementations could set that turns on local storage, disables the console and kvm etc.  That's just a strawman, but again, that discussion should happen in a different patch (ideally one where we've actually tested this on another Redfish server).  This patch should stay focused on trying to move OpenBMC over to use /redfish/v1/SessionService to login."
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "line": 75,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -20
                },
                {
                    "file": "src/store/api.js",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 88,
            "sizeDeletions": 20
        },
        {
            "number": 4,
            "revision": "1c8f0b141cd83bcb4ef2dcf8e5d79f3fa977c435",
            "parents": [
                "8841b7d463a5272a87faaa14cb103f778a772770"
            ],
            "ref": "refs/changes/74/71974/4",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1719939848,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 12
        },
        {
            "number": 5,
            "revision": "1ff8e89fd2397c468ab0237158e5aeeff2692413",
            "parents": [
                "bc49e09187cab43f8564f2adb6b8860544870641"
            ],
            "ref": "refs/changes/74/71974/5",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1721410618,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/store/modules/Authentication/AuthenticanStore.js",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -12
                }
            ],
            "sizeInsertions": 47,
            "sizeDeletions": 12
        }
    ]
}