{
    "project": "openbmc/phosphor-logging",
    "branch": "master",
    "id": "I82cb357ba84c0de822132e828ccfdfa1e4c91c7f",
    "number": 69915,
    "subject": "log_manager: send D-Bus entries to journal",
    "owner": {
        "name": "Paul Fertser",
        "email": "fercerpav@gmail.com",
        "username": "paulfertser"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-logging/+/69915",
    "hashtags": [],
    "createdOn": 1709805501,
    "lastUpdated": 1719494402,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1709805501,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1709805518,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709805518,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1709805843,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 2: New patch set was added with same tree, parent tree, and commit message as Patch Set 1."
        },
        {
            "timestamp": 1709805867,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709805867,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1709805869,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nCopied votes on follow-up patch sets have been updated:\n* Verified-1 has been copied to patch set 2 (copy condition: \"changekind:NO_CHANGE\").\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/80286/ : ABORTED"
        },
        {
            "timestamp": 1709806450,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/80287/ : SUCCESS"
        },
        {
            "timestamp": 1709865280,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1709911069,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1710047017,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1710060455,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1712863974,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1712864775,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1712866323,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1712870827,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1712871371,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1713011984,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713012022,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713012022,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1713012101,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1713012110,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/82595/ : FAILURE"
        },
        {
            "timestamp": 1713012315,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Uploaded patch set 4: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713012357,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713012357,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1713012915,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/82596/ : SUCCESS"
        },
        {
            "timestamp": 1713365443,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1713781814,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1715589688,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1715714072,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1715714176,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1716491608,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1719399927,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719439468,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1719439653,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Code-Review-2\n\n(1 comment)"
        },
        {
            "timestamp": 1719440073,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719441294,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1719442372,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1719443201,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719444246,
            "reviewer": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719494402,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4: -Code-Review"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "25c0fba9b06797470006417cd05997a60bc875e6",
            "parents": [
                "101f44d09892774580955be4ff2e4d31b226021f"
            ],
            "ref": "refs/changes/15/69915/1",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1709805501,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "log_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "ec381c916d86def96e739bc30eb49de053a938d0",
            "parents": [
                "a6e40550e6c48e8a1437bb392e84c0fd72d44d58"
            ],
            "ref": "refs/changes/15/69915/2",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1709805843,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "can you throw in some examples of what the output looks like?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I'm not sure what output exactly you have in mind. With this patch journald gets the message with many fields but journalctl has many different kinds of outputs to represent the log entries. Then rsyslog also gets full information from journald and the end user can do filtering, transformations and redirections with RainerScript.\nHere's a sample of what rsyslog saves to a file using all defaults:\n```\n2024-03-05T18:09:18.647251+00:00 g2 phosphor-log-manager[267]: Test message arg1=1value1 arg2=value2\n```\nproduced by a manual D-Bus call:\n```\n# busctl call xyz.openbmc_project.Logging /xyz/openbmc_project/logging xyz.openbmc_project.Logging.Create Create 'ssa{ss}' \"Test message\" xyz.openbmc_project.Logging.Entry.Level.Error 2 arg1 1value1 arg2 value2\n```\nWould that be enough of an example? Or do you want something from `phosphor-sel-logger` specifically?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Actually, I think I'm missing something.  Why aren't you just using lg2 here?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "phosphor-sel-logger isn't using lg2 or other phosphor-logging features because of https://gerrit.openbmc.org/c/openbmc/phosphor-sel-logger/+/62687 . In the current patch we are discussing I could have used something like `lg2::log<isev>(syslog_msg)` I guess if it's guaranteed to never create a D-Bus entry on its own.\n\nAnd talking about never, I clearly have no idea about the anticipated future of this code. What is the plan with the logging exactly? Will some machinery be added to support multiple hosts SELs? Will that patch to phosphor-sel-logger be eventually reverted? Will phosphor-logging gain full independence from rsyslog for all the available Redfish features?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 32,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I would appreciate more feedback on this one. Should I just remove [RFC] and re-submit, have we discussed enough? Or did I fail to clarify some point?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "What has been confusing me here is you mention the syslog in the commit message, but not the journal, but all this commit does is write to the journal, and for a reason that isn't clear to me doesn't use lg2 to do it.\n\nIf you were to redo the commit message to state that it writes the log entry fields to the journal, and why, and then also use lg2 to do it, or explain why it can't, it would help my understanding."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Thank you, now we're talking :) Let me clarify inline.\n\n> What has been confusing me here is you mention the syslog in the commit message, but not the journal, but all this commit does is write to the journal, and for a reason that isn't clear to me doesn't use lg2 to do it.\n\nIndeed I see now how the commit message is confusing in this regard, I will make it clearer. The main idea was that we need those messages to eventually get to rsyslog for further processing (sending out via the syslog protocol, probably e-mails and what's not), and with the current configuration we have rsyslog getting everything from systemd journal so indeed the patch actually sends the message to the journal rather than rsyslog directly but the final aim is to get it into rsyslog.\n\nI will reword to set that straight.\n\n\n> and then also use lg2 to do it, or explain why it can't, it would help my understanding.\n\nFirst question about using lg2 here is whether we're guaranteed to not get infinite recursion here in case you later decide that lg2 should be creating D-Bus objects when called. I find that unlikely but feel a need to ask.\n\nAnother point is that I can't call `lg2::log<isev>(syslog_msg)` as it is because `isev` isn't constant. I can try using `lg2::details::do_log(..)` internal function, does this sound OK to you?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "also, I had asked earlier - can you put a real example in the commit message of a journal entry that shows up from this code when a log entry from existing code is created?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> also, I had asked earlier - can you put a real example in the commit message of a journal entry that shows up from this code when a log entry from existing code is created?\n\nNoted, I will."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "I hope this new version resolves all the comments."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "log_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 14,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 50,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "67c45675e1d067db2f401568309f8223fb63daa1",
            "parents": [
                "221b79b3b97dac3df73b155f6e24363bb6a9d6f2"
            ],
            "ref": "refs/changes/15/69915/3",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1713011984,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "log_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 78,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "3a60f58e66abe5baa4fcb4e4f513a15fefb2c1ca",
            "parents": [
                "221b79b3b97dac3df73b155f6e24363bb6a9d6f2"
            ],
            "ref": "refs/changes/15/69915/4",
            "uploader": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "createdOn": 1713012315,
            "author": {
                "name": "Paul Fertser",
                "email": "fercerpav@gmail.com",
                "username": "paulfertser"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "One can also use event log subscriptions via Redfish to get event log notifications (I don't know the exact details)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Right, that's a good and Redfish standard way. However this is not immediately useful to integrate in other bigger systems unlike the syslog protocol which is universally supported as it was in use for decades and got formally described with RFC3164 in 2009."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 59,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "This is certainly ugly with all of the field duplication ...\n\nI suppose you want it in case the message from sellogger doesn't include the relevant info?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 59,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "The message from sel-logger currently is a plain text message plus a set of specific fields with values. And it's not fully duplicated, e.g. the SENSOR_PATH has more information (full path) than the text message (just the sensor name).\n\nIn any case the patch being discussed needs to include all the available information in the text string as it's just a text string that can be meaningfully passed to remote syslog (or other transports) later.\n\nUgly, yes. Does the job? I'd say yes too. Do you have a more elegant way in mind?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Thanks for the updates.\n\nSo there are multiple event log implementations today:\n\nThe original one, phosphor-logging, that uses the Logging.Entry interface on D-Bus for each entry.  And that one has 2 APIs for creating events, its original one, which which uses the journal, and the newer dbus one (see https://github.com/openbmc/phosphor-logging/blob/master/README.md#creating-event-logs-in-code)\n\nAnd then the newer one that also writes to the journal, but then has rsyslog set up to pull those out into a separate file so that redfish can get them.  In fact, I can see that can also already be used by phosphor-sel-logger: https://github.com/openbmc/phosphor-sel-logger/blob/master/include/threshold_event_monitor.hpp#L327\n\nWith whats above, there's already 2 ways event logs can already be written to the journal today.  So I don't think we can just enable this across the board, because even for people that using phosphor-logging for their event logs they would get duplicate journal entries per log when they use the original report<>() and commit<>() APIs, which a lot of older code does.  Also I heard there is a revamp coming that will make  people want to use it if they aren't already so they can get better redfish logs.\n\nAll of that being said, if this would just be hidden behind a meson option I wouldn't be against it."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Hello Matt,\n\n> So there are multiple event log implementations today:\n\nAs far as I can tell we have just two _mutually exclusive_ ways to get SEL records exposed via Redfish.\n\nThe bmcweb Meson `redfish-dbus-log` option enables either https://github.com/openbmc/bmcweb/blob/master/redfish-core/src/redfish.cpp#L129 the clumsy method of reading from `/var/log/redfish` generated by special company-specific rsyslog configuration such as https://github.com/openbmc/openbmc/blob/5b33e7a86d459dde90a4b4d9f50c121f7932e95e/meta-facebook/recipes-extended/rsyslog/rsyslog/rsyslog.conf#L48 or the OpenBMC documented (in phosphor-dbus-interfaces) D-Bus SEL API https://github.com/openbmc/bmcweb/blob/master/redfish-core/src/redfish.cpp#L167 , not both at the same time.\n\nThe phosphor-sel-logger option `send-to-logger` is also choosing between two distinct methods of logging events: https://github.com/openbmc/phosphor-sel-logger/blob/master/src/sel_logger.cpp#L204 , again, it either generates a Journal entry with the special `REDFISH_MESSAGE_ID` field or it sends it to OpenBMC logger service, and never both. Same about the other daemons that write SEL entries, they all either specify explicit `REDFISH_MESSAGE_ID` field in systemd journal or they tell the logger (via D-Bus or by throwing an exception and \"commiting\" it) to create an entry in the D-Bus interface.\n\n> With whats above, there's already 2 ways event logs can already be written to the journal today.  So I don't think we can just enable this across the board, because even for people that using phosphor-logging for their event logs they would get duplicate journal entries per log when they use the original report<>() and commit<>() APIs, which a lot of older code does. \n\nWhen report/commit API is used the journal entry is created (without REDFISH_MESSAGE_ID!) and the current patch I'm proposing is NOT coming into play at all because `Manager::_commit()` is called and `Manager::create()` (which I extend) isn't. When the D-Bus API is used the `Manager::create()` function is called as a handler and before this patch it didn't add anything at all to the journal.\n\nWhen any way to create a journal entry with REDFISH_MESSAGE_ID is used (be it `lg2::log<>` or `sd_journal_send`) the phosphor-logging daemon does nothing and no D-Bus entry is created at all.\n\n> All of that being said, if this would just be hidden behind a meson option I wouldn't be against it.\n\nSo far I fail to see when it might be needed. Can you please outline a specific set of configuration options and events which would lead to duplicated entries anywhere? I might be missing some details so I outlined my current understanding in the hopes you can pinpoint something particular in it which is wrong (if anything is indeed wrong or missing). Thank you."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Hello Matt,\n\nPlease do not let this one slip through the cracks again, if there's something wrong about my understanding please help me see it so we can continue with the cleanest way possible."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Would it be worth holding off on this for say 1-2 weeks?  I'm finishing up a design for a revamped error and event logging design."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We're at least going to make this an option, right?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> We're at least going to make this an option, right?\n\nThere's no option (and there can not be given the current way it's architectured) to avoid including in the system journal the SEL entries generated by the recommended method of exception throwing of `phosphor-dbus-interfaces` documented objects, right? So why ad-hoc SELs generated with a D-Bus call should be any different?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "(I marked this as -2 only because Matt gave it a +2 and I didn't want it merged yet; I made mention before that I was working on the improved design, which is since up, but I didn't see any follow up from you on this remark.)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> There's no option (and there can not be given the current way it's architectured) to avoid including in the system journal the SEL entries generated by the recommended method of exception throwing of phosphor-dbus-interfaces documented objects, right?\n\nThese don't go to the journal afaik.  Parts of them do because the journal is currently used as the \"IPC channel\" to phosphor-logging.  The design document I pointed to is working to eliminate this.\n\n> So why ad-hoc SELs generated with a D-Bus call should be any different?\n\nTo avoid the noise for people who don't want it.  With the yosemite4 platform and a 10MB space for the journal, I already can't even capture all of the BMC startup content in the journal.  I don't want to make that situation worse."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> (I marked this as -2 only because Matt gave it a +2 and I didn't want it merged yet; I made mention before that I was working on the improved design, which is since up, but I didn't see any follow up from you on this remark.)\n\nNP, the intent behind -2 is clear. I wasn't aware the design document was since posted, hence no follow up, I hoped Matt would update me here if the situation changes."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > There's no option (and there can not be given the current way it's architectured) to avoid including in the system journal the SEL entries generated by the recommended method of exception throwing of phosphor-dbus-interfaces documented objects, right?\n> \n> These don't go to the journal afaik.  Parts of them do because the journal is currently used as the \"IPC channel\" to phosphor-logging. \n\nYes, that's what I meant, the journal entries are unavoidable when using the exceptions method with the code as it currently is because the journal is used as IPC.\n\n> The design document I pointed to is working to eliminate this.\n\nGood to know. So there's going to be a generic switch for all SELs to go or not go to the journal, no matter how exactly generated, right? I'll happily hook up the code in this patch into it.\n\n> > So why ad-hoc SELs generated with a D-Bus call should be any different?\n> \n> To avoid the noise for people who don't want it.  With the yosemite4 platform and a 10MB space for the journal, I already can't even capture all of the BMC startup content in the journal.  I don't want to make that situation worse.\n\nHm, I never thought those messages there were undesired, a harmful side effect. I see how it makes sense then.\n\nHowever please note how this very phosphor-logging repository has means to configure remote syslog destinations and they're hooked into Redfish and I think people expect to receive all the SELs when that feature is used. So I guess that flag that disables sending to journal should also disable the possibility to add remote syslog destinations?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> However please note how this very phosphor-logging repository has means to configure remote syslog destinations and they're hooked into Redfish and I think people expect to receive all the SELs when that feature is used. So I guess that flag that disables sending to journal should also disable the possibility to add remote syslog destinations?\n\nCan you elaborate what you mean by this?  I do see phosphor-rsyslog-config here, but I have no idea what it does.  I do know that phosphor-sel-logger has some rsyslog config stuff as well which is what pulls out specific pieces of the journal and forwards them to rsyslog.  Is there really a case where \"all the SELs\" go out [whatever that means]?\n\n(The use of \"SEL\" is a bit confusing.  \"System Event Log\" is some specific wording used in the IPMI spec, but then people tend to overload it to mean the \"stuff held by the BMC\".  phosphor-sel-logger has some strange mixture of both of these.  I assume you are using it to refer to the \"stuff held by the BMC\" and not the IPMI-generated events?)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> > However please note how this very phosphor-logging repository has means to configure remote syslog destinations and they're hooked into Redfish and I think people expect to receive all the SELs when that feature is used. So I guess that flag that disables sending to journal should also disable the possibility to add remote syslog destinations?\n> \n> Can you elaborate what you mean by this?  I do see phosphor-rsyslog-config here, but I have no idea what it does. \n\nBasically it just creates a config file for `rsyslog` to forward everything it gets from journal to a remote syslog instance using classical syslog protocol. It's controlled over a `phosphor-dbus-interfaces`-specified API and `bmcweb` has support for it. So if essential messages are not going to journal then this should be turned off too to avoid confusion.\n\n> Is there really a case where \"all the SELs\" go out [whatever that means]?\n \nIt used to be that all important messages were unconditionally present in the journal, fetched by custom rsyslog config and exported in a weird way to files for `bmcweb` and host ipmi daemon consumption. Judging by e.g. `meta-intel-openbmc/./meta-common/recipes-extended/rsyslog/rsyslog/rsyslog.conf` some companies still rely on that. And if they are all available to rsyslog they will all get sent to remote syslog if that's configured.\n\n> The use of \"SEL\" is a bit confusing...\n\nIndeed, sorry about that. In fact I really meant all the important events about the host and BMC systems available via Redfish Events, that's what I care about. `bmcweb` can already send them to configured Redfish-aware HTTP destinations, but also it offers other possibilities such as regular remote syslog or SNMP traps. I've heard some people even want mails with them to be sent over SMTP."
                },
                {
                    "file": "log_manager.cpp",
                    "line": 631,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I think this should have a meson option to enable it, and would prefer it default to disabled.\n\nAs of now there's pretty much no chance my systems would ever use rsyslog functionality to scrape event logs, so would rather not have these take up space in the journal.  Also, some event logs have fairly large additional data properties that would be a mess to have to deal with when trying to manually debug using the journal."
                },
                {
                    "file": "log_manager.cpp",
                    "line": 631,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "> I think this should have a meson option to enable it, and would prefer it default to disabled.\n\nHow about this angle: this patch fixes a regression. Before https://github.com/openbmc/phosphor-sel-logger/commit/6f5342d0bdb2b2b8c52323219656f88794abf54f all SEL messages were forwarded to remote syslog server configured via standard Redfish calls using rsyslog configuration generated by this very `phosphor-logging` project: https://github.com/openbmc/phosphor-logging/blob/master/phosphor-rsyslog-config/server-conf.hpp#L93 . Now since some services switched from throwing an exception and committing it to logger the OpenBMC functionality provided by webui-vue + bmcweb + phosphor-rsyslog-conf (part of phosphor-logging) broke.\n\nIs it really a good idea to leave the fix disabled by default?\n\n> As of now there's pretty much no chance my systems would ever use rsyslog functionality to scrape event logs, so would rather not have these take up space in the journal.\n\nBut all the other modern event reporting methods for phosphor-logging go via the journal and take up the space there. And what if phosphor-dbus-interfaces is properly expanded to provide a suitable type for SEL events and phosphor-sel-logger switches back to `report<SELCreated>`?\n\nI do not see why you want to treat those cases differently. Your system do not need rsyslog, ok, but some other systems rely on functionality provided by it. And it's part of Redfish.\n\nCurrent state is just semi-broken, some messages get sent properly (those generated by throwing exception), some remain available only via D-Bus and Redfish. I can't see why you insist on keeping it this way. I'd say either all messages should be in the journal or none.\n\n> Also, some event logs have fairly large additional data properties that would be a mess to have to deal with when trying to manually debug using the journal.\n\nI just checked, on Ubuntu journalctl uses `less` for paging with parameter `-S` which means \"Causes  lines longer than the screen width to be chopped (truncated) rather than wrapped\" by default. And some messages are indeed long but apparently sysadmins got used to it by now. OpenBMC less supports the -S option too so I can not see how additional data properties are going to make debugging problematic."
                },
                {
                    "file": "log_manager.cpp",
                    "line": 631,
                    "reviewer": {
                        "name": "Paul Fertser",
                        "email": "fercerpav@gmail.com",
                        "username": "paulfertser"
                    },
                    "message": "Ping, it's been more than a whole month now. I think I answered all current questions and provided good rationale, please tell what's missing."
                },
                {
                    "file": "log_manager.cpp",
                    "line": 631,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "> I'd say either all messages should be in the journal or none.\nI suppose that's fair.  \n\nI was hoping someone else in the community would chime in here, but doesn't seem like that's going to happen."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "log_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 80,
            "sizeDeletions": 0
        }
    ]
}