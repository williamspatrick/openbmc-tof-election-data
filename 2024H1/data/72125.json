{
    "project": "openbmc/docs",
    "branch": "master",
    "topic": "design",
    "id": "I40deb1f5b5f2f5d4386af769730ebfdde525820f",
    "number": 72125,
    "subject": "Add designs/uart-mux-support.md",
    "owner": {
        "name": "Alexander",
        "email": "alexander.hansen@9elements.com",
        "username": "pointbazaar"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/72125",
    "hashtags": [],
    "createdOn": 1718643662,
    "lastUpdated": 1721780844,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1718643662,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1718643711,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718643716,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1718643734,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86231/ : SUCCESS"
        },
        {
            "timestamp": 1718643802,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1718714197,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1718728128,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718728164,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718728164,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1718728191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86374/ : SUCCESS"
        },
        {
            "timestamp": 1718729072,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718757138,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718764939,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718764989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718764989,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1718765011,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86434/ : FAILURE"
        },
        {
            "timestamp": 1718765994,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718766020,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718766020,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1718766041,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86435/ : SUCCESS"
        },
        {
            "timestamp": 1718767396,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718767440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718767440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1718767467,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86436/ : SUCCESS"
        },
        {
            "timestamp": 1718767510,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1718786637,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1718843485,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1718860504,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718860557,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718860557,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1718860584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86515/ : FAILURE"
        },
        {
            "timestamp": 1718860679,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718860701,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718860702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1718860729,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86518/ : SUCCESS"
        },
        {
            "timestamp": 1718873331,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718873363,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718873363,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1718873384,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86536/ : SUCCESS"
        },
        {
            "timestamp": 1718873628,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1718936005,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718936037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718936037,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1718936058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86568/ : SUCCESS"
        },
        {
            "timestamp": 1718936068,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1719286560,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 9: Code-Review+2\n\n(5 comments)"
        },
        {
            "timestamp": 1719294794,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1719301682,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1719371650,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1719377774,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1719377925,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Code-Review+1, Code-Review+2 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719377929,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1719377940,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1719377948,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719377948,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1719377975,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86751/ : SUCCESS"
        },
        {
            "timestamp": 1719387649,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1719522433,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1719537340,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1719570887,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 10:\n\n(7 comments)"
        },
        {
            "timestamp": 1719587345,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1719587439,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(5 comments)"
        },
        {
            "timestamp": 1719838048,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1719862470,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1719867576,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1719880133,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1719881302,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1719944435,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1719970874,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1720706099,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1721339020,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1721351645,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1721389986,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Code-Review+1, Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1721390025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1721390025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1721390046,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/88349/ : SUCCESS"
        },
        {
            "timestamp": 1721392175,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 11: Code-Review+2"
        },
        {
            "timestamp": 1721393790,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1721780839,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 11: Code-Review+1"
        },
        {
            "timestamp": 1721780844,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Change has been successfully rebased and submitted as 8e6dbb4dbd8b3563fb37ad216c5049156094256e"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "cfe840d61d153a3fbebd3052e43615aa1bf75dde",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/1",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1718643662,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Add you aswell \ud83d\udc4d"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Alexander, thanks for adding the design doc. After some discussion with Jeremy I've tried to zoom the discussion out a little further."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So I think it might be best if we add a \"Considerations\" section somewhere, either as a `### Considerations` header under `## Background and References` or possibly its own `## Considerations` section before `## Requirements`.\n\nWhat I think is important to cover in \"Considerations\" is that we have a number of choices to make. The following is the result of me stepping back to analyze the options, along with some discussion with Jeremy:\n\n1. What does the \"connection endpoint\" (Unix domain socket, DBus object) represent? This could be either:\n 1. The TTY device exposed by Linux\n 2. The desired downstream mux port\n2. How the mux state is controlled. We might control it by any of:\n 1. An out-of-band command (e.g. via a DBus method that's somehow associated with the connection endpoint\n 2. An in-band command (e.g. introducing an SSH-style escape-sequence)\n 3. Selecting the mux port based on the endpoint to which the user has connected\n3. The circumstances under which we allow the mux state to be changed\n 1. Active connections prevents the mux state from being changed\n 2. The mux state can always change but will terminate any existing conflicting connections\n 3. The mux state can always change and has no impact on existing conflicting connections\n4. Whether we want the data stream on a given connection to represent:\n 1. The console IO regardless of the mux state\n 2. The console IO isolated to a specific mux port\n\nThere are constraints on some combinations of these. For instance:\n\n5. If the connection endpoint represents the TTY device exposed by Linux (1.1) then we can't select the mux port based on the endpoint to which the user has connected (2.3) as we simply don't have the information required\n6. If the connection endpoint represents the desired downstream mux port (1.2) then it doesn't make sense to implement support for an in-band command to change the mux state (2.2) as it's a violation of the abstraction\n7. If the connection endpoint represents the desired downstream mux port (1.2) then it can't provide the console IO of another mux port (4.1) as that's contrary to the definition.\n\nWith these in mind we end up with the following table of design options:\n\n| ID | Connection Endpoint (1) | Mux Control Defined By (2) | Mux Control Policy (3) | Stream Data (4) |\n|----|-------------------------|----------------------------|------------------------|------------------|\n| A | TTY (1.1) | Out-of-band command (2.1)  | Active connections prevent mux change (3.1) | Isolated (4.2) |\n| B | TTY | Out-of-band command | Mux change with disconnections (3.2) | Isolated |\n| C | TTY | Out-of-band command | Mux change without disconnections | Multiplexed (4.1) |\n| D | TTY | In-band command (2.2) | Mux change never denied | Multiplexed |\n| E | Mux port (1.2) | Connection-based (2.3) | Conflicting connections prevent mux change (3.1) | Isolated |\n| F | Mux port | Connection-based | Mux change with disconnections | Isolated |\n| G | Mux port | Connection-based | Mux change without disconnections | Isolated |\n| H | Mux port | Out-of-band command | Conflicting connections prevent mux change | Isolated |\n| I | Mux port | Out-of-band command | Mux change with disconnections | Isolated |\n| J | Mux port | Out-of-band command | Mux change without disconnections | Isolated |\n\n---\n\nTo help shape the choices here, we have the existing behaviours of obmc-console [discussed on the PDI patch](https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/71878/comment/dd34b099_66dbc49e/):\n\n8. We already have support for concurrent console server instances\n9. Concurrent console support is implemented as one obmc-console-server process per Linux TTY device\n10. As each Linux TTY device is paired with its obmc-console-server process, each obmc-console-server DBus connection needs a unique name\n11. We use the unique console-ids to name global resources, including both the DBus connection and the instance's unix domain socket.\n\nAs in the linked discussion, given the `console-id` value really represents what's at the remote end of the BMC's TTY device for regular unmuxed consoles it stands to reason that we should probably continue this strategy for muxed consoles. Taking this approach avoids adding a new endpoint ABI to obmc-console and eliminates design options A-D inclusive.\n\nFurther, on the basis of frustrating behaviour in the face of lingering network connections, preventing mux changes on the grounds of an existing connection seems like a bad path forward.\n\nThis leaves us with design options F, G, I, and J, which are differentiated by how the mux is switched and its effect on already-connected clients.\n\nConcentrating on how the mux is switched for the moment, discussions until now have largely focused on the \"out-of-band command\" approach. This is also reflected in the final requirement below and was the motivation for writing this design document, as one way or another we'll need to add support to affected applications such as bmcweb and phosphor-net-ipmid (I think I said phosphor-host-ipmid elsewhere, but that's not quite right). Some further discussion followed about implementation approaches and trade-offs on the PDI patch, and is touched on below in the split vs unified DBus tree section. I think it's reasonable to say there are some complications here.\n\nBy contrast we can consider the alternative: We make the mux state reflect the endpoint of the most recent connection. This has the benefit of functioning for both the Unix domain socket and the DBus interface with no further effort. Neither bmcweb nor phosphor-net-ipmid need be patched, nor their maintainers bothered. This also eliminates the complications mentioned above as there's no need for the additional DBus interface.\n\nThis choice constrains us to design options F and G, but also gives us a hint as to how to pick between F and G.\n\nF and G are differentiated by whether or not we drop connections on endpoints that are not the endpoint selected by the mux. I've gone back and forth about that previously[[1](https://gerrit.openbmc.org/c/openbmc/obmc-console/+/71228/comment/62a5fce9_60c3ad3e/)][[2](https://gerrit.openbmc.org/c/openbmc/obmc-console/+/71867/comment/756f0abe_5ebe8d66/)] but I think I've settled on the argument that _not_ disconnecting clients is effectively a worse implementation of design option C, which we've also eliminated anyway. It's worse than C because instead of 1 connection we will have approximately N connections for N mux ports, (N - 1) of which are idle. Not only that, but the (N - 1) connections are effectively zombies, as they have no way to switch the mux back to their associated port without establishing yet another connection. It follows that if we're establishing a subsequent connection in order to switch the mux we may as well disconnect the existing session, in which case it might as well have been disconnected when the mux switched away (which also saves resources).\n\nThese arguments combined eliminate all but option F, which seems to sit at a pretty neat nexus point in terms of both existing ABI, desired behaviour, and implementation complexity.\n\nWhat are your thoughts on this reasoning? Are there use-cases that we need to account for that might affect some of the trade-offs?\n\n(also, apologies for another wall of text)."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Added the \"Considerations\" Section to the markdown. I'm not too familiar with gerrit but is it possible for you to push new revision to this change, even if i started it originally?\nSince it's a collaboration effort.\n\nFor your conclusions, i'm not sure if mux control should be this implicit.\n\nImagine for example a BIC update process is in progress and the mux has been switched to log the output of whatever the BIC is printing. \nNow somone starts a new connection to the Host uart and the mux is switched,\nlosing whatever the BIC would have printed.\n\nSo for some application to log any output it needs to \n- open a connection \n- re-open that connection in case it gets disconnected\n\nI imagine during normal operation there would be some policy which would select a console based on some events. Like power control or firmware update. \n\nSo the logfiles would always contain what's deemed 'useful' to have at a given time.\n\nIt will be easier to implement to just have a dbus method or property to achieve this, instead of other processes having to open and keep-alive a connection.\n\n\nThen there is the issue of override by the user. In both cases (external or implicit mux control), the user should have priority over system policy.\n\nBut the user should also be allowed to 'follow' system policy. \n\nimaginary example:\n\nBIC boot, then CPLD boot, then Host boot.\n\nAt each stage, we want to see the respective output.\nEven if BIC continues to print, at some point we want to switch to Host UART.\n\nSo maybe there could be another special console with a console-id derived from the kernel tty device, where a connection to this uart automatically receives everything,\nno matter the mux state.\n\nThis way, the user can connect to this special console and see everything, and the system policy can control the mux explicitly.\n\n\nAnyways, this is all perhaps content for a future extension.\nFor now this special console may not be needed. It would work similar to /dev/tty0 in linux which always points to the active console (or so i heard).\n\n\nI would also be fine with the implicit mux control but not sure if the disconnection would be handled well by all the programs.\n\nIf there is no further feedback from others i can also just add your conclusions\nin a section to document how we arrived at the conclusion."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I'm not too familiar with gerrit but is it possible for you to push new revision to this change, even if i started it originally? Since it's a collaboration effort.\n\nYeah, I can do that, that's no problem at all.\n\n> For your conclusions, i'm not sure if mux control should be this implicit.\n\nThanks for the examples and thoughts that follow. Let me find a way to integrate them into the text."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, I've tried to make your examples slightly less specific and have added some discussion. Let me know what you think."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Hi Andrew,\n\nThanks for providing the detailed overview. The connection based mux control can work out for the interactive use-case and can also be made to work for the logging use case.\n\nThe point about the additional implementation required in other projects is **very convincing**. \n\n\nFor the unified vs split tree, we can go with the unified tree if that's what you prefer. The split tree would also work since there would be nothing new in the tree.\n\nIt's mainly a question of what to expose to other projects initially. So i'm fine to do the unified tree.\n\nIn that case, we do not need to have an extra dbus interface or any changes to phosphor-dbus-interfaces, is this correct?\n\n\n> TODO: Rejig the sections below after review feedback on the above\n\nAs we agree on the mux control mechanism to be connection based, i leave the next revision up to you if that's ok."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> In that case, we do not need to have an extra dbus interface or any changes to phosphor-dbus-interfaces, is this correct?\n\nRight, I think now that we have consensus on connection-based mux control, we can drop the extra interface entirely.\n\nRegarding the split vs unified tree: I don't particularly mind which we choose. The unified tree will still consume fewer resources (we only need one DBus connection vs N connections for an N-port mux), but it's an implementation detail that doesn't lock us into an ABI. I'll leave the choice up to you.\n\n> As we agree on the mux control mechanism to be connection based, i leave the next revision up to you if that's ok.\n\nYep, happy to do that. I'll include the reasoning about the design choices from the first comment in this thread as well."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 183,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 195,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "d456f5f25b22cb496e102a290136060b983db896",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/2",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1718728128,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 234,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 246,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "30aa34446453b50460c08fd9a214a97dfb6bdaa9",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/3",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1718764939,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 333,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 346,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "fc08c71b2ce9efec83117d0c588146f57439e199",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/4",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1718765994,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 336,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 349,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "1b521fa9e95bf30fcb6887b51033f8261b6e70e8",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/5",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1718767396,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 171,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "i had not considered that before. My previous preferred approach (dbus method to control the mux, and no disconnection upon mux change) would require additional implementation in other projects.\n\nDoing the mux control based on connections will avoid the additional implementation in those other projects."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 171,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Aha! Sorry that I didn't articulate that concern earlier on. It was lurking in the back of my mind, but I was too distracted as we were chasing other details. In that sense, I think the design doc has done exactly the job it is intended for \ud83d\ude04"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 336,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 349,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "2d8b4ae65520e5441bf6d553e66e91bc68a9605c",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/6",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1718860504,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 470,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 483,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "d1aaca21e8335bd0404915e0816b7307baca5a27",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/7",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1718860679,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 471,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 484,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "67977aaebd1f4cd7a45f5c3f22f35942cfa99f2a",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/8",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1718873331,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "- removed the TODO about dbus representation, chose split tree for maximum information hiding in this intial implementation.\n\n- removed the TODO about the log messages, added design for that.\n\nYou may want to modify the section about the log message,\nif you think we need higher timestamp resolution or a different format."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 490,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 503,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "f1acb8aa74f914f4d6802eded487ac319350bc5f",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/9",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1718936005,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Nice work on the progression through the various implementation choices.\n\nAll looks good to me - I have a query about an improvement inline, and a couple of super minor wording fixes, but your discretion on whether changes are required there."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Let's merge it, since the consensus seems to have been reached, the couple of spelling mistakes will not harm anyone here.\n\nI would assume that level of scrutiny can be reserved for spec documents. Thanks anyways for pointing them out \ud83d\udc4d"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "This isn't a ssh-login-specific mechanism though, right? It could be any interface that is separate from the console data channel.\n\n(say, a selection in the web interface...)\n\nIf so, could this read:\n\n> [\u2026] rather, they defer to making the user affect the change themselves, through some other separate interface."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> This isn't a ssh-login-specific mechanism though, right? It could be any interface that is separate from the console data channel.\n>\n> (say, a selection in the web interface...)\n\nI might have split the concerns finer than you were expecting? I think this is covered by the bullet point immediately following:"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Yeah, I think it's just a result of covering this specific  case (ie., using SSH) of \"some mechanism\" before the general one next. I'm fine either way."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 179,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Alright, I'll leave it as is, but I'll fix the typos."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 184,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "minor wording: \"wants *to* select\""
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 184,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Good catch"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 184,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Then, if we make this more general at line 179, this would refer to whatever that separate interface is:\n\n> The first assumes that this interface is exposed at all, and accessible to users who need access to the muxed consoles\n\n... which is probably a reasonable part of the design, it it were to be implemented this way.\n\nHowever, the big issue with this case is that it's pretty janky to require the user to manage two *distinct* interfaces to the console: the actual data channel, and the mux control."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What were your thoughts on the paragraph that immediately follows this one? It's tied to the second bullet point above, and it will likely need to be merged into this paragraph if we merge the first two bullet points."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Same as above, I don't think we'd necessarily need to change here."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 204,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "minor wording: \"it's\" -> \"its\""
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 204,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 490,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 503,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "66b857d8840f7cb158446a9422c4b948715f1887",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/10",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1719377925,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "(Giving a +1 to yourself isn't widely modeled behavior; I'm not sure what it is intending to signify.)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I asked Alexander to write the doc and the contributed significant portions myself, so we're both +1'ing this to acknowledge changes from each other."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "LGTM except some spelling mistakes."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't see anything I maintain here changing, so I'm going to check out of this review and trust the folks that are reviewing it currently.\n\nIf there's anything specifically you'd like my knowledge of, I'm happy to check in on parts, but I'm not an expert on our uart implementation."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 299,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "behaviors*"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 299,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Let's not bicker over EN-US vs EN-UK spelling of words.  If someone wants to enable spellcheck and we pick one of these, I'm fine with that, but otherwise, both spellings are equally valid."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 319,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "behavior*"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 319,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See above."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 363,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "behavior*"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 363,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See above."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 367,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "behavior*"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 367,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See above."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 370,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "behavior*"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 370,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "See above."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 382,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "accommodate*"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 382,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 407,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm having trouble reading where you decided to do a split vs combined bus.  I see some discussion on it above but I never really see the decision explicitly written.\n\nIt looks like from this you decided to do split busses?  Is that necessary; does it provide advantages?  It seems a bit awkward to me and a lot of extra work in the console server to maintain N independent bus names.  Generally we shouldn't be relying on bus names for process separation anyhow, so I'm not really sure what it buys us."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 407,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Alexander added mention of this down on lines 444-446."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 407,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is that a good or bad thing?  We could similarly have a combined tree and not expose information about the mux right?  On the surface, this seems like complexity in the implementation side that is unnecessary (and in some cases actually non-preferred)."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "In the combined tree, the mux topology is exposed since through the console's\ndbus name the object paths of all consoles connected to that mux are visible.\n\n```\nbusctl tree --user xyz.openbmc_project.Console.host1\n\u2514\u2500/xyz\n  \u2514\u2500/xyz/openbmc_project\n    \u2514\u2500/xyz/openbmc_project/console\n      \u251c\u2500/xyz/openbmc_project/console/host1\n      \u2514\u2500/xyz/openbmc_project/console/host2\n```\n\nSo through this output we already know that there is 2 consoles connected to a mux.\n\nWhen there is an important reason,\na transition from split-tree to unified-tree can be done with low probability of regression.\n\nThe other direction would probably break some stuff (example below)\n```\nbusctl call xyz.openbmc_project.Console.host1 \\\n/xyz/openbmc_project/console/host2 \\\nxyz.openbmc_project.Console.Access Connect\n```\n\nWould not agree that there is much complexity on the implementation side.\n\nIt may have a higher resource consumption due to the additional dbus setup per-console. That is worrisome, but i would prefer\n\nconceptual integrity > performance \n\nin those cases.\nFor me, being able to connect to one console via the dbus name of another console is definitely breaking conceptual integrity and creating n ways of doing something."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> For me, being able to connect to one console via the dbus name of another console is definitely breaking conceptual integrity and creating n ways of doing something.\n\nWhat are we accomplishing by even using \"Console.host1\" as the busname?  There is no reason to do this.  Having bus-names and object paths matching up is really a foreign concept and not necessary.\n\nI think you mentioned backwards compatibility, but backwards compatibility _with what_?  The only thing I see is _maybe_ this one:\n\n```\nphosphor-host-ipmid/transporthandler.cpp\n1678:                    ctx, \"xyz.openbmc_project.Console.default\",\n1680:                    \"xyz.openbmc_project.Console.UART\", \"Baud\", baudRate))\n```"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "It is really easy to depend upon things like a specific bus name existing.\n\nOn the other hand it can be really hard to find all those places where that happens. There is no search tool i know of that can find all the code that would break if we no longer have the console id as part of the bus name.\n\nEven github search cannot find all those places.\n\nSo i'm for keeping the existing behavior and having the console-id be part of the bus name.\n\nAnd i'm not looking forward to expanding the scope of this change even further and making who-knows-which changes in phosphor-host-ipmid,\nplus filling that maintainer in on all the details and *hoping* they will see it the same way.\n\nWhich alternative dbus name would you suggest?\n\nWe have to have n different dbus names anyways if there are n physical uart on a system, since the most recent design has 1 process per physical UART.\n\nSome alternatives:\n\n- [1] have only 1 obmc-console process in the whole BMC which is capable to handle    multiple physical uarts\n  and the muxes that may be behind those.\n  Something plain like ```xyz.openbmc_project.Console```\n\n- [2] have the physical UART provide the dbus name, e.g. ```xyz.openbmc_project.Console.TTYS0``` and then the individual consoles\n  are available via the object paths.\n\nSo option [1] can be ruled out immediately due to implementation difficulty.\n\nOption [2] may be ruled out since there may be still code depending on the console id being part of the bus name. \n\nAre there other options?"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> We have to have n different dbus names anyways if there are n physical uart on a system, since the most recent design has 1 process per physical UART.\n\nThis is really the crux of the problem. The remaining argument in this document is about maintaining consistent behaviour."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It can be `xyz.openbmc_project.Console.<PID>` for all it matters.  These names are not important to the dbus architecture.  They just need to be unique.\n\nDon't we have per-TTY config files?  Or are we now going to a single big config file?  How does each process know which parts of the file it is responsible for?  Seems like we have to have some argument here that can be used for uniqueness.\n\n> And i'm not looking forward to expanding the scope of this change even further and making who-knows-which changes in phosphor-host-ipmid,\nplus filling that maintainer in on all the details and hoping they will see it the same way.\n\nIsn't this a 1 one line change?  If they don't accept the change, their code is broken, right?  I don't see the problem.  Let it be broken if they don't want to accept your string change, right?\n\nOr, like I've mentioned before, maintain the \"old names\" as a backwards compatibility.  You can have N busnames in a single process on the same dbus connection.  We've done exactly that many times before."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> It can be xyz.openbmc_project.Console.<PID> for all it matters. These names are not important to the dbus architecture. They just need to be unique.\n\nYes. However, this is not a new requirement. The _existing behaviour_ of obmc-console is to take a bus name with the console ID appended (as the console ID must be unique). The bus name scheme is not a change that Alexander is proposing. The concern that's being addressed is to find a sensible solution that _doesn't_ change that existing behaviour in the face of a UART mux.\n\n> Don't we have per-TTY config files?\n\nYes\n\n> Or are we now going to a single big config file?\n\nNo, there is still a per-TTY config file. However, if there's a mux behind that TTY, then the behaviour of the mux is specified in the config file for the TTY.\n\n> You can have N busnames in a single process on the same dbus connection.\n\nThis is what I was proposing (the unified object tree). I prefer it, as it reduces the resources required by obmc-console-server (only 1 bus connection rather than N). However, as it's largely an implementation detail I left that decision to Alexander for now. I have no concerns with specifying the unified-tree approach here if that's your preference as well."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Is there any update here or anything that should be changed about the design?\nHow can we move forward?\n\nI believe evolving the current dbus representation in a backwards-compatible way is a reasonable choice.\n\nIf the bus names truly do not matter, changing them later on should not be an issue. If they do matter then we are not breaking things with this design.\n\n> Isn't this a 1 one line change? If they don't accept the change, their code is broken, right? I don't see the problem. Let it be broken if they don't want to accept your string change, right?\n\nTheir code is broken because it expects the default console id. The user could have configured something else.\n\nSo to fix it and retrieve the baudrate we would have to go via the mapper if we do not hardcode any bus name. Then we would also have to decide for which console we want to request that baudrate. So it would be more than a 1 line patch and probably require some knowledge of ```phosphor-host-ipmid```. Like what the value is even used for.\n\nAlternatively we could add a meson option to ```phosphor-host-ipmid``` to configure the console id for that call. You see where i'm going with this."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm fine if you want to keep the backwards compatible bus-names for the time being until we can figure out how to transition off of them.\n\nMy preference is to _not_ do the split dbus design though.  It's more work, sets people up for additional bad behaviors (of not using mapper), and is foreign to the way the rest of the processes work.\n\nIf you have to keep the split design in order to maintain backwards compatibility, I'd like to see a remark here that we're doing it for a time for the backwards compatibility reasons and our intention is to fix up the users and move forward."
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, let's update the words here to reflect the choice of the unified tree, and get the implementation reworked. Can you please do both, Alexander?"
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "line": 445,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 490,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 503,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "1eac3275daf4e6dac09dc17f3fb41c17a2f57473",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/25/72125/11",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1721389986,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 488,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 501,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "8e6dbb4dbd8b3563fb37ad216c5049156094256e",
            "parents": [
                "49b4570074640530e29a7fb1b4e13c185987c5df"
            ],
            "ref": "refs/changes/25/72125/12",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1721780844,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/uart-mux-support.md",
                    "type": "ADDED",
                    "insertions": 488,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 501,
            "sizeDeletions": 0
        }
    ]
}