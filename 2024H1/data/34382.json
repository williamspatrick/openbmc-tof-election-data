{
    "project": "openbmc/intel-ipmi-oem",
    "branch": "master",
    "id": "I94f417658bab991d04b74f781c3cde5c9a85e5b8",
    "number": 34382,
    "subject": "[WIP] : Update Product ID for EEPROM FRU platforms.",
    "owner": {
        "name": "Anoop S",
        "email": "anoopx.s@intel.com",
        "username": "anoopsx"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/intel-ipmi-oem/+/34382",
    "hashtags": [],
    "createdOn": 1594057031,
    "lastUpdated": 1718880369,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1594057031,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1594057044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1594057050,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/549/"
        },
        {
            "timestamp": 1594057291,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/549/ : SUCCESS"
        },
        {
            "timestamp": 1594115076,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1594216334,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1594216347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1594216354,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/707/"
        },
        {
            "timestamp": 1594216601,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/707/ : SUCCESS"
        },
        {
            "timestamp": 1594216724,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nThe review comments updated as per comments\nRegards,\nAnoop S"
        },
        {
            "timestamp": 1594223193,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1594249621,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(10 comments)"
        },
        {
            "timestamp": 1594729334,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1594729346,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1594729353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/1124/"
        },
        {
            "timestamp": 1594729571,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/1124/ : SUCCESS"
        },
        {
            "timestamp": 1594730629,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Patch Set 3:\n\n(10 comments)\n\nThe changes are available in patch set 3\nregards,\nAnoop S"
        },
        {
            "timestamp": 1594969399,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1595005723,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1595142729,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1595142742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1595142749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/1550/"
        },
        {
            "timestamp": 1595143274,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/1550/ : SUCCESS"
        },
        {
            "timestamp": 1595143904,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1595352791,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1596119372,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1596208950,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1596438391,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1599029820,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(3 comments)\n\nPlease ch"
        },
        {
            "timestamp": 1599544577,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1599544590,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1599544597,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4370/"
        },
        {
            "timestamp": 1599544848,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4370/ : SUCCESS"
        },
        {
            "timestamp": 1599555500,
            "reviewer": {
                "name": "Anoop S",
                "username": "anoopsow"
            },
            "message": "Patch Set 5:\n\n(2 comments)\n\ndone the changes"
        },
        {
            "timestamp": 1599555882,
            "reviewer": {
                "name": "Anoop S",
                "username": "anoopsow"
            },
            "message": "Removed reviewer Anoop S."
        },
        {
            "timestamp": 1599625541,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1599811214,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Patch Set 5:\n\n(7 comments)"
        },
        {
            "timestamp": 1600166442,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 5:\n\n(7 comments)"
        },
        {
            "timestamp": 1600176679,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1600251519,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1600251534,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600251541,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4789/"
        },
        {
            "timestamp": 1600251781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4789/ : SUCCESS"
        },
        {
            "timestamp": 1600251993,
            "reviewer": {
                "name": "Anoop S",
                "username": "anoopsow"
            },
            "message": "Patch Set 6:\n\n(5 comments)\n\nThe changes are available in patch set 6"
        },
        {
            "timestamp": 1600262415,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 6: Code-Review+1\n\n(5 comments)"
        },
        {
            "timestamp": 1600327405,
            "reviewer": {
                "name": "Zbigniew Kurzynski",
                "email": "zbigniew.kurzynski@intel.com",
                "username": "zkurzyns"
            },
            "message": "Patch Set 6: Code-Review+1\n\n(7 comments)"
        },
        {
            "timestamp": 1600361162,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 6:\n\n(6 comments)"
        },
        {
            "timestamp": 1600419120,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1600419132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600419140,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4897/"
        },
        {
            "timestamp": 1600419376,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4897/ : SUCCESS"
        },
        {
            "timestamp": 1600419538,
            "reviewer": {
                "name": "Anoop S",
                "username": "anoopsow"
            },
            "message": "Patch Set 7:\n\n(4 comments)\n\nDone in the patch set 7"
        },
        {
            "timestamp": 1600433130,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 7: Code-Review+1\n\n(5 comments)"
        },
        {
            "timestamp": 1600518268,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1600681309,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1600704249,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1600704258,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1600704271,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/4982/"
        },
        {
            "timestamp": 1600705345,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/4982/ : SUCCESS"
        },
        {
            "timestamp": 1600705782,
            "reviewer": {
                "name": "Anoop S",
                "username": "anoopsow"
            },
            "message": "Patch Set 8:\n\n(3 comments)\n\nThe changes are updated in patch set 8\nRegards,\nAnoop"
        },
        {
            "timestamp": 1600757488,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(5 comments)"
        },
        {
            "timestamp": 1600762612,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1600796856,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1600892591,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1601004664,
            "reviewer": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1601004673,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1601004680,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nBuild Started https://jenkins.openbmc.org/job/ci-repository/5179/"
        },
        {
            "timestamp": 1601004925,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/5179/ : SUCCESS"
        },
        {
            "timestamp": 1601009652,
            "reviewer": {
                "name": "Anoop S",
                "username": "anoopsow"
            },
            "message": "Patch Set 9:\n\n(4 comments)\n\nHi ,\nThe new changes uploaded in patch set 9\nRegards,\nAnoop S"
        },
        {
            "timestamp": 1601043162,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1601514693,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1601527280,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1601818643,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1601878174,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1602176179,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1603047694,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 9:\n\n> Patch Set 9:\n> \n> (1 comment)\n\n@saravana, Whats next step on this. Can we have quick sync and close this."
        },
        {
            "timestamp": 1614179783,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 10: Commit message was updated."
        },
        {
            "timestamp": 1718880369,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Abandoned"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "18f312c05024889ae0afdaed51ead2b889c08d09",
            "parents": [
                "2030d7c8ebb6ccdbc300bf4967647a3b496c9726"
            ],
            "ref": "refs/changes/82/34382/1",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1594057031,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/appcommands.cpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Here, Set devIdInitialized = true, only if devId.prodId != 0.  I believe, then only the ProdId will be updated in getDeviceId() command, after entity-manager exposing ProdId property value for baseboard EEPROM FRU board."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 363,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 104,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "0da6c0fda3bca2fd0948e6af698c325a87cbb8e1",
            "parents": [
                "2030d7c8ebb6ccdbc300bf4967647a3b496c9726"
            ],
            "ref": "refs/changes/82/34382/2",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1594216334,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/appcommands.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "static constexpr const char *"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 51,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 401,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "use phosphor logging, not cerr"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 401,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 404,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "do you need to set a mode on this? it looks like you are starting with a read and then switching to write if the read fails."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 404,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 409,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "this can cause overflow, indexing id past id.size(). Also, it appears that the file ideally would be storing a uint16_t in hex form with a 0x prefix. That is 6 characters, whereas your string above was only 4.\n\nwhy not use something like:\nstd::string id;\nprodIdFile >> std::hex >> id;"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 409,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "you are not checking end after the return of the function. This could go away if you use stream read."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 410,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 426,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "not needed"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 426,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 438,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "we strongly discourage this. Make an explicit list of variables required."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 438,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 448,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "intfFound != msgData.end()\n\nWe aren't using the yoda syntax in openBMC"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 448,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 461,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "phosphor logging, please"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 461,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 477,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "what happens if you didn't find the object path?"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 477,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "'Most likely it is an indication that entity-manager yet to expose the object path, and when it starts exposed, it will be processed by signal handler defined at line 454: baseBoardUpdatedSignal.\n\nRegards,\nAnoop S"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 108,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 134,
            "sizeDeletions": 2
        },
        {
            "number": 3,
            "revision": "8e524ca8a59af5f64d821c731fcc6078ef012a0f",
            "parents": [
                "2030d7c8ebb6ccdbc300bf4967647a3b496c9726"
            ],
            "ref": "refs/changes/82/34382/3",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1594729334,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Can u add neg test case. What happen if FRU is corrupted ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "As FRU is corrupted, Board Name and Product-ID can not be determined.  So, Product-ID will remain zero in this case.  @Anoop, Please test this and update the findings."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 19,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "The test case added"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 19,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Why u need this header file ?"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 19,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "@Anoop, Remove this if this header file is not needed for latest patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 19,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "!boost::ends_with() is defined in the header file so this header file is need to include"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Why u declared the bus in global variable ?"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Because 'bus' is usually initialized in first function and used in other functions.  @Anoop, Check the feasiblity of moving this inside function(s)."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 49,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "nit: IMO, it can be retain as global variable."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "This will create a issue. If Motherboard interface is not available. you wont get the data. why its not handled in command itself."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Handling this inside the command, will invoke the sdbus call every time the get_device_id() command is invoked.  Whereas here, it is invoked only once at registration as it is better to call this only once as Product-ID is constant value.  If Motherboard interface is not available, We have still registered signal handler which will get kicked in once the Motherboard interface is exposed.  In EEPROM FRU platforms, we observe that Motherboard interface is available when this call is made here."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Anoop S",
                        "email": "anoopx.s@intel.com",
                        "username": "anoopsx"
                    },
                    "message": "correct"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 2
        },
        {
            "number": 4,
            "revision": "1407ff569a3f646ce5058d4e205a46a5070252d4",
            "parents": [
                "65b66ad8db83a9b1b1ec2e2ef2372d059a9033cb"
            ],
            "ref": "refs/changes/82/34382/4",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1595142729,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/appcommands.cpp",
                    "line": 365,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "whats use of this devIdInitialized ?"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 365,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Both 'devId' and 'devIdInitialized' are static variables existing even before this patchset.  They will be populated by reading these file contents, \"/usr/share/ipmi-providers/dev_id.json\", \"/var/cache/private/prodID\".  Since they are static, they retain the value across the calls.\n'devId' content is valid only if 'devIdInitialized = true'.\nWhen 'devId' is valid, it will just return its contents thereby avoiding file-operations every time getDeviceId() is called.\n\nWe set 'devIdInitialized = false' if 'productId' is zero, i.e. invalid.  This is inline with existing design, i.e.) When devId/productId can not be initialized, set 'devIdInitialized = false'."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 365,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 372,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "how we are re initialize the product Id if its failed"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 372,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "This scenario may happen if getProductId() function does not find productId AND signal handler for 'baseBoardUpdatedSignal' in line 454 is yet to be invoked.  In this scenario, 'productId' will be updated after receiving the registered signal.\n\nFrom our unit-testing, we see that getProductId() itself updates the productId in first shot !"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 372,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Please add the negative test case for this"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 372,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Please add the test cases  if entity manager is not started in time. how this app command behaves."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 497,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 28,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 137,
            "sizeDeletions": 2
        },
        {
            "number": 5,
            "revision": "eb7a0507778d485a2184f3d8e3a1a059ddbca8ff",
            "parents": [
                "a8dd197a4b729c10d09c55ebf26ed7d0796fd261"
            ],
            "ref": "refs/changes/82/34382/5",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1599544577,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Why not to use getDbusProperty here ?"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "ok. Will try with getDbusProperty() and update in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "There is also non-throwing version of this getDbusProperty function. Consider it if you do not like the exception approach."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Thanks for the info. We don't have 'ctx' argument here, and like to retain this way."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 417,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "If we are narrowing types it would be nice to check it doesn't overflow."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 417,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Product_ID is 2-bytes as specified by IPMI spec. And, We define it in our baseboard.json files accordingly.  Since, it is a static value defined in file, and its value won't change during run time,  IMO, adding this check is not needed here."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 417,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "You do nor have to close the stream, it is scope scope-bound and will be closed automatically on destructor call. (which is in next line)."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Done. Will update in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "This comment brings nothing here, we see in next lines what is going on. I recommend to remove it."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Done. Will update in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 444,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 446,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "`const auto` if there is no intend to change it."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 446,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Done. Will update in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 446,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 446,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 447,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "cend()"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 447,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Done. Will update in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 447,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 447,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 458,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Is it ok to use async calls here? What will happen when one will call ipmiAppGetDeviceId, that is already registered before this response arrive ?\nThis async chain is even prolonged in line 477 where another async call will be made."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 458,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "This entire patchset will be executed only once in the first boot after BMC FW is dediprog flashed.\n\nIf this IPMID service starts before EntityManager service,  it will get InterfacesAdded signal and getProductId() call will happen only from line 430 to 452.\n\nIf it starts after EntityManager service,  it will not get any InterfacesAdded signal and and getProductId() call will happen only from line 459 to 479.\n\nIn getProductId(), We update the ProductID to non-zero value (for EEPROM FRU platforms) in prodIdFile.  And from there on ipmiAppGetDeviceId() will return correct productId for these platforms.  Till then, ipmiAppGetDeviceId() will return prodId value as zero for these platforms.\n\nThis pattern we can see in other places of our OpenBMC code like some service asking BMC SW version information before it is available."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 458,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": ">> This entire patchset will be executed only once in the first boot after BMC FW is dediprog flashed.\n\nI meant, prodIdFile is updated only once in the first boot after BMC FW is dediprog flashed, though getProductIdFromBoard() is called in every boot."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 458,
                    "reviewer": {
                        "name": "Zbigniew Kurzynski",
                        "email": "zbigniew.kurzynski@intel.com",
                        "username": "zkurzyns"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 140,
            "sizeDeletions": 2
        },
        {
            "number": 6,
            "revision": "343f8bdab5d8daef79d6f6fa3346b5ff6afcde56",
            "parents": [
                "a8dd197a4b729c10d09c55ebf26ed7d0796fd261"
            ],
            "ref": "refs/changes/82/34382/6",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1600251519,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "nit 'to' instead of 'as'"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Done. Will update in next patchset."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "I do not understand this sentence. Can you remove '/' and use update instead of updation. Thanks in advnace."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Done. Will update in next patchset."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 24,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Is end variable required? Can we change it to nullptr? Or verify using end pointer if value interpretation is succeed? If the integration fails we can at least log an debug error. Treat it as nice to have because there is no critical issue. Thanks"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "I think, this can be corrected as you mentioned. Will do it in the next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 364,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 397,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Is Value type is required? Can you use uint64_t instead? Where Value come from? Sorry for being lazy to find it."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 397,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "It is variant and this variable is required, for this getDbusProperty() syntax.\n\nIt comes from phosphor-ipmi-host:\n\ninclude/ipmid/types.hpp:\nusing Value = std::variant<bool, uint8_t, int16_t, uint16_t, int32_t, uint32_t,\nint64_t, uint64_t, double, std::string>;"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 397,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks for explanation. I guess there is a possibility that you receive property variant that does not hold uint64_t. Is it possible to add a check if property variant holds a uint64_t? Or add a catch for bad_variant_access exception to properly handles such case? Exceptions sounds nice because it is unlikely to happened. Treat it as nice to have."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 397,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "ok. Will address this in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 397,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 397,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks. I guess you should care for overflow case, but it might be cover in next patch."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Is there was any problem with comparing it with string literal?\nif (id == \"0x00\") ?\nTreat it as nice to have. Thanks"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Will check and rewrite this in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 421,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 108,
                    "deletions": -2
                }
            ],
            "sizeInsertions": 139,
            "sizeDeletions": 2
        },
        {
            "number": 7,
            "revision": "7f36cf22991cc5aee608599397024ca02896d7af",
            "parents": [
                "d77489f18e044448778a7c651dddea7a13e3eaca"
            ],
            "ref": "refs/changes/82/34382/7",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1600419120,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Shouldn't we also specify vendor id there?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Manufacturer ID: is 0x157 (Intel) and it is same for all OpenBMC platforms. \n\nIt is already taken care in : \nhttps://github.com/openbmc/intel-ipmi-oem/blob/d77489f18e044448778a7c651dddea7a13e3eaca/src/appcommands.cpp#L334"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Yes, I know. But isn't you think it is strange that you read VID from one place and PID from another?\nIn our platform we had to patch appcommands.cpp to read both VID and PID from dev_id.json (to get rid of prodID file which we don't need at all), but I prefer to read them both from EM config."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "I accept that reading the info from single file is good. However, We already have some platforms implemented with this design and so I need to follow the existing design."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Yes, but please keep in mind that Intel is not the only one who use this code, it should aware that other vendors would appear here ;)\nI'd say this is called \"technical debt\": it is good thing to try to solve it."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Suryakanth Sekar",
                        "email": "suryakanth.sekar@linux.intel.com",
                        "username": "htnakayrus"
                    },
                    "message": "Saravana, Can we check, where we can keep all needed details in ProdFile ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "@Andrei,Kartashev: Do you want the Product-ID to be part of dev_id.json ?  Or as a property exposed by EntityManager by reading from xx_baseboard.json ?  \n\nAs mentioned here, keeping this info in dev_id.json instead of xx_baseboard.json, is required to provide quick response to getDeviceID() calls during boot time.\n\nhttps://github.com/openbmc/intel-ipmi-oem/blob/d77489f18e044448778a7c651dddea7a13e3eaca/src/appcommands.cpp#L350"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "@Saravana\n\nHistorically it was dev_id.json who keep all the data and we in Yadro currently use this approach (we had to patch intel-ipmi-oem to get this back), but this is against with concept \"one binary for different platforms\".\nSo I would like to use EM config as the source of all the information. Then we can generate dev_id.json in the form we have it today in runtime (to provide quick response, as you said) - this would be similar to what you do with prodID file but more common across OpenBMC architecture while prodID is only Intel-specific thing."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 362,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Using \">>\" operator you do not have to use strtol. You can get the integer from stream."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 362,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Thanks. Will address this in next patchset."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 362,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 362,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 420,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Same as above, you do not need strtoll."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 420,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 420,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Thanks"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 5
        },
        {
            "number": 8,
            "revision": "1b511b8a90c2fbdb79dd0aa7c4fd300030b50ddf",
            "parents": [
                "d77489f18e044448778a7c651dddea7a13e3eaca"
            ],
            "ref": "refs/changes/82/34382/8",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1600704249,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/appcommands.cpp",
                    "line": 365,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "If FRU is corrupted, Then this will not set the devIdInitialized and causes performance issue here."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 365,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "30seconds timeout here isn't it too much? Usually 2seconds, we get the data."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 396,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Hi,\nThe Default value for \"IPMI_DBUS_TIMEOUT\" is 5s and by this time we query the 'ProductId' property from dbus not exposed by entity manager by considering system bootup time. So we gave the time out value as 30s to consider Worst-case scenario should not fail.\nRegards,\nAnoop S"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 460,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "nit: This dbus failure is not getProductIdFromBoard, This failure is for GetSubTree of board interfaces. Changing this will help better debugging."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 460,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 476,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "You need to reset the signal only after you get data which is expected. So this reset should be done inside getProductId()."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 476,
                    "reviewer": {
                        "name": "Anoop S",
                        "username": "anoopsow"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 476,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "@Apparao Puli: As we discussed, when async_method_call() succeeds means already EntityManager exposed this property and so 'baseBoardUpdatedSignal' will not be hit. Hence, we reset the signal here itself and moved the reset to line 464 in the latest patch."
                },
                {
                    "file": "src/appcommands.cpp",
                    "line": 476,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Ok, Saravanan."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 145,
            "sizeDeletions": 6
        },
        {
            "number": 9,
            "revision": "aea7e824e189fdcfabe199461ef91e1aad3c75e0",
            "parents": [
                "d77489f18e044448778a7c651dddea7a13e3eaca"
            ],
            "ref": "refs/changes/82/34382/9",
            "uploader": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "createdOn": 1601004664,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 114,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 148,
            "sizeDeletions": 5
        },
        {
            "number": 10,
            "revision": "f95270de59014ffc33e1f0935e14d5d7419e65b2",
            "parents": [
                "d77489f18e044448778a7c651dddea7a13e3eaca"
            ],
            "ref": "refs/changes/82/34382/10",
            "uploader": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "createdOn": 1614179783,
            "author": {
                "name": "Anoop S",
                "email": "anoopx.s@intel.com",
                "username": "anoopsx"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "src/appcommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 114,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 148,
            "sizeDeletions": 5
        }
    ]
}