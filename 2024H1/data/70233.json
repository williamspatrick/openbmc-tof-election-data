{
    "project": "openbmc/docs",
    "branch": "master",
    "topic": "rbmc",
    "id": "I0aa89fdb78422f8be9dcbd9574aac4f78d088f8c",
    "number": 70233,
    "subject": "design: Add redundant BMC design",
    "owner": {
        "name": "Matt Spinler",
        "email": "spinler@us.ibm.com",
        "username": "spinler"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/70233",
    "hashtags": [],
    "createdOn": 1711395771,
    "lastUpdated": 1724136667,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1711395771,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1711395801,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711395801,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1711395828,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81229/ : SUCCESS"
        },
        {
            "timestamp": 1711461091,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 1:\n\n(21 comments)"
        },
        {
            "timestamp": 1711471320,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(20 comments)"
        },
        {
            "timestamp": 1711550971,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1711552017,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1711552756,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1711553185,
            "reviewer": {
                "name": "Ravi Teja",
                "email": "raviteja28031990@gmail.com",
                "username": "raviteja-b"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1711562943,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711562943,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(14 comments)"
        },
        {
            "timestamp": 1711563007,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711563008,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1711563029,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81347/ : SUCCESS"
        },
        {
            "timestamp": 1711612032,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1712240381,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1712324593,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1712324593,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1712324639,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1712324639,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1712324661,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81977/ : SUCCESS"
        },
        {
            "timestamp": 1712325868,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1712554112,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1712697025,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1713232594,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1713297811,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1713298023,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713298074,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713298074,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1713298097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/82875/ : SUCCESS"
        },
        {
            "timestamp": 1713820036,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1713820045,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Topic set to rbmc"
        },
        {
            "timestamp": 1714017460,
            "reviewer": {
                "name": "Ramesh Iyyar",
                "email": "rameshi1@in.ibm.com",
                "username": "RameshIyyar"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1714095180,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1715291663,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1715298230,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1718045552,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(23 comments)"
        },
        {
            "timestamp": 1718138204,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1719437838,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(28 comments)"
        },
        {
            "timestamp": 1719438075,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719438120,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719438120,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1719438140,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86847/ : SUCCESS"
        },
        {
            "timestamp": 1719441462,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(10 comments)"
        },
        {
            "timestamp": 1719511844,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 5:\n\n(10 comments)"
        },
        {
            "timestamp": 1719521061,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(3 comments)"
        },
        {
            "timestamp": 1719956136,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719956136,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 6:\n\n(7 comments)"
        },
        {
            "timestamp": 1719956164,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719956164,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1719956187,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/87209/ : FAILURE"
        },
        {
            "timestamp": 1719956690,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719956724,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719956725,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1719956746,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87210/ : SUCCESS"
        },
        {
            "timestamp": 1724063190,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 7:\n\n(29 comments)"
        },
        {
            "timestamp": 1724136667,
            "reviewer": {
                "name": "Jinu Joy Thomas",
                "email": "jinu.joy.thomas@in.ibm.com",
                "username": "jinuthomas"
            },
            "message": "Patch Set 7:\n\n(8 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ebe101219a7313b2843db00d176447edc279836f",
            "parents": [
                "0907a49e821b3ca047621bd0aa9843076b31ad75"
            ],
            "ref": "refs/changes/33/70233/1",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1711395771,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Thanks Matt...some good stuff in the upstream.\n\nAdded a few comments and questions."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "We could add, \"How the Passive BMC be able to get the Active BMC applications data to give a consistent view of the state of the system if the failover is requested\"?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I'd like to leave all of the sync functionality to a separate design (I mention that  below)."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I think \"Service\", right?\n\nand I feel we could add an abbreviation of the FRU as well.\n\nbut, I wonder whether we need to call it a \"Flexible Service Interface\" or \"Field Replaceable Unit Service Interface\".\n\nSome references I noticed in public forum\n\nhttps://openpowerfoundation.org/specifications/fsi/\nhttps://www.qemu.org/docs/master/specs/fsi.html"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Thanks, will update. I wonder if I remembered it wrong or if the acronym changed over the years."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Common?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "i wanted it short for 'communication'.  was trying to leave out the actual chip type since it's IBM specific anyway."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "sibling BMC? I think we could mention whether are we referring to sibling BMC or Host here,"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "this is the GPIO for one BMC to reset the other.  the one that the host uses isn't really relevant here."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Is it a hard rule for the OpenBMC project or is it a IBM-specific requirement?\n\nI feel the OpenBMC project consumer could choose whether they need to allow the role detection (Active and Passive) based on the inter-network cable connection, and want to allow the system to boot, right?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I don't think we necessarily need to try to guess which features some other mythical openbmc system might try to change.  If someone else comes along and wants a different feature, they can add a feature then."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 110,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "It seems you did not mention the PLDM like LN106 so there is no PLDM stack in the Passive BMC from this proposal but, do you think we need to specify here how the Passive BMC supports a failover interface for the Host? Like the \"MCTP over KCS\"?\n\nI think you captured that below (LN402). If you feel it will be duplicate content here then I am ok."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 110,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I'm not sure the details of this are entirely relevant to this design, so I tried to keep it at a high as level as I could.  I imagine the code that implements that protocol would have a design doc if necessary."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I think we could add the \"RedundancyEnabled\" property must be true since I feel we will update this property in an error case in case we cannot support the failover for some error case."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "is it true? \n\nSay, for example, the Active BMC trying to reboot, and for some reason, it takes some time and crosses some timeout from the external/internal entity (Redfish client/Host) point of view so it will initiate a failover, right? or There should be a way to prevent this?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "i just meant that just the act of a BMC rebooting won't trigger a failover (on our previous systems it used to).\n\nI can add some text about what may happen if it doesn't come back."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I reworded so hopefully it's more clear now."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 167,
                    "reviewer": {
                        "name": "Ravi Teja",
                        "email": "raviteja28031990@gmail.com",
                        "username": "raviteja-b"
                    },
                    "message": "do we have passive target as well?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 167,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "The plan was not to, as that's the default state until the active target is explicitly started."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 170,
                    "reviewer": {
                        "name": "Ravi Teja",
                        "email": "raviteja28031990@gmail.com",
                        "username": "raviteja-b"
                    },
                    "message": "until one of them become active, both BMCs should be running some minimum required services right? these service will be tagged to multi-user.target/BMC ready?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 170,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "That's right, it would be all the services that are part of multi-user.target that haven't been masked by the below configuration."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 176,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Suggestion: How about \"obmc-active.target\"?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 176,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "@geissenator already suggested this one.  You guys can hash it out \ud83d\ude0a"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 176,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Yeah, a bit redundant but the target name is to be consistent with the other targets out in https://github.com/openbmc/phosphor-state-manager/tree/master/target_files/"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 176,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Suggestion: How about \"bmc-active.service\"? or \"active-bmc.service\"?\n\nI feel, start and stop all depends on the systemd commands."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "it's a helper for starting or stopping the service.  I don't care much about the name  either way.  Maybe @geissenator has an opinion."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "General rule is phosphor-<verb>-<target>-<info>.service so phosphor-set-bmc-active-passive.service."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 187,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 226,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "It is not covering the design for the Passive BMC service?\n\nI think this design proposal mentions that when the BMC comes up, it will come up with Passive mode and detect its role by looking at the data area then kick start the obmc-active target that starts all Active BMC services.\n\nWhat about the case, if there are a few services that need to run in the Passive BMC after the role detection? For example, MCTP over KCS daemon to handle failover requests or the sync daemon in the passive BMC?\n\nI assume we need to follow a similar approach \"obmc-bmc-active.target\" that is, \"obmc-bmc-passive.target\", right? I feel we need to add that design details here."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 226,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I want to avoid having special services on the passive.  If we end up needing them then we'll have to do something, but at this point in the design I don't feel like it's warranted.  You're right though we'd do it the same as we did for the active."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 229,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Just a doubt, won't we prefer \"phosphor\" as a prefix for the application if it is proposed as a common application?\n\nFor example, \"phosphor-rbmc-state-manager\"?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 229,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "ugh, yea I suppose we need it though boy would I love to not have to type that anymore \ud83d\ude04"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 229,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I did not get it. is it referring that, the \"RedundancyEnabled\" property will be changed by the Active-BMC only?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I can just remove it.  This is really more detail than I'd like to have in an 'argumentative essay' design doc anyway."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 269,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "There's some question on where this needs to go, so I'm going to remove it for now."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 269,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "scratch that. I meant the property below."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 329,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I'm not sure if this app will be handling this yet, so removing for now."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 330,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "If it's only for the Active-BMC then how does the Passive-BMC prevent its failover operation if requested?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 330,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "it would show up in the interBMC communication properties"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 331,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "How are we preventing this operation in the Active from the DBus design point of view? Is it based on the Role property?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 331,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "we just wouldn't even put the interface on D-Bus in that case."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 362,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Pause/Disable the data sync?\n\nand looks like all steps start with 1, is it intention?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 362,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "markdown rendering will auto-number if they're all 1.\n\nThe 'put the previous active bmc in reset' step would stop the syncing. I'm not sure if we'd need to explicitly do it.  For now I'll leave it off, but we  can discuss when we get to the implementation."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 362,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 370,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Resume/Enable the data sync?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 370,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "that's on the next line."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Is it need to add in the LN262 table?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "yea I should"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 375,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 387,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "I think it's not clear which BMC itself triggers a failover. For example, If the Active-BMC external network of the Redfish client and the host interface is broken then the Active-BMC will trigger a failover and how?\n\nI think this design does not cover that case or interface so maybe we could highlight that or we could extend this design if there is a use case?\n\nSimilarly, inter-BMC cable is broken then how the failover will be triggered?\n\nI am not sure, if we will cover these error cases in the design doc, so please feel free to correct me if I am wrong."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 387,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I'll think about if I need to reword anything here.\n\nI don't think it's appropriate to try to list every scenario in this document."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 387,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Reworded a bit to describe the failover case we've come up with so far.\n\nWhile those error cases you mentioned need to be considered, I'm not sure if they're needed in this doc."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 412,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Good to add the below points??\n\n- The Pacemaker resource manager expects to create a resource for all required systemd services with its dependency services, it does not automatically detect and add it as part of the Pacemaker resource configuration.\n\n- The BMC does not need to trigger a failover if any service is failed to start. By default, the pacemaker just moves the failed service from one node to another node. It required a lot of configuration to prevent."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 412,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Thanks, I'll add those. Let me know if I should add anything else."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 412,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 412,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "> Let me know if I should add anything else.\n\nFew other points to capture if it is useful for the future reference.\n\n- Systemd service must not be enabled in the system since it will be controlled by the pacemaker but, the OpenBMC enabled most of the services that need to start as part of the BMC boot so it needs to be prevented.\n\n- Pacemaker doesn\u2019t support promotable clone resources for the systemd service.\n\n  - It means the BMC cannot run the systemd service in both BMCs with the different roles if required.\n  \n  - It needs to be achieved by the Pacemaker Stateful resource agent, which demands BMC to maintain the role state (Promote, aka Active and Demote, aka Passive), and the BMC applications need to refer to this state to drive application responsibility based on the role."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 412,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 457,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 469,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "7e218d95bafed13e56e4129cab4292d9b156957b",
            "parents": [
                "0907a49e821b3ca047621bd0aa9843076b31ad75"
            ],
            "ref": "refs/changes/33/70233/2",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1711562943,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "At high level, LGTM.\n\nand a few comments, once you replied I will score it."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 352,
                    "reviewer": {
                        "name": "Ramesh Iyyar",
                        "email": "rameshi1@in.ibm.com",
                        "username": "RameshIyyar"
                    },
                    "message": "Sorry, May be I missed this in the previous patch set.\n\nIs it something like a settings, right? is it need to be part of the phosphor-settingsd?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 352,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "it will just be hosted by the new daemon.  I think as a project we're moving away from settingsd now."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 473,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 485,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "97705d0b8fa7ed0d7adf516ea67c45f054a078ea",
            "parents": [
                "0907a49e821b3ca047621bd0aa9843076b31ad75"
            ],
            "ref": "refs/changes/33/70233/3",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1712324593,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 195,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Can you state what it means to be both After and PartOf the same target?   \nis the after corret?   does it trigger some implied start?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 195,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Doh, that's just a typo, not sure how I managed that. The After line shouldn't even be there."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 195,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 332,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Since these interfaces aren't going to be on an object path implementing other interfaces, I don't think Decorator is really necessary."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 332,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 473,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 485,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "8b6f68a54a0e0fc2f514a878d589469622465738",
            "parents": [
                "0907a49e821b3ca047621bd0aa9843076b31ad75"
            ],
            "ref": "refs/changes/33/70233/4",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1713298023,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This design reads as something that if implemented like designed, could be just done in a meta-redudant-machines meta layer and maintained separate from openbmc.  As designed, I find it really hard to believe that any parts of this would be reusable on another system, given the implementation specific nature of it, lack of per-machine configurable policies, and FSI specific implementation.  Maybe I'm missing some intent around upstreaming this at all.  Is there an overall industry call for these kinds of redundant implementations?\n\nWith that said, if we can come to a consensus that we can get this in a surgical way that doesn't require every daemon to be coding against an abstractly defined standard to be \"redundant bmc compatible\" I'm fine with having it.  As written, I don't think this design us over the bar.  The important things that I think we need to enumerate are:\n\n1. What are the system interfaces.\n2. What are ALL daemons now required to do to be \"redundant bmc compatible\".  If this is non trivial, I see this design as a non-starter.\n3. What does the flow look like for triggering a redundant action.  (ideally we'd start by keeping this self contained around either automatic or manual user intervention, not both).\n\nOverall in implementation I'd really like to see this avoid systemd targets directly, and use some variation of power states.  Arguably \"you're a redundant bmc\" looks very similar (interface wise) to a powered off state, so I think if we could share that design space, we'd end up with a result that's able to be reasoned about on non-redundant platforms, and we'd at least have a hope of not breaking one another.\n\n\nWe also need to enumerate the \"how do we elect a leader\" problem a little better. modern implementations in other industries would be using some form of Paxos consensus algorithm over a network to determine the \"current\" and redundant bmcs.  I'm a little surprised none of that is documented here.  Presumably FSI has some internal hardware magic for this, but leaving that part for other users as \"up to the implementation\" makes it seem like this is really not a generic solution, and IBM just trying to reduce their maintenance burden.  That might be fine, but we need to make sure we're not just placing the maintenance burden on OpenBMC as a project."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Thanks for the review.  I will attempt to address all of your comments, though it will take me a bit."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I added to the doc:\n- why we use FSI and not just the network.\n- which applications are impacted\n- which applications we don't want to run when the BMC is passive, and how this is done without having to modify the application or its service file.  I would still lean toward doing it this way as opposed to having to go in and modifying those applications to look at a new D-Bus property, though could be convinced otherwise.\n\nAlso in the doc:\n- how a failover is triggered - only externally except for one case.\n- how our use of FSI is hidden behind xyz.openbmc_project D-Bus interfaces\n- The new D-Bus properties that will be used by Redfish or others to know if redundant is active or a BMC's role.\n- The D-Bus API to get data from the sibling.\n- Which Redfish schema we plan to get updates into.\n- What we use to know if a BMC can be active.\n\nAs far as using one of the consensus algorithms... for just dealing with 2 BMCs it didn't seem worth the trouble.  We have specific things to look at to choose the active, and also we don't need instantaneous failovers with zero interruption like say a database cluster would have.  Someone on the team prototyped pacemaker with corosync, and it didn't do what we needed, which I mentioned in the document.\n\nI realize that redundancy can always be more complex, but what we have here is what we think we can execute in our timelines.  If someone needs to enhance it later I don't see why that couldn't be done.\n\nIf after all of my updates you still don't think it belongs upstream, I guess we will have to deal with that.  Hopefully we can still get our interfaces defined in PDI and be able to write bmcweb code against those to generate the Redfish behavior we need, assuming we can get it into the DMTF."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Neither of these seem like \"minimum services\". Why are Redfish and the webui special?  Shouldn't both forward to the primary bmc?  We should probably get a better definition of what \"minimal\" means here, because it's unlikely that all designs are going to agree."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 153,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I elaborated on what I meant here, which was that we don't want to run services that would attempt to access hardware they can't, or attempt to talk to the host."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 156,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this mean?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 156,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Reworded to state that when a failover is requested by an external entity, the request will go to the passive BMC."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 159,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Could we instead just treat this as some kind of additional power state?  Most daemons already have the capability to handle \"power off\" for their connected devices.  \"Passive BMC\" seems a lot more like just another version of \"device is powered off\".\nThat seems like a better overall project direction.  I suspect that very few BMCs will take this feature, given it's so different from other systems.  At least if we treat this as an additional, or similar to power state, and not a bunch of systemd targets, we have a way to model and test it without having the IBM platform this is implemented on, and in the ideal, we get more power state handling between services."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 159,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "One of our goals, which you also brought up in another comment, was to not have to have normal daemons be redundancy aware.  So the thinking is it would be better to just not start them when not needed as opposed to having to modify them to not do things when the BMC is passive.\n\nI think that eliminates most of the testing concern?  As the daemon just isn't running so it can't misbehave.  It does mean that if they would start as part of multi-user.target they would be starting later, as part of obmc-bmc-active.target, but as long as the dependencies are right that should be fine.\n\nI tried to elaborate and add text to make it more clear what the idea is.  If you still would rather have the services started anyway we can of course discuss further.\n\nI will add a list of the daemon that are actually involved into the doc."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 163,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like a design that's going to cause a lot of problems.  Lots of services are looking for multi-user.target, so this design is proposing to change all of them to suddenly look for less?  That seems like every service now has to be openbmc specific."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 163,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I added changes to hopefully better describe what the plan is, which specifically makes it so it doesn't matter what target the original service was linked to.\n\nIf you still have concerns about this after these updates, we can discuss further."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 169,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How will these be maintained?  As is, the current direction is to put service files into the individual repos, so will every application need a change here?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 169,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "No, it will all be done from one place.\n\nI made some updates to hopefully explain this better, and also added a link to a commit that implements how it would/could be done."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 171,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Doesn't this mess up all systems that don't have this target?  Or is there a way that this can only be installed if this feature is enabled in a meta layer?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 171,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Correct, it would only be installed if the redundant-bmc machine feature was enabled.  Did some rewording to try to make it more clear."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 188,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like something we'd normally just create a dbus interface for?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 188,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Can you elaborate? I had thought ConditionPathExists was the standard way to prevent a service file from doing anything in certain cases.  For example, there are a dozen uses of it in phosphor-state-manager already.  Here are 2 of them:\n\nphosphor-reset-chassis-on@.service:ConditionPathExists=/run/openbmc/chassis@%i-on \nphosphor-reset-host-running@.service:ConditionPathExists=/run/openbmc/host@%i-on\n\nSo while those normally would start as multi-target.user, they just wouldn't do anything unless the chassis/host was on."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 233,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "should we just call this -redundant-bmc?\n\n\n\"state manager\" adds no value in the naming.  All dbus daemons maintain some state."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 233,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done.\n\nWas just following the existing naming conventions of the daemons in phosphor-state-manager."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 255,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This makes some of the more important parts of this design not really reusable between systems the service itself highly ibm specific."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 255,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I restructured the D-Bus sections to make them hopefully easier to understand.  Now the first section on D-Bus, 'D-Bus Representation' will be the properties phosphor-redundant-bmc would host to provide status about itself.\n\nThe second section, 'Inter-BMC Communication', will describe how a second daemon will host an interface that provides information from the sibling via D-Bus properties.  That daemon hides the method used to get that data, i.e. FSI vs network or whatever.\n\nThe idea is that someone else could use something besides FSI by using their own daemon that provides the same sibling D-Bus interface."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 258,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wouldn't it just be the same as the existing bmc path?\n\n/xyz/openbmc_project/state/bmc ?\n\nwhy are we adding the redundancy_info path namespace?  It seems like extra steps for no benefit."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 258,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why would we version this?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 268,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "This was the version of the API provided to/from the sibling, in case a property was added in a newer version of code there would be a way to know if it could be expected or not.  I'll drop it for now until we see a real need for it, or can think of a different way to handle that."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 269,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This should arguably go on a chassis?  Maybe something like \"redundancy position\"?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 269,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I thought about it some more, and I think I can remove this.  The worry was if the cabling was so bad that both BMCs thought they had the same position.  However we're going to have some cable validation code that should catch that."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 271,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why \"Previous Role\" Won't these always be inverses of one another?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 271,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  Why is this configurable?  Given the systemd design, I can't imagine how this could just be disabled."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 272,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "In the 'Startup and Discovery' section I added reasons that redundancy (failovers) wouldn't be enabled.  For example if the BMCs had mismatched code levels."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 273,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this have to do with redundancy?  This seems like a separate interface"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 273,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "We want to know if the sibling has been provisioned.  It makes it easier to know if we can expect a good network connection or not."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 274,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Which BMC state?  For the current BMC doesn't this duplicate the state?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 274,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I fixed the design so now there is just a /xyz/openbmc_project/state/bmc/bmc1 path to read data from the sibling.  The sibling's BMC state will be on that path so that we can know if it's at Ready or not. (we use the Quiesced state, and we wouldn't want to enable redundancy/failovers if the passive BMC is Queisced)."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 275,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this do?  Shouldn't this be a method call, not a property?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 275,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Removed this. was overcomplicating something."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 276,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We have dbus interfaces for versions.  We shouldn't invent a new one."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 276,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I added some reasoning in this section about why we just want to use this property for the sibling version and not add the Software.Version one again, though it's more important for the BMC.State interface that has additional properties on it, some of which are writeable.\n\nI did change it to a string though."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 277,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Overall, there's a lot of information in this struct that really feels specific to FSI, and should just be kept in that implementation and not put on DBus at all.  I see no reason why we would make, say, heartbeat available to other dbus services if there's no reason for them to use it."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 277,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I changed up how the D-Bus was done to just the /xyz/openbmc_project/state/bmc1 path to get data from the sibling, which is being provided by the daemon that reads from the sibling and not phosphor-redundant-bmc. \n\nSo this will be how the code can get the sibling's heartbeat.\n\nI think that alleviates the concern, but if not will revisit."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 293,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What role does the BMC take to if the sibling is unavailable?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 293,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "If the sibling is dead or missing then the remaining BMC would be active."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 293,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Well, if both determine the other is missing do you need to prevent them both considering themselves active simultaneously? Or is that not a problem in practice?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 293,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Sorry, somehow I missed this question earlier.\n\nI think the only way that could happen is with bad cabling between the BMCs.  If it's just a 2 chassis system that isn't cabled together, then they would act like 2 separate systems and while there at least wouldn't be hardware access problems, hopefully the hardware management console software would notice and complain - the details there remain to be worked out.\n\nWe're looking into what information the cable validation code would be able to get when there are multiple chassis where at least one is cabled correctly to both BMCs, so that we could still tell there is another BMC alive even though we don't have direct access.  For example if each BMC writes something somewhere in the FSI space of every chassis it can talk to then the other could see it.  That hasn't been fully fleshed out yet."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 306,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What specification work has been done to ensure the expected states are reached during failure scenarios? For instance, how is the previous role persisted (filesystem?)? What if it doesn't persist (missing fsync followed by a crash?)?\n\nTLA+ and TLC would go a long way here \ud83d\ude0a"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 306,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I haven't gotten there yet.  We'll see if it will TLA+ or not.  If we're down into having to deal with ballooning failure cases it would probably be better to do a catch all and basically reboot and try again if something goes haywire."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 306,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As long as that upholds the liveness needs of the system (good things always happen eventually). For instance, some care is probably needed to ensure you don't end up in an unbounded reboot loop.\n\nhttps://www.hillelwayne.com/post/safety-and-liveness/ is handy."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 306,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Good article, thanks."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 317,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?????  This seems like a very important part of the interface design.  If we're syncing files anyway (presumably over network), why use FSI at all?  At least answering that in the design doc seems important."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 317,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I reworded one of the requirements to state how we still have the boot the system even if the network is bad, so must still be able to choose a single active BMC, which we can do using FSI.  We wouldn't be syncing anything of course and redundancy would be disabled, but at least the user can still run their system.\n\nThe program wouldn't budge on this, and also won't give us a redundant network connection."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 356,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Through what property/Action?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 356,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Added a link to the section below where it is described."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 441,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "so.... there are impacts to non-redudant bmc systems?  Can we quantify how much this will impact non redundant systems?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 441,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "All I meant is that in the field, our system will have a management application that runs somewhere else (referred to as the management console above) that drives the code updates would do it this way.  Now that I think about it, that probably isn't relevant to this document since it doesn't affect code, and also I'm sure isn't the only way to do it.\n\nI'll just remove it.\n\nAlso I'll check if I missed any other impacts."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 472,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 484,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
            "parents": [
                "f167b6d2994c2bd6b3f58143e65b9ba66e9cdb19"
            ],
            "ref": "refs/changes/33/70233/5",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1719438075,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 281,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "These are going to be done only with a bitbake PACKAGECONFIG and/or MACHINEFEATURE, right?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 281,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Yea.  I'll mention that."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 281,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't really like the way this is implemented.  It means that any service we(you?) decide should be active-bmc-only has to be added to the phosphor-state-manager recipe and/or bbappend.  Shouldn't we come up with a mechanism that this can be done in the source recipe?  Seems like this is a relatively simple bbclass and/or extension to the obmc-phosphor-systemd.bbclass?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I was trying to not affect any recipes directly.  Sounds like that isn't a concern, so I'll try what suggest."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 287,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Reworked it so that a redundant-bmc.bbclass will do the work, which any recipe or bbappend can then inherit."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 316,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "phosphor-led-sysfs too?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 316,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Wasn't thinking the udev rules wouldn't fire, at least for ones in the system inside other chassis.  You could be right, I'll look into it."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 316,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "All leds would be connected via the `Comm ASIC` in this case so only the active BMC which has the access will get the udev events."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 320,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do you stop entity-manager from probing your FRU EEPROMs behind the FSI? Is this handled by kernel bind calls preventing those i2c busses from showing up until it is active?\n\nDo you even use entity-manager here?  I didn't think entity-manager could handle the openpower-fru-parser content?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 320,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "We use EM purely for the sensor configs and not for inventory.  The probes are for openpower-vpd-parser fields so anything we don't read VPD for won't be in EM (though there are some PIM issues with syncing I mention below)."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 356,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What does \"BMC\" mean in column 3?  You can't have properties that are only on certain instances; they are either there or not."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 356,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "The one that is Active only is on a unique interface, as is the one that is Passive only.  So the interface would only be created for certain roles.  I'll see if I can reword better."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 356,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Oh, there are different interfaces here.  Got it."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 376,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "So?  Why does that mean you can't allow initiating a failover from the active?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 376,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "True.  As it is now, one could use Redfish aggregation to request the failover going through the active BMC.\n\nOtherwise, we have to put in some sort of other plumbing to get that request to the passive BMC which to actually start it.  Would you think there's a need for that?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 376,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't care either way on the implementation, but the \"because...\" doesn't follow logically."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 376,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "restating / summarizing, it must be available in the passive BMC.\n\nthe implied reset reboot of the primary might interfere with response but so does a BMC reboot request"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 391,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It might be helpful to have the interface(s) here too?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 391,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I moved the paragraph below that specified the sibling data interface to up above, and also added in the interface of where to get the data."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 394,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems a little strange to me.  You have properties in the phosphor-state-manager application that are populated by the \"RBMC app\"?  Why aren't they just hosted there?  Generally having state written by another process isn't ideal."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 394,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "These are hosted by the the phosphor-redundant-bmc daemon that is just in the phosphor-state-management repo.  someone previously requested them to still be on the /xyz/openbmc_project/state/bmc0 object path, though I don't have a preference here.  Will check if I can reword something."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 394,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Hopefully the rewording made things clear."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 397,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is \"SW App\"?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 397,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "was trying to shorten xyz.openbmc_project.Software.BMC.Updater.  Will fix."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 397,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 552,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: It's just webui-vue."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 552,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "will fix"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 552,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 563,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is a \"log ID\"?\n\nHow do you handle logs deleted from one BMC being deleted from the other?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 563,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "It's the 'Id' property on xyz.openbmc_project.Logging.Entry which also is in the object path.\n\nWe'll have to mirror deletes as well. I'll add that."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 563,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 662,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 674,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "69a62f782aa35cef7701aeb5dc5e6d4471b32905",
            "parents": [
                "5a727b484f69eaea8accb6f066687cc06abc9ad2"
            ],
            "ref": "refs/changes/33/70233/6",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1719956136,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 667,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 679,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "10d7f9f66672f379d918364c88b14d428b115d25",
            "parents": [
                "5a727b484f69eaea8accb6f066687cc06abc9ad2"
            ],
            "ref": "refs/changes/33/70233/7",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1719956690,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "are these achieved or just communication when the role was established (as the election is in the hardware specific daemon).\nthe what was explained but not how.   \n\nshould more become redfish via restricted role to give the BMC access to sibling state especially wrt redundancy enable?   or it's part of the system sync service mentioned? or is that just file sync.\n\nin other words beyond the aliveness and mentioned you try signaling over hardware specific can the rest rely on the network and be common?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "FSI is FRU Support Interface."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "The processors have slave FSI ?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 81,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "u meant BMC chip or card here ?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "The BMCs? means both active and passive must report via PLDM and redfish ?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 185,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "My initial read thought this implied a separate UI application and I was going to challenge how it was selected but in impacts you just anticipate selective panel availability."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 226,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "This is set active service.\na second passive service may be useful for BMC ready determination that could conflict with fallover and this.\n\nseparating will help address the comments I'm the next block."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 240,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "putting it in the same target requires every conditional service to take a dependancy in this active passive service.   wouldn't it be simpler to do this as a prerequisite of the active target?\n(is this a thing?)\n\nin which case can a common service host a dbua object with the role and host actions to start as active or initiate fallover) (much of this block started with just the context to this point with minor edits and some updates after reading the rest of the document) ohh you separated the service in response to feedback but didn't get the implications here)\n\ngoing back to @Ed comment, could this be optional manager State?  hence just another system state waiting for hardware access?   \nreading the rest a separate application may make sense but having it's transition be driven by methods from the hardware discovery still makes sense \n(reading further got some updated design but missed BMC ready implications)\n\nafter processing the implications of fallover from passive to active without a reboot this is definitely the wrong way to condition the service.   while it blocks the startup of the services it creates state where the target state is active without me service running and fallover won't actually restart them without isolating to the previous mukti-user target.   the psm conditional execution is for where the preconditioning commands prior to establishing to the active state are actively harmful.\n\nso eg forcing the hardware access away from the sibling BMC makes sense to be conditional preventing failed BMC from interfering with the now active BMC.\n\n\nthe BMC active target needs to have a hard dependency to being selected as active.  not just conditionally starting service to a common ready state.\n\nmaybe this is a file to enable a single onshot persistent service which the rest of the target takes a hard dependency but need to prohibit it from being stopped.\n\nsimilarly the passive might conditionally enable unforced failover ."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 249,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "won't this imply set active passive service will be inferred to start as part of multi user service? also hence it would always become active?\n\nor the condition us evaluated before the dependent initiation is this documented?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 361,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "what will be the default and is the value persisted ?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 364,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "is this persisted ?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 374,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "could this be useful to the customer for testing or isolating in automatic external initiation?   while lab and manufacturing can't justify the requirements it's worded to be restricted to those users."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 381,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "does this imply all states (code level mismatched)? or\nwould it have a force takeover that is more destructive to any current host states? or would force always destroy the host states?\n\n\ninstead of a force parameter why not a separate \n`ForcedTakeover` action? to manager reset actions?  this would allow OEM refinement or additional beyond nominal takeover (eg just couldn't find siblings or some expected hardware vs unprovisioned or code mismatched)\n\nor an enum parameter that could expand by redfish OEM Does redfish have this concept?). Thia would allow eg try to preserve host state or force off on etc.   getting a failure message back from a reset action with why the takeover was rejected/blocked is difficult and may have OEM limits.   maybe someone wants to be try to release the hardware and give up the active role on the active BMC for a graceful takeover."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 394,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Thia is hosted by the common application?   how does it communicate with the hardware specific service?  why wouldn't it be common?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 395,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "which daemon are we back to the hardware specific?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 414,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "All if this is common correct?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 451,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "separate this into another paragraph, it's changing topic from IBM design to theoretical other systems"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 465,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "so this is somehow from the sibling?   can the initial role be found or defaulted until network access and sync is achieved?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 472,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "won't this complicate factory reset?\n\nwhy not leave it to provisiong to initiate a fallover to transition to active the first time?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 476,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "repeative with lime 467 above.   kept separate for emphasis and separation of thought implies keeping this instance may be preferable."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 487,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "this seems like a substate of passive ....  passive, limited, active"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 490,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "this would no longer be ready right?  I understand it's good gate to transition, but if it's rebooted will it be able to transition to redundancy enabled or would it require a force takeover?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 497,
                    "reviewer": {
                        "name": "Jinu Joy Thomas",
                        "email": "jinu.joy.thomas@in.ibm.com",
                        "username": "jinuthomas"
                    },
                    "message": "will sync happen before the services are started ? what would it sync at this time ? persisted data or only base information held by the RBMC app?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 501,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "hmmm what does it mean to do a full sync in fallover?  \nseems like the possibility previously active would need to be alive \n\nshould the sync be part of allowing redundancy but just some kind of file consistently check (eliminate/clean up partially transferred files) be before active, and the redundancy enabled be deferred?\n\nwriting this tells me then the passive could be left behind and would need to be aware it will need to use force fallover.   hmmm..."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 513,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "why is update role not before taking over hardware access?\n\nwouldn't it always be required to ensure the hardware access is to whichever BMC is active? \n\nif hardware is only partially discovered due to latent issues the previously active BMC just not fully available.\n\nthis points out that BMC ready is now broken it's no longer services started and redfish resources stable.  should it not be set until passive role is decided and cleared from failover initiated until completed?  should we send a reboot event for unaware client to reset their state?\n\nthe manager needs to also check that fallover in progress is false before trying to manage the system / or enumerating the Reddish tree ?  I see it's also role active."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 518,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "watt for the passive BMC to reach it's BMC ready?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 520,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "this seems to require the passive BMC to be notified it to enable it's redundancy enabled State?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 523,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "it would seem to me that after forcing the previously active BMC away is unique, once done and the role set to active the sibling reset a could be released and the reboot block removed.   \n\ndiscovery of the hardware should just be part of establisheing the active system state (target) once the hardware is forced away (I understand that establisheing access and forcing sibling isolation might be required or more efficient in a single bus walk but checking would be every time).   \n\nthis would reduce the reset block duration especially during discovery which would seem to be a high risk to hang.\n\nfailover in progress would persist and may affect role selection (maybe only check access vs force switch access and hence block failed BMC from becoming master without force but allowing force)\n\nshould we make isolation it's own service with systemd time limit to allow better failures response even if it requires outside initiated recovery ?   still seems better than requiring access to force reboot eg by power interruptions to the BMC.  \n\nalternative instead of it's own service the r\ngeneric role transition can establish the block and time the method call to the hardware but this might impose concurrency constraints should it be a method to trigger and a signal to complete?\n\nhow to interact between role and role transition service and the hardware role state can be TBD."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 532,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "so this can be redfish aggregation to initiate a graceful takeover?    how does it know the partner has a better view until it attempts to probe?   is/can this decision made before reaching active?   should a failure cause it to remove itself from redundancy enabled before initiating the fallover request to the sibling?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 561,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "UI needs to treat passive to active as a new connection and throw away it's cache of empty collections.   see the BMC ready discussion in fallover action."
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 574,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "how should delete or mark service be handled if the sibling is unreachable?   does it need to have redundancy disabled?  should the BMC identifier be used to control the master source to delete?\n\nwhat if the BMC is placed in the opposite site eg for problem isolation?  should it be provisioned or hardware location id?\n\nthe Web UI is currently sorting by id not time although this is being discussed in discord.  is this desirable?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 593,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "this implies stopping and restarting the service?   \ncan we instead create a virtual? plug dect when it becomes active?\n\nhow is the system serial checked is it exposed always for mismatch trouble shooting?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 605,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "adding watches seems excessive will consume kernel memory for each file, especially when a limited number will be changed in each sync.   preferably the sync daemon could write the state ov r dbua directly but alternatively a signal to re-read and signal changes?   do we need to have many restricted from modification when in passive role (obviously not the role determination state).   does this imply syncing to a temporary directory?   would it also psm to do change detection more directly and eliminate the sync daemon from having to detect unchanged settings and eliminate false changed signals?"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 630,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "will the override wants leave default [Wants] in the service file?  does this break systemctl enable disabled?   can the target be filtered during bbappend or service install to adjust the target?   (do we only remove multi user target?)"
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "line": 636,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "see above discussiin in fallover re BMC ready."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "designs/redundant-bmc.md",
                    "type": "ADDED",
                    "insertions": 666,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 678,
            "sizeDeletions": 0
        }
    ]
}