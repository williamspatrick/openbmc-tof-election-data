{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "I90da64f9fee8e073ac8ebcd3a3bf7a95f96171a1",
    "number": 65683,
    "subject": "CrashDump: Add CPER and Configuration Interface for Crashdump/RAS",
    "owner": {
        "name": "Supreeth Venkatesh",
        "email": "supreeth.venkatesh@amd.com",
        "username": "supven01"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/65683",
    "hashtags": [],
    "createdOn": 1692979123,
    "lastUpdated": 1706624895,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1692979123,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1692979160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1692979160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1692979432,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/73532/ : FAILURE"
        },
        {
            "timestamp": 1693208205,
            "reviewer": {
                "name": "MichaelJeiShen",
                "email": "gpgpgp@google.com",
                "username": "MichaelJeiShen"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1693231629,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1693286341,
            "reviewer": {
                "name": "Dhruvaraj S",
                "email": "dhruvaraj@gmail.com",
                "username": "dhruvibm"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1693305706,
            "reviewer": {
                "name": "Jayanth Othayoth",
                "email": "ojayanth@gmail.com",
                "username": "ojayanth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1693318890,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1693415851,
            "reviewer": {
                "name": "Abinaya Dhandapani",
                "email": "adhandap@amd.com",
                "username": "abinayaddhandapani"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693415895,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1693430803,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693438988,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1693439389,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(9 comments)"
        },
        {
            "timestamp": 1693446697,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Patch Set 2:\n\n(11 comments)"
        },
        {
            "timestamp": 1698848484,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(10 comments)"
        },
        {
            "timestamp": 1698852096,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1706624895,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Abandoned\n\nPlease see the design document here: https://gerrit.openbmc.org/c/openbmc/docs/+/68440"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "65dc11dc78341737f0ca892caf86a46dd6e8c563",
            "parents": [
                "4de8a3b03cbb375eae92184cce3bc69be85f07d4"
            ],
            "ref": "refs/changes/83/65683/1",
            "uploader": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "createdOn": 1692979123,
            "author": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "MichaelJeiShen",
                        "email": "gpgpgp@google.com",
                        "username": "MichaelJeiShen"
                    },
                    "message": "This interface should be more generic.\nAPML is specific to AMD which can't be appled to other CPU vendors."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Agreed. Would the generic property name \"Retries\" suffice?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Need to specify what is retrying.  Collection of the crashdump?  Even \"APML Retry\" doesn't tell me anything."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "MichaelJeiShen",
                        "email": "gpgpgp@google.com",
                        "username": "MichaelJeiShen"
                    },
                    "message": "CPER can be used in correctable error as well.\nI think it shouldn't be under `CrashDump` folder"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Agreed. Suggest a folder it should be in?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Jayanth Othayoth",
                        "email": "ojayanth@gmail.com",
                        "username": "ojayanth"
                    },
                    "message": "Some interesting proposal related to\" Redfish modeling of Platform Errors and UEFI CPER\". https://members.dmtf.org/wg/Redfish/document/44051. This proposal talks about PlatformErrorRecord model, which includes CPER useful information to user. Are you planing to support similiar data here or just provide support to crashdump management? \n\nLooking high level this is close to CPER fault data type in fault log entry , Reference https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml#L32.\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/53017 provides some insights on the existing d-bus implementation of fault log in phosphor-debug-collector.\n\nAdding @cweinan, implemented fault log interfaces, which looks close Host side debug data management."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 0,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Thanks. Yes. We are supporting CPER for FATAL, Correctable (Runtime) errors. There are external tools out there that can easily parse the CPER files generated as CPER is defined by UEFI specification.\n\nFrom the bmcweb implementation, https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/log_services.hpp, there are references to \nconstexpr const char* crashdumpObject = \"com.intel.crashdump\";\nconstexpr const char* crashdumpPath = \"/com/intel/crashdump\";\nconstexpr const char* crashdumpInterface = \"com.intel.crashdump\";\n\nHence, want to see if we can re-use the bmcweb code and arrive a common interface instead of com.intel.crashdump, if you guys think the \"Dump\" is the right place for it, thats ok. We just want to see that code in bmcweb is generic across processors."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "This is basically dump entry right? is it possible to reuse this existing entry?\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Dump/Entry.interface.yaml\nbut this interface doesnt expose filepath but a getFd is used for getting the fd to offload the file.\n\nand a custom entry can be defined like this\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Thanks.\nFrom the bmcweb implementation, https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/log_services.hpp\nthere are references to\nconstexpr const char crashdumpObject = \"com.intel.crashdump\";\nconstexpr const char crashdumpPath = \"/com/intel/crashdump\";\nconstexpr const char* crashdumpInterface = \"com.intel.crashdump\";\n\nWhere is the bmcweb implementation [Redfish schema] for getting data from Dump interface? is it part of \"logservices\" schema?\n\nif we go with dump interface route, we will have to remove crashdumpInterface, so need someone from Intel to comment on it."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 2,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "The crashdump interface today provides a file name, file path, and timestamp.  When the `AdditionalDataURI` is requested, bmcweb returns the crashdump file as an attachment.\n\nIf the Dump interface can provide this same capability, then I think it could work, but it may need some changes to make it more generic."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 14,
                    "reviewer": {
                        "name": "Dhruvaraj S",
                        "email": "dhruvaraj@gmail.com",
                        "username": "dhruvibm"
                    },
                    "message": "This interface can be used if stored as epoch"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 14,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Ok."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 119,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "5cac92adf107196e6ce547855c375c08b4a2b1db",
            "parents": [
                "4de8a3b03cbb375eae92184cce3bc69be85f07d4"
            ],
            "ref": "refs/changes/83/65683/2",
            "uploader": {
                "name": "Abinaya Dhandapani",
                "email": "adhandap@amd.com",
                "username": "abinayaddhandapani"
            },
            "createdOn": 1693415851,
            "author": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Thank you everyone who commented on this. Much appreciated. We think that we can use already defined dump interface to accomplish this. We are working to change it based on dump interface already defined. We will raise a new review request, once we have that implemented. Will abandon this review after we raise a new request."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 6,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "size not uint16."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "why does this need to be configurable?  why would a user change it?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 8,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "This is AMD specific to let the user set the number of retries from BMC to send the AMD processor to get . \nNot sure if other processors have a use for this."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "please follow the naming convention."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 9,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "uint16_t?  what does the represent?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this doesn\u2019t feel like a runtime policy either. should be compile time or in a config file?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 14,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Good question. Will check why we deemed it as Runtime policy item."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 27,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "what does this mean?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "remove this.  we have dimm inventor items for this already."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 31,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "you\u2019re addding p0 and p1, which should be properties under the relevant processors.  also, there are more than just dual socket systems out there"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 32,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 67,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "units?  applies to all these times."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 67,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Seconds. Will add that."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 67,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Seconds are not acceptable.  All time units in dbus should be microseconds.\n\nUse a uint64."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Counters don't seem like configuration policy.  Please use a separate Metric if that's what this is."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 75,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Size types should be 'size'.  Don't optimize for your current hardware implementation."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 86,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "overall, this interface is:\n1. ignoring the existing cpu/dimm inventory items, and it\u2019s not clear from a technical perspective why.\n2. adding a bunch of configuration that I would not expect to be available at runtime, and really feels like a configure time parameter.  what are the use cases for changing this at runtime?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "line": 86,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "1. CPU/DIMM labels will be removed, it does not belong in RAS/CPER interface.\n2. Some of the configuration parameters should be available at Runtime. For e.g., whether we want to monitor correctable errors, at what threshold. DIMM CECC may be common and administrator wants to adjust them at runtime if a particular system exhibits this behavior."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "cper records are more than just crashdumps.  I suspect this needs to go into a different namespace."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 4,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "FileName"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "cpre records are functionally small (10s of bytes?) this doesn\u2019t need to be a file, this can just be an array of bytes.  no need for a file or a filename."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "It's actually 10's of Kilobytes and will depend on the number of errors RAS engine detects on the host."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think we want file paths sent over dbus anyhow, right?  Do we need a method that returns an `fd`?"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "What is the difference between \"Filename\" and \"Log\"?  Not obvious from the description."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "needs to be time since epoch to match everywhere else.  bmcweb has conversion functions already that are well tested."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Not resolved until the code is updated."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "how is it determined which processor complex produced this CPER record?  that will be required for multi host systems."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "CPER record consists of 3 parts\n1. Header\n2. Section descriptor(s) [can be more than 1]\n3. Section (s) [as many as the number of section descriptors]. \nSection descriptors will define whether it's an error related to P0, P1, P2, etc.."
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "line": 16,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Where do these \"section descriptors\" come from?  `P0`, `P1` is maybe an AMD identifier?  These don't necessarily correlate to silk-screen names various vendors use, do they?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/Configuration.interface.yaml",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/CrashDump/CperRecord.interface.yaml",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 121,
            "sizeDeletions": 0
        }
    ]
}