{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "id": "Ic179812f3496084526e9672801d57b44be448380",
    "number": 69768,
    "subject": "Compile errors under libc++",
    "owner": {
        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
        "email": "omar@rolla.me",
        "username": "omarhogni"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/69768",
    "hashtags": [],
    "createdOn": 1709200471,
    "lastUpdated": 1710524253,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1709200471,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1709200495,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1709200554,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1709200574,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1709209317,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1709225733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709225733,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1709225974,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/80028/ : FAILURE"
        },
        {
            "timestamp": 1709236409,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1709282381,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709282406,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709282406,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1709282459,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1709282575,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/80065/ : FAILURE"
        },
        {
            "timestamp": 1709290357,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709539403,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709575044,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709575315,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709575596,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709576002,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1710497288,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1710497306,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1710497308,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1710497309,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1710497417,
            "reviewer": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1710497477,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/80756/ : FAILURE"
        },
        {
            "timestamp": 1710524253,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "cd5dc85e1a98c89b9075f98d9225acb4eac8baba",
            "parents": [
                "e12a23cc2e28b49234d042ac60eafec4ce4e3a3b"
            ],
            "ref": "refs/changes/68/69768/1",
            "uploader": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "createdOn": 1709200471,
            "author": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/async/context.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/async/match.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "include/sdbusplus/async/match.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 2
        },
        {
            "number": 2,
            "revision": "759909e234bdcc8857b79251aba7c2d34768ba0d",
            "parents": [
                "e12a23cc2e28b49234d042ac60eafec4ce4e3a3b"
            ],
            "ref": "refs/changes/68/69768/2",
            "uploader": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "createdOn": 1709200554,
            "author": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "According to this, Clang has supported it since clang-17 and GCC since GCC-10.  https://en.cppreference.com/w/cpp/compiler_support\n\nIs there a specific version we're trying to include support for that is older?  This isn't a Mac problem, since sd-bus doesn't exist on the Mac..."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "The compile failure is from stop_source, https://en.cppreference.com/w/cpp/thread/stop_source Here is a link https://pastebin.com/UCeNS5Tf with the precise failure, note I am utilizing vcpkg to control the toolchain. Which is my target with this PR I am trying to add sdbusplus into vcpkg. \n\nThis is also not targeted to mac, we try to build our projects across gcc and clang with their respective standard library."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Which version of clang though are you trying to support?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "17.0.6"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Did you not hit the \n\n```\nerror: pack expansion contains parameter pack '_UTypes' that has a different length (1 vs. 3) from outer parameter packs\n```\n\nerror similar to here?\n\nhttps://jenkins.openbmc.org/job/ci-repository/79848/console"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "That problem is only with libstdcpp plus clang.  This commit is for libc++ (clang's c++ library)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK.  Got libc++ and libstdc++ confused for a second."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "Can this thread be resolved?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think patricks original question was addressed.  https://en.cppreference.com/w/cpp/compiler_support shows that this should be supported in clang-17.  If you're trying to compile with 17.0.6, it's not clear (at least to me), why we would need to to anything explicit here to support libc++-17"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This says libc++ twice.  Did you intend libstdc++ for one of them?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "No this change is removing the contents of two compilation units so they compile under libc++. The point was just that libc++ users still cant use the async portion, this does not \"fix\" anything just allows them to use the asio version. I have modified the commit message to be more clear."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "Can this thread be resolved?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Yes, original comment is addressed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/async/context.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/async/match.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 1
        },
        {
            "number": 3,
            "revision": "4df9e08e4b562bbcda18e2ca457a6d426bcf4635",
            "parents": [
                "e12a23cc2e28b49234d042ac60eafec4ce4e3a3b"
            ],
            "ref": "refs/changes/68/69768/3",
            "uploader": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "createdOn": 1709282381,
            "author": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/async/context.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given that we're in a compile unit, shouldn't we just not compile the unit in the meson config if we detect this to be true?\n\nAlso, can we add some comments about WHY this is needed?  All this is doing is checking the stdlib version for jthread (which this code doesn't look like it uses jthread)."
                },
                {
                    "file": "src/async/context.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "Have added a comment around why this is needed."
                },
                {
                    "file": "src/async/context.cpp",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Would like to see my first question answered."
                },
                {
                    "file": "src/async/match.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Any reason we need to check whether this include exists?  it looks like it's included in c++20, which was supported in gcc in version 10, and clang (partially) in version 17.\n\nAlso, it looks like it was included in __cpp_lib_jthread 201911L, so even if we do need to conditionally include it, we can just put if below the 201911L ifdef, right?"
                },
                {
                    "file": "src/async/match.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                        "email": "omar@rolla.me",
                        "username": "omarhogni"
                    },
                    "message": "__cpp_lib_jthread is defined in stop_token. I just thought it was good to check for the existance of stop_token include. Can remove if you want."
                },
                {
                    "file": "src/async/match.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What I would like to see (which should be taken with a grain of salt, because Patrick is the maintainer here ideally we should do whatever he wants to see) is clear paths for libstdc++, and libc++.  What I see here is 4 paths, \nConditional #include <stop_token>\nAnd conditional check __cpp_lib_jthread\n\nThis makes this code hard to read, especially given that I would expect that #if __has_include(<stop_token>) will never fail on any of the compilers we intend to support here, and if it did a compiler error about a missing include would be more informative than undefined reference to sdbusplus::async objects."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/async/context.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "src/async/match.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 33,
            "sizeDeletions": 1
        },
        {
            "number": 4,
            "revision": "13fbe41a446a78e13ca14e281c7fb60add1b2cda",
            "parents": [
                "e12a23cc2e28b49234d042ac60eafec4ce4e3a3b"
            ],
            "ref": "refs/changes/68/69768/4",
            "uploader": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "createdOn": 1710497288,
            "author": {
                "name": "\u00d3mar H\u00f6gni Gu\u00f0marsson",
                "email": "omar@rolla.me",
                "username": "omarhogni"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit: I think this means \"so that\" ?  can we explicitly put the words instead of abbreviating so the sentence reads like a normal sentence?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/async/context.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/async/match.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 35,
            "sizeDeletions": 1
        }
    ]
}