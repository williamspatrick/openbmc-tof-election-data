{
    "project": "openbmc/phosphor-bmc-code-mgmt",
    "branch": "master",
    "id": "Ic8a3f7ac4220320f9d60faf19bda772623e18d4c",
    "number": 69858,
    "subject": "new-code-update: new interface for image-manager",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/phosphor-bmc-code-mgmt/+/69858",
    "hashtags": [],
    "createdOn": 1709682497,
    "lastUpdated": 1712560741,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1709682497,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1709682518,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709682518,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1709682702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/80205/ : FAILURE"
        },
        {
            "timestamp": 1709686748,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1711399792,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(14 comments)"
        },
        {
            "timestamp": 1711399881,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1712560741,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Abandoned\n\nThis patch is not valid anymore based on latest changeset."
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "006475e2e7d255dab0c34f955f54e11124d86703",
            "parents": [
                "813ffba88389a0d66f53bd7271b9576277eabb20"
            ],
            "ref": "refs/changes/58/69858/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1709682497,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "image_manager.cpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why these header removals?"
                },
                {
                    "file": "image_manager.cpp",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't make these kinds of \"clean ups\" in a patchset implementing a new feature.  FWIW, there's a tidy check that can do these automatically if we want (I'm not sure it really matters), but we should do them in a different patchset."
                },
                {
                    "file": "image_manager.cpp",
                    "line": 100,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": ".... this is a comment, but doesn't do what it says it does."
                },
                {
                    "file": "image_manager.cpp",
                    "line": 104,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "why read /proc ?"
                },
                {
                    "file": "image_manager.cpp",
                    "line": 106,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "generic_string?  don't we just want string()?  (i'll be honest, I don't know the difference)."
                },
                {
                    "file": "image_manager.hpp",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This ifdef is really worrisome.\n\n1. It duplicates quite a bit of code between branches.\n2. Inside the ifdef, there isn't balanced braces.\n3. 1 and 2 make it very difficult to read and understand the difference.\n\n\nCould we instead do something like\n\n    explicit Manager(sdbusplus::bus_t& bus) :\n        ...\n    {\n        if constexpr(new_thing){\n            createBMCVersion();\n        } else {\n            // Do nothing\n        }\n    }\n    \n    \nThat way it's very clear what happens in each path."
                },
                {
                    "file": "image_manager.hpp",
                    "line": 39,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is taking a pointer reference to an intermediate rvalue.  I would expect at a minimum that this would show up in ASAN as a failure.\n\n\nIn addition, ideally new code should be using sdbusplus::message::object_path if it can."
                },
                {
                    "file": "image_manager.hpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You don't need to ifdef new methods added.  Just make sure the old code paths don't call them."
                },
                {
                    "file": "image_manager.hpp",
                    "line": 114,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "default init your variables please so it's explicit."
                },
                {
                    "file": "image_manager.hpp",
                    "line": 117,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please follow the initialization style already present in this interface.  (ie, move the std::string to the front)."
                },
                {
                    "file": "meson.build",
                    "line": 264,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "THese two look duplicated between the branches?"
                },
                {
                    "file": "meson.build",
                    "line": 333,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I thought the \"not found\" branching logic wasn't required anymore on modern meson?"
                },
                {
                    "file": "meson.build",
                    "line": 351,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "????????  We shouldn't be installing test files on the bmc.  I suspect you need to encode a header file with configure_file, that gives a pointer to a test data directory within the build."
                },
                {
                    "file": "test/image.tar.gz",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Is it possible to just generate this file on the fly in the tests?  Checking in binaries generally isn't a great idea, and based on the size I assume this is just a tarball compressed small file?"
                },
                {
                    "file": "test/test_update_interface.cpp",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I appreciate that you're trying to test.  These mock DBus interfaces have been widely contested;  We should ask ourselves if we want to propagate their usage in the project further."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "test/image.tar.gz",
                    "type": "ADDED",
                    "insertions": 0,
                    "deletions": 0
                },
                {
                    "file": "image_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 80,
                    "deletions": -8
                },
                {
                    "file": "image_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 76,
                    "deletions": -12
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -2
                },
                {
                    "file": "test/test_update_interface.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 249,
            "sizeDeletions": 22
        }
    ]
}