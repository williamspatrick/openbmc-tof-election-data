{
    "project": "openbmc/obmc-console",
    "branch": "master",
    "id": "Ie2b57171ec1f8cb6b1b80ca1d9e6c112bedc1195",
    "number": 71973,
    "subject": "use iniparser dependency for config file parsing",
    "owner": {
        "name": "Alexander",
        "email": "alexander.hansen@9elements.com",
        "username": "pointbazaar"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/obmc-console/+/71973",
    "hashtags": [],
    "createdOn": 1718210565,
    "lastUpdated": 1720568056,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1718210565,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1718210598,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718210599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1718210752,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/85977/ : FAILURE"
        },
        {
            "timestamp": 1718275677,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718275694,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718275695,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1718275720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86019/ : SUCCESS"
        },
        {
            "timestamp": 1718275817,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 2:\n\nThis change is ready for review."
        },
        {
            "timestamp": 1719481726,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 3: Patch Set 2 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719481753,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719481753,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1719481777,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86887/ : SUCCESS"
        },
        {
            "timestamp": 1719503286,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 4: Patch Set 3 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719503320,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719503320,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1719503334,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86928/ : FAILURE"
        },
        {
            "timestamp": 1719504323,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719504349,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719504349,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1719504388,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86935/ : SUCCESS"
        },
        {
            "timestamp": 1719504774,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719504795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719504795,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1719504817,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86939/ : SUCCESS"
        },
        {
            "timestamp": 1719542459,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1719561652,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1719563486,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 7: Patch Set 6 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719563506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719563506,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1719563531,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86993/ : SUCCESS"
        },
        {
            "timestamp": 1719894342,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1719911258,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 8: Commit message was updated.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719911280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719911280,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1719911305,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87145/ : SUCCESS"
        },
        {
            "timestamp": 1719912035,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1719983217,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(19 comments)"
        },
        {
            "timestamp": 1720024906,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720024930,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720024930,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1720024942,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 9:\n\n(19 comments)"
        },
        {
            "timestamp": 1720025045,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87257/ : SUCCESS"
        },
        {
            "timestamp": 1720055222,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(6 comments)"
        },
        {
            "timestamp": 1720107601,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720107611,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720107611,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1720107635,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87360/ : SUCCESS"
        },
        {
            "timestamp": 1720107675,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 10:\n\n(5 comments)"
        },
        {
            "timestamp": 1720140233,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10:\n\n(16 comments)"
        },
        {
            "timestamp": 1720171842,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720171854,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720171855,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1720171878,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87390/ : SUCCESS"
        },
        {
            "timestamp": 1720171971,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 11:\n\n(15 comments)"
        },
        {
            "timestamp": 1720485057,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(3 comments)"
        },
        {
            "timestamp": 1720493920,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 11: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1720501012,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1720528455,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 12.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720528475,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720528475,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1720528502,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87539/ : SUCCESS"
        },
        {
            "timestamp": 1720528505,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Patch Set 12:\n\n(3 comments)"
        },
        {
            "timestamp": 1720529301,
            "reviewer": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "message": "Uploaded patch set 13: Patch Set 12 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720529335,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720529335,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1720529360,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87552/ : SUCCESS"
        },
        {
            "timestamp": 1720568049,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 13: Code-Review+2"
        },
        {
            "timestamp": 1720568056,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8e250a46cdf7e8846e76b57458e6a79a604710a9",
            "parents": [
                "46d9ef298f2e26f4c513fedff3b8a26fdf4b2d35"
            ],
            "ref": "refs/changes/73/71973/1",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1718210565,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1/meson.build",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 221
        },
        {
            "number": 2,
            "revision": "d395084d6a139cd726b7da585a7fc43cfcc27be8",
            "parents": [
                "46d9ef298f2e26f4c513fedff3b8a26fdf4b2d35"
            ],
            "ref": "refs/changes/73/71973/2",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1718275677,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 221
        },
        {
            "number": 3,
            "revision": "091cd5b01fb96e8a217686c8a0a57feaf8c806e1",
            "parents": [
                "7bba0f6d76e021a6a4fc8be9f52bb9f0c5a8b068"
            ],
            "ref": "refs/changes/73/71973/3",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1719481726,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 221
        },
        {
            "number": 4,
            "revision": "99a095175cf71b946ce8afc3cad96ffd209cdf45",
            "parents": [
                "9de659409b28dd3a437b697828f962d531dc1924"
            ],
            "ref": "refs/changes/73/71973/4",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1719503286,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 221
        },
        {
            "number": 5,
            "revision": "5bf6325f11fffed5cfeba983f9857d818c63c5aa",
            "parents": [
                "1ed7e2004b27527cbdba4696ec0dc3db2d42ab27"
            ],
            "ref": "refs/changes/73/71973/5",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1719504323,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -43
                },
                {
                    "file": "tty-handler.h",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "ringbuffer.c",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -3
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -2
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "console-server.c",
                    "type": "MODIFIED",
                    "insertions": 510,
                    "deletions": -120
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "console-client.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -1
                },
                {
                    "file": "console-dbus.c",
                    "type": "MODIFIED",
                    "insertions": 55,
                    "deletions": -16
                },
                {
                    "file": "socket-handler.h",
                    "type": "ADDED",
                    "insertions": 60,
                    "deletions": 0
                },
                {
                    "file": "console-gpio.c",
                    "type": "ADDED",
                    "insertions": 287,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-gpio.h",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "config.h",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "log-handler.h",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": -24
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "log-handler.c",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -33
                },
                {
                    "file": "tty-handler.c",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -25
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -142
                }
            ],
            "sizeInsertions": 1275,
            "sizeDeletions": 510
        },
        {
            "number": 6,
            "revision": "288f7112e83d74fa7d0f6c979336a27e17f67255",
            "parents": [
                "1ed7e2004b27527cbdba4696ec0dc3db2d42ab27"
            ],
            "ref": "refs/changes/73/71973/6",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1719504774,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So I think the main question here is how you chose this particular INI parser implementation - probably best to discuss that here in the comments, and then we can figure where to go from there (either move the reasoning to the commit message, or take whatever path comes out of the discussion)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "When i was looking for an ini parser, this one already had a recipe in the openbmc/openbmc under\n\nmeta-openembedded/meta-oe/recipes-support/iniparser/iniparser_4.1.bb\n\nThen i did some manual experimentation with it to understand how it handles sections and how to use it. \n\nIt has some upsides of\n\n- small API\n- easy to use\n- few sources and headers\n- written in C ~> compiles fast\n- has tests\n- has examples\n- has documentation\n\nSince i did not immediately find any other ini parser recipe in openbmc/openbmc i went with this."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Firstly, I prefer that you be a little more conservative in marking threads as resolved :) I asked for the rationale so we could either be sure this is the library we wanted, or choose another, and in the event that we're okay with the one you chose then to add the rationale to the commit message. The latter isn't yet done so we're not through with it on that measure, and I asked because I did have some concerns:\n\n1. The URL referenced points to someone's personal tree. This is not necessarily a bad thing, but I don't have an existing trust relationship with them (I've never come across their username or the project). However, I guess trust in it is somewhat reasonable as it has an existing bitbake recipe that points to the same.\n\n2. The README in the repo at that URL says this at the top:\n\n   > Changes in May 2024: We moved to [iniparser/iniparser](https://gitlab.com/iniparser/iniparser)!\n   \n   So we should at least point to the current project repo, and not a historical one (even if the recipe points to the old one).\n\n3. Immediately under that, it seems the project has very recently changed maintainers\n\n   > Changes in March 2024: @lmoellendorf took over maintenance for this project.\n   \n   This is also not someone I'm familiar with, and in light of the [xz issue](https://lwn.net/Articles/967866/) this feels like a particularly vulnerable time for the project. I think some caution is warranted.\n\n4. A quick grep turned up some other options in the OpenBMC tree:\n\n   ```\n   $ git grep -lw INI -- :/:*.bb\n   meta-openembedded/meta-oe/recipes-support/inih/libinih_58.bb\n   meta-openembedded/meta-oe/recipes-support/iniparser/iniparser_4.1.bb\n   meta-openembedded/meta-oe/recipes-support/minini/minini_1.2.b.bb\n   poky/meta/recipes-devtools/python/python3-iniconfig_2.0.0.bb\n   poky/meta/recipes-devtools/python/python3-iniparse_0.5.bb\n   ```\n   \n   Of these, `inih` also has [an existing wrap in the meson wrap database](https://wrapdb.mesonbuild.com/v2/inih_r57-1/inih.wrap), so that might be worth evaluating before maintaining our own wrap here. If we choose to consume `inih` via the wrapdb then you can integrate it by running `meson wrap install inih`. However, it looks like upstream also merged meson support directly into the project:\n   \n   https://github.com/benhoyt/inih?tab=readme-ov-file#meson-notes\n   \n   Given that, the wrap could look like almost any other git wrap that we use in projects throughout OpenBMC.\n   \n   However, we should evaluate `inih` and `minini` on the same criteria you outlined as upsides to `iniparser` above. Can you do a quick comparison?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Ok, i had assumed that any old dependency would be fine, since there is already a recipe in the tree which implies some level of trust.\n\n[1,2] i have updated the URL in the commit message \ud83d\udc4d\n\n[3] I'm aware of the xz issue and would consider it to be the responsibility of whoever bumps a recipe to a new revision, to check what has changed in the project.\nI have checked the source codes of iniparser and can assure you it does not contain any surprises. \nSince we use a fixed revision of the project, it should be fine to check it once at the time we come to depend on it?\n\n[4] Updated the commit message with a brief comparison of our choices here."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Alexander, I think this one is probably the next most likely thing we could merge once we've ironed out some of the details. Given that, it might be beneficial to move this earlier in your series."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "nice \ud83d\udc4d i can move it"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 221
        },
        {
            "number": 7,
            "revision": "2b58a35ab5de25623e6df9ff977efd5edc255af1",
            "parents": [
                "6925740d318e6c305463f3d430d2064da6102752"
            ],
            "ref": "refs/changes/73/71973/7",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1719563486,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 120,
            "sizeDeletions": 221
        },
        {
            "number": 8,
            "revision": "45efcc8557d60b6ab2be689df7d4f089e81794e2",
            "parents": [
                "6925740d318e6c305463f3d430d2064da6102752"
            ],
            "ref": "refs/changes/73/71973/8",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1719911258,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Alexander, thanks for unpacking the trade-offs in the commit message, I think that's reasonably compelling argument now. That said, I have a few concerns across the implementation and the build system."
                },
                {
                    "file": "config.c",
                    "line": 45,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why 100? Can you please provide some reasoning?"
                },
                {
                    "file": "config.c",
                    "line": 45,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "changed it to 512 and made a #define for it \ud83d\udc4d\nMy reasoning here is to be able to allocate the key on the stack.\nI do not expect a key that is larger than that."
                },
                {
                    "file": "config.c",
                    "line": 46,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This really must be `snprintf()` given `buf` has a length that's unrelated to `name`. See the `BUGS` section of `man 3 sprintf`:\n\nhttps://www.man7.org/linux/man-pages/man3/sprintf.3.html#BUGS\n\nHowever, also see the note in the [RETURN VALUE](https://www.man7.org/linux/man-pages/man3/sprintf.3.html#RETURN_VALUE) section, and thus also the [CAVEATS](https://www.man7.org/linux/man-pages/man3/sprintf.3.html#CAVEATS) section.\n\nPlease audit the rest of the patch and address any other uses of `sprintf()`."
                },
                {
                    "file": "config.c",
                    "line": 46,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Ok, good to point this out. Fixed it now and found 1 other occurrence in the patch.\n\nGood idea about the return value, if we don't check it we could return a value for a different key that is a cut-off version of the provided key.\n\nI inserted a check here for the return value but omitted that check for ```config_mock```"
                },
                {
                    "file": "config.c",
                    "line": 50,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`return iniparser_getstring(config->dict, buf, NULL);`?"
                },
                {
                    "file": "config.c",
                    "line": 50,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "config.c",
                    "line": 54,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't see how the name of this function relates to its behaviour. It seems to set a key in the config?\n\nAlso, if this is only used for tests, can we please implement it in a file under the `test/` directory instead?"
                },
                {
                    "file": "config.c",
                    "line": 54,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "moved it to ```test/config-test-utils.c``` \ud83d\udc4d"
                },
                {
                    "file": "config.c",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "100 again - if this value represents some specific concept (... like \"maximum key length\"), then please provide a macro so it can be applied consistently and changed without fuss."
                },
                {
                    "file": "config.c",
                    "line": 60,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "config.c",
                    "line": 68,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "There's only one call-site for this as far as I can tell - can we please just inline it into that call-site below?"
                },
                {
                    "file": "config.c",
                    "line": 68,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "config.c",
                    "line": 81,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If we call `iniparser_load()` before allocating the the `config` object then we don't need to clean up the `config` object on a failed load."
                },
                {
                    "file": "config.c",
                    "line": 81,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 55,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See the comments below; this variable shouldn't be necessary."
                },
                {
                    "file": "meson.build",
                    "line": 55,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See the comments below; these variables should not be necessary."
                },
                {
                    "file": "meson.build",
                    "line": 60,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 65,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What's the motivation for this? I've not seen it required anywhere else. Perhaps this concern is dealt with by resolving the comments below?"
                },
                {
                    "file": "meson.build",
                    "line": 65,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done. Removed all that since it was not necessary. Your suggestion with patch_directory resolved all these issues."
                },
                {
                    "file": "meson.build",
                    "line": 67,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`required: false` seems wrong? It is required - note that meson will automatically fallback to the subproject wrap if it can't find a system installation of `iniparser`. We should remove `required: false` here."
                },
                {
                    "file": "meson.build",
                    "line": 67,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please no, let's place the `meson.build` at `subprojects/packagefiles/iniparser/meson.build` and use the [patch_directory](https://mesonbuild.com/Wrap-dependency-system-manual.html#accepted-configuration-properties-for-wraps) wrap property to have meson handle this for us."
                },
                {
                    "file": "meson.build",
                    "line": 70,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Yeah that's better. Thanks for the link."
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "line": 6,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack what's going on here?"
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "line": 6,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Yes. We create a directory so we can include iniparser\nas ```iniparser/iniparser.h```. Added a comment about that.\n\nBecause iniparser only has its headers in ```src/``` directory"
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "line": 14,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I feel like convention is to name this `iniparser_dep`?"
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "line": 14,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm not sure this is right? Can you unpack what's going on here?"
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "line": 18,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Yes. confirmed it is not necessary."
                },
                {
                    "file": "test/meson.build",
                    "line": 22,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Do they all require `dep_iniparser`? Perhaps we could split out the ones that do?"
                },
                {
                    "file": "test/meson.build",
                    "line": 22,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "I've found it easiest to just add it to everything.\nSplitting out the test dependencies and creating elaborate recipe to build the individual tests just discourages people from writing tests.\n\nRight now it's as easy as writing a single file and adding it to a list.\n\nIf you prefer, i can split it but then there may be more effort in the future to maintain the setup. Is there any drawbacks to have a test require a dependency that's not needed?"
                },
                {
                    "file": "test/meson.build",
                    "line": 22,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Is there any drawbacks to have a test require a dependency that's not needed?\n\nIMO yes, the lack of precision requires analysis in the future to unwind the dependencies as the tests are refactored. I feel it is best to encode them precisely from the start. It should only be a small amount of rework here? Perhaps:\n\n```\nconfig_tests = ['test-config-parse-bytesize', 'test-config-resolve-console-id']\nforeach ct : config_tests\n  test(ct, executable(ct, f'@ct@.c', 'config-test-utils.c',\n                      c_args: [ '-DSYSCONFDIR=\"\"' ],\n                      dependencies: [ iniparser_dep ],\n                      include_directories: '..'))\nendforeach\n```"
                },
                {
                    "file": "test/meson.build",
                    "line": 22,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/test-config-parse.c",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "These tests should all still pass, right? Have we demonstrated that they do? Is there a reason to delete the tests?"
                },
                {
                    "file": "test/test-config-parse.c",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Deleted them since i would assume we do not test our dependencies.\nSince the dependency already has it's own tests.\n\nHeres a link to a recent test run in their CI\nhttps://gitlab.com/iniparser/iniparser/-/jobs/7109191472\n\nIf you would prefer, i can add back the test/test-config-parse.c\n\nShould i do that?"
                },
                {
                    "file": "test/test-config-parse.c",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I prefer we don't delete it. Retaining it demonstrates that despite changing the implementation of the API, the API still behaves the same way that the rest of the application expects."
                },
                {
                    "file": "test/test-config-parse.c",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "line": 25,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This function really deserves a better name. May be `config_mock()`?"
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "line": 25,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "subprojects/iniparser_meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "subprojects/iniparser-4.2.1.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 11,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -120
                }
            ],
            "sizeInsertions": 162,
            "sizeDeletions": 221
        },
        {
            "number": 9,
            "revision": "64a5348cf3c6b93807b1d2924ec7b51678921985",
            "parents": [
                "6925740d318e6c305463f3d430d2064da6102752"
            ],
            "ref": "refs/changes/73/71973/9",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1720024906,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Alexander, I have a few comments on the details, but broadly I think it's looking good."
                },
                {
                    "file": "config.c",
                    "line": 48,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This should rather be:\n\n```\nif (rc < 0) {\n    return NULL;\n}\n\nif ((size_t)rc >= sizeof(buf)) {\n    return NULL;\n}\n```\n\nThat avoids any risk of out-of-bounds reads, arithmetic overflow, or value truncation from the cast to `int`."
                },
                {
                    "file": "config.c",
                    "line": 48,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "config.c",
                    "line": 79,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "First needs a check for `NULL`:\n\n```\nconfig = malloc(sizeof(*config));\nif (config) {\n    config->dict = dict;\n}\nreturn config;\n```"
                },
                {
                    "file": "config.c",
                    "line": 79,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 61,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is this required? Does the `dependency()` request on line 55 not automatically fallback to the wrap?"
                },
                {
                    "file": "meson.build",
                    "line": 61,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Yes it does. I'm not too familiar with meson."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "subprojects/iniparser.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -22
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -76
                },
                {
                    "file": "test/config-test-utils.h",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "test/config-test-utils.c",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -3
                },
                {
                    "file": "subprojects/.clang-tidy",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -141
                }
            ],
            "sizeInsertions": 183,
            "sizeDeletions": 244
        },
        {
            "number": 10,
            "revision": "6fe6096a92c9d8402ed8372b69317c7175029877",
            "parents": [
                "6925740d318e6c305463f3d430d2064da6102752"
            ],
            "ref": "refs/changes/73/71973/10",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1720107601,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Alexander, thanks for the rework. It seems most of my concerns are now in the test code - that feels like good progress. The comments there are mainly around not causing ourselves work to debug test cases down the track."
                },
                {
                    "file": "config.h",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think you've moved this from console-server.h, so this should retain the original IBM copyright, and you should add another for 9elements?"
                },
                {
                    "file": "config.h",
                    "line": 2,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Can do \ud83d\udc4d"
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "line": 21,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we trim the empty lines?"
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "line": 21,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 13,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is only used in `test/test-config-resolve-console-id.c`, can we move it there for now and make it `static`?\n\nThe broad idea here is to keep things as localised as possible, until multiple uses force us to centralise them. There's nothing preventing us doing that down the track (which is what's important to recognise now)."
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 13,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 15,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I realise this is for testing, but can we please still check the result of `malloc()`?\n\n```\nassert(config != NULL);\n```"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 15,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 17,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`assert()` for this result as well"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 17,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 19,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please not mix variable declarations and code?\n\nIt's probably worth a look through the rest of the patch to address any other instances."
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 19,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "I can fix it here. Is there a clang-tidy check for this?\n\nI'm not keen on looking through all the code manually and doing that for the subsequent patches aswell. It's very subjective if this improves readability.\n\nOne could even argue that declaring the variable later improves readability, as it reduces the scope of the variable and thus makes the code easier to reason about."
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please do:\n\n```\nint rc;\n\n...\n\nrc = snprintf(...);\nassert(rc >= 0 && rc < sizeof(buf);\n```"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 27,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is only used in `test/test-config-parse.c`, can we move it there for now and make it `static`?"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 27,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 37,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "It's not critical, but this feels like it beats around the bush a bit compared to `write()`, given we need the `strlen()` result later anyway?\n\n```\nsize_t len = strlen(input);\nwrite(fd, input, len);\n...\n```\n\nAnd then..."
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 37,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 39,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "... Please rather do:\n\n```\nassert(rc >= 0);\nassert((size_t)rc < len);\n```\n\nTo avoid a truncating cast."
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 39,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If we switch to `write()` above then we should probably use `lseek()` here.\n\nWith that, we can move the `fdopen()` call down to here, where we need it."
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 41,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This should be `fclose()` given we've used `fdopen()`?"
                },
                {
                    "file": "test/config-test-utils.c",
                    "line": 44,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/config-test-utils.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If we move the implementations of the functions as suggested in `test/config-test-utils.c` then I think this header is unnecessary."
                },
                {
                    "file": "test/config-test-utils.h",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/meson.build",
                    "line": 16,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Bit of a nitpick, but in the spirit of \"keeping things that go together together\", can we group the array with the foreach loop (i.e. move this down to line ~22 below)."
                },
                {
                    "file": "test/meson.build",
                    "line": 16,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/test-config-parse.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack why we are re-implementing `config_fini()` above? Is it necessary for the structure of the code to be rearranged? It feels to me like the minimal change would be to replace the `calloc()`/`strdup()`/`config_parse()`/`free()` sequence with the call to `mock_config_from_buffer()` and the rest can remain the same?"
                },
                {
                    "file": "test/test-config-parse.c",
                    "line": 30,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "iniparser may fail to create the dictionary if there is errors in the config file.\nSo on the ```!expected``` path we need to check if the config or dictionary is NULL and if not, that the expected key is not present.\n\nMaybe this is a little different from how it worked before.\n\nThe original code suggests that the config is created in either case,\nbut the ```config_get_value``` just fails to fetch the key when the config was invalid.\n\nSo if there is any mistake in the config file and iniparser cannot parse it,\nthe config is not created. So it just fails at an earlier point.\n\n\nFixed the cleanup path also, now using the ```config_fini```"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "subprojects/iniparser.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -22
                },
                {
                    "file": "console-server.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": -12
                },
                {
                    "file": "test/config-test-utils.h",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "console-client.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config-internal.h",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "console-dbus.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/config-test-utils.c",
                    "type": "ADDED",
                    "insertions": 50,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": -5
                },
                {
                    "file": "config.h",
                    "type": "ADDED",
                    "insertions": 33,
                    "deletions": 0
                },
                {
                    "file": "subprojects/.clang-tidy",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -13
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "log-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tty-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -137
                }
            ],
            "sizeInsertions": 303,
            "sizeDeletions": 191
        },
        {
            "number": 11,
            "revision": "9b61fbe4f4d301868da976042c27c4a952c021a3",
            "parents": [
                "6925740d318e6c305463f3d430d2064da6102752"
            ],
            "ref": "refs/changes/73/71973/11",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1720171842,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Alexander, I have a couple of minor nits, but I think this looks okay."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Looks all good to me. I'm not sure whether we need the separate config.h header (or whether that's the best name for it), but I'm fine either way."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If we decide we need the header and also decide to shoot for a better name, then perhaps `console-config.h` (and rename `config.c` similarly)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Having a separate ```config.h``` header helps us to avoid including ```console-server.h``` where it is not needed.\n\nSo we have more fine-grained includes which helps to see dependencies more easily."
                },
                {
                    "file": "config-internal.h",
                    "line": 19,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Given `termios.h` is included via `config.h` this seems redundant (also we don't use any definitions here in the header)?"
                },
                {
                    "file": "config-internal.h",
                    "line": 19,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Bit of a nit, but I think it's easier to reason about if we switch around the cast here, so:\n\n```\nassert(rc >= 0 && (size_t)rc < sizeof(buf));\n```"
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "line": 20,
                    "reviewer": {
                        "name": "Alexander",
                        "email": "alexander.hansen@9elements.com",
                        "username": "pointbazaar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "subprojects/iniparser.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "console-server.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": -11
                },
                {
                    "file": "console-client.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config-internal.h",
                    "type": "ADDED",
                    "insertions": 27,
                    "deletions": 0
                },
                {
                    "file": "console-dbus.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -4
                },
                {
                    "file": "config.h",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "subprojects/.clang-tidy",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -13
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "log-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tty-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -137
                }
            ],
            "sizeInsertions": 297,
            "sizeDeletions": 189
        },
        {
            "number": 12,
            "revision": "d5e6a20d8bd2f721582e0108594dc706d9a195c5",
            "parents": [
                "e2826c7def432a5c8f694ffb87355cb80862612b"
            ],
            "ref": "refs/changes/73/71973/12",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1720528455,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "subprojects/iniparser.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "console-server.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": -11
                },
                {
                    "file": "console-client.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config-internal.h",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "console-dbus.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -4
                },
                {
                    "file": "config.h",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "subprojects/.clang-tidy",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -13
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "log-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tty-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -137
                }
            ],
            "sizeInsertions": 295,
            "sizeDeletions": 189
        },
        {
            "number": 13,
            "revision": "1e04f449b7f00a7b426615533a44519149d2ea38",
            "parents": [
                "498a4a81d93b0242cea5de929f00cade2b5fe9f2"
            ],
            "ref": "refs/changes/73/71973/13",
            "uploader": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "createdOn": 1720529301,
            "author": {
                "name": "Alexander",
                "email": "alexander.hansen@9elements.com",
                "username": "pointbazaar"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 68,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -1
                },
                {
                    "file": "subprojects/packagefiles/iniparser/meson.build",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "subprojects/iniparser.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-resolve-console-id.c",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "console-server.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/test-config-parse.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": -11
                },
                {
                    "file": "console-client.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config-internal.h",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "console-dbus.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -4
                },
                {
                    "file": "config.h",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "subprojects/.clang-tidy",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -13
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "log-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tty-handler.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "config.c",
                    "type": "MODIFIED",
                    "insertions": 30,
                    "deletions": -137
                }
            ],
            "sizeInsertions": 295,
            "sizeDeletions": 189
        }
    ]
}