{
    "project": "openbmc/libpldm",
    "branch": "main",
    "id": "Ia3bd71151d40b56f91afe2fe23b8bf2f26915b64",
    "number": 71210,
    "subject": "platform: Add support for GetStateEffecterStates command",
    "owner": {
        "name": "Tal Yacobi",
        "email": "talycb8@gmail.com",
        "username": "tal-yac"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/71210",
    "hashtags": [],
    "createdOn": 1714550164,
    "lastUpdated": 1716511611,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1714550164,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1714550191,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714551513,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1714551555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714614918,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(9 comments)"
        },
        {
            "timestamp": 1714632507,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithrabarithaya07@gmail.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1714653946,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1714653972,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714654178,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 2:\n\n(11 comments)"
        },
        {
            "timestamp": 1714699605,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3: Code-Review-1\n\n(12 comments)"
        },
        {
            "timestamp": 1714892981,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1714893016,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714893077,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 3:\n\n(6 comments)"
        },
        {
            "timestamp": 1714893218,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1714893266,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714917469,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1714917518,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714953726,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1714978661,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1714978717,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1714979228,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1715040758,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\n(1 comment)"
        },
        {
            "timestamp": 1715040804,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1715040817,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/83877/ : FAILURE"
        },
        {
            "timestamp": 1715040961,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1715065177,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715065207,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8: Ok-To-Test+1"
        },
        {
            "timestamp": 1715065207,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715065269,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/83905/ : FAILURE"
        },
        {
            "timestamp": 1715065487,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1715066166,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715066212,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1715066213,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715071379,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Ok-To-Test+1"
        },
        {
            "timestamp": 1715071602,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/83912/ : FAILURE"
        },
        {
            "timestamp": 1715071654,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1715071888,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715071913,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715072104,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 10:\n\n(1 comment)"
        },
        {
            "timestamp": 1715107184,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10: Ok-To-Test+1"
        },
        {
            "timestamp": 1715107420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/83942/ : FAILURE"
        },
        {
            "timestamp": 1715134024,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1715362648,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715362684,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715363151,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 11:\n\n(1 comment)"
        },
        {
            "timestamp": 1715370772,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1715370820,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715391606,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 12: Ok-To-Test+1"
        },
        {
            "timestamp": 1715391672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84204/ : FAILURE"
        },
        {
            "timestamp": 1715407557,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715407573,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715467064,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 13: Ok-To-Test+1"
        },
        {
            "timestamp": 1715467134,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84218/ : FAILURE"
        },
        {
            "timestamp": 1715493515,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715493564,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715638810,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Ok-To-Test+1"
        },
        {
            "timestamp": 1715638876,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84339/ : FAILURE"
        },
        {
            "timestamp": 1715650265,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1715676823,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715676859,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715676935,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 14:\n\n(1 comment)"
        },
        {
            "timestamp": 1715685527,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 15: Ok-To-Test+1"
        },
        {
            "timestamp": 1715685778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84372/ : SUCCESS"
        },
        {
            "timestamp": 1715738714,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 15:\n\n(2 comments)"
        },
        {
            "timestamp": 1715752454,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715752494,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715752521,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 15:\n\n(2 comments)"
        },
        {
            "timestamp": 1715758305,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 16: Ok-To-Test+1"
        },
        {
            "timestamp": 1715758557,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84401/ : SUCCESS"
        },
        {
            "timestamp": 1715820238,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 16: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1715820413,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1715855939,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1715905549,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1715931254,
            "reviewer": {
                "name": "Gokul Sanker V G",
                "email": "gokul.sanker.v.g@intel.com",
                "username": "gokulsvg"
            },
            "message": "Patch Set 16:\n\n(5 comments)"
        },
        {
            "timestamp": 1715940133,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Ok-To-Test+1 (copy condition: \"changekind:NO_CHANGE\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715940151,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1715940411,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 17:\n\n(6 comments)"
        },
        {
            "timestamp": 1715941297,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1715941321,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1716166184,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 18: Code-Review-1\n\n(6 comments)"
        },
        {
            "timestamp": 1716196093,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 19.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n"
        },
        {
            "timestamp": 1716196118,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1716196569,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 19:\n\n(3 comments)"
        },
        {
            "timestamp": 1716203009,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1716218577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716218577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1716218825,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84651/ : SUCCESS"
        },
        {
            "timestamp": 1716256529,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 19: Code-Review-1\n\n(10 comments)"
        },
        {
            "timestamp": 1716297232,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716297275,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716297275,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1716297634,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84723/ : SUCCESS"
        },
        {
            "timestamp": 1716297874,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 19:\n\n(8 comments)"
        },
        {
            "timestamp": 1716343040,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1716399166,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 21.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716399203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716399203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1716399450,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84756/ : SUCCESS"
        },
        {
            "timestamp": 1716399669,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Patch Set 21:\n\n(2 comments)"
        },
        {
            "timestamp": 1716478451,
            "reviewer": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "message": "Uploaded patch set 22.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716478492,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716478492,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1716478740,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84817/ : SUCCESS"
        },
        {
            "timestamp": 1716511591,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 22: Code-Review+2\n\n(4 comments)"
        },
        {
            "timestamp": 1716511611,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "67851278c6039c105537ba0aef858601699a63e0",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/10/71210/1",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714550164,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "f512f0768dad4674c9cf96612b17618159e4ba59",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/10/71210/2",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714551513,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please reference the spec ID and name, its version, and the relevant section used to define the message type in the commit message?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, thanks for the patch. Before we go too much further I do have to ask that you be party to an OpenBMC CLA. If you work for a company that already has a CLA registered, then talk to the CLA manager to get yourself added to your company's CI group. You may also organise an individual CLA if you wish.\n\nMore information is available here:\n\nhttps://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#starting-out\n\nBeyond that, can you please add an entry to `CHANGELOG.md`?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Thanks, I somehow missed the CLA section, I've just send a signed individual copy.\n\nAlso, I added the commit to the changelog."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 48,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "shouldn't the MIN_RESP_BYTES be 5? \nAccording to spec- https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.2.0.pdf?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 48,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "This was something I wasn't sure of. It seems like in other commands with similar optional data (like `PLDM_GET_STATE_SENSOR_READINGS_MIN_RESP_BYTES`) the min size is without the optional data so I went with that approach."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 48,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yes, I prefer we use 2 for the minimum size, despite the spec suggesting that a compositeEffectorCount value of 0 is not valid. Using 2 aligns with the use of a flexible array, though maybe we want to consider some way of making the maths for allocation a bit more ergonomic. We can do that later though."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 859,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "state_field_for_get_state_effecter ?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 859,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 863,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I realise the other structs are marked `__attribute__((packed))`, but going forward this is not desired. Please remove the attribute."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 863,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Not sure if strictly needed but I added a `#define` of the size just to make sure it's still consistent instead of using `sizeof`."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 863,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Perfect, thanks."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1003,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I understand that other structs try to implement flexible arrays this way, but ultimately it leads to undefined behaviour in both C and C++.\n\nRather than add more instances, can you please instead use:\n\n```c\nstruct pldm_get_state_effecter_states_resp {\n    uint8_t completion_code;\n    uint8_t comp_effecter_count;\n#ifndef __cplusplus\n    get_effecter_state_field field[]\n#endif\n};\n\nget_effecter_state_field *pldm_get_effecter_states_resp_field(struct pldm_get_effecter_states_resp *resp);\n```\n\nand then in `src/platform.c`:\n\n```c\nget_effecter_state_field *pldm_get_effecter_states_resp_field(struct pldm_get_effecter_states_resp *resp)\n{\n    return resp->field;\n}\n```\n\nThis way `sizeof(struct pldm_get_state_effecter_states_resp)` yields the expected value (2 in this case), we avoid defining the flexible array for C++ (where they are not specified), and we correctly define the flexible array for C (where the concept is specified, see N1570 (C11 draft specification) 6.7.2.1 paragraph 18). The helper function enables access to the flexible array member from C++ (by way of being implemented in C)."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1003,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1004,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Also drop the packed attribute here."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1004,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1640,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As above, please drop the packed attribute."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1640,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1647,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "is it not \"out\" parameter alone?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1647,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "This was based on `decode_get_state_sensor_readings_resp` which has the same parameter. I'm not too sure why it's declared as \"in\"."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1647,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Let's not get hung up on the unknown and just declare it as out."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1647,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/platform.c",
                    "line": 2433,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "New APIs must be marked `LIBPLDM_API_TESTING` in the patch introducing them. This allows us to ship the API but not yet promise that we won't break it in the future if it's deemed to need fixing.\n\nConverting it to `LIBPLDM_API_STABLE` must be done in a follow-up patch, that also links to at least on use of the API in another project (usually openbmc/pldm)."
                },
                {
                    "file": "src/platform.c",
                    "line": 2433,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "I assume `LIBPLDM_API_STABLE` is a typo and you meant `LIBPLDM_ABI_STABLE`, if so, done.\n\nI do a have a patch ready for openbmc/pldm pldmtool that can be uploaded as well."
                },
                {
                    "file": "src/platform.c",
                    "line": 2433,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I assume LIBPLDM_API_STABLE is a typo and you meant LIBPLDM_ABI_STABLE, if so, done.\n\nSorry, yes, typo."
                },
                {
                    "file": "src/platform.c",
                    "line": 2455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please use the `msgbuf` APIs instead, as you've done below. That way there's no question about safety with respect to memory and endianness concerns."
                },
                {
                    "file": "src/platform.c",
                    "line": 2455,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "I didn't see an exact example of using `msgbuf` in an encode request function so let me know if I've fixed it correctly."
                },
                {
                    "file": "src/platform.c",
                    "line": 2455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "src/platform.c",
                    "line": 2460,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Needs to be `LIBPLDM_API_TESTING` as noted above."
                },
                {
                    "file": "src/platform.c",
                    "line": 2460,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 65,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 77,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 268,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "d11b24ec68c8f0fefdcf937ffc844fb7c8357e03",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/10/71210/3",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714653946,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, thanks for the rework. I have a few follow-up comments."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 94,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please change this to \"Wire-format substructure sizes\" to make it clear?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 94,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/platform.c",
                    "line": 2458,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The parentheses here feel unnecessary."
                },
                {
                    "file": "src/platform.c",
                    "line": 2458,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/platform.c",
                    "line": 2465,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We need this value passed through by the caller, otherwise the operation is not safe. Why the payload length isn't described in `struct pldm_msg` is a mystery to me right now."
                },
                {
                    "file": "src/platform.c",
                    "line": 2465,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/platform.c",
                    "line": 2472,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we use `pldm_msgbuf_destroy_consumed()` here?"
                },
                {
                    "file": "src/platform.c",
                    "line": 2472,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/platform.c",
                    "line": 2519,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please rebase on the tip of the main branch? Yesterday I merged [msgbuf: Enable pldm_msgbuf_extract() into packed members](https://gerrit.openbmc.org/c/openbmc/libpldm/+/71064) and it changes the behaviour of the `pldm_msgbuf_extract()` macro (you now need to pass the lvalue rather than a pointer)."
                },
                {
                    "file": "src/platform.c",
                    "line": 2519,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done, also switched to `extract_p` in previous calls."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 72,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 294,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "6a4c611cb9e97e4c84518a8b55d7fe76377b82aa",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/4",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714892981,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 296,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "31c693035a1a9b8910feff52ada95fbca7329f13",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/5",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714893218,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 296,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "ef3c054c64403dd06f7f8042f8b0befe20cd7cbb",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/6",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714917469,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, I only have one small comment on the argument ordering. Beyond that, we just need the CLA to be sorted. Thanks for iterating on the patch."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1996,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is a bit of a nit, but in the spirit of keep-things-that-are-together-together, and the observation that `payload_length` refers to the buffer contained by `struct pldm_msg`, I'd prefer we order `payload_length` after `msg`, so:\n\n```c\nint encode_get_state_effecter_states_req(uint8_t instance_id,\n                                         uint16_t effecter_id,\n                                         struct pldm_msg *msg,\n                                         size_t payload_length);\n```"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1996,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 296,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "b73ae8204c68433179fb840fd32d343253452788",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/7",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1714978661,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Alright, just waiting for the CLA stuff to be sorted. I'm going to allow this to run through CI so we can deal with any fallout there in the mean time."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I've followed up on your CLA submission here:\n\nhttps://discord.com/channels/775381525260664832/776461691470610476/1237194364342767716"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This blog post might help when sorting out the formatting failure:\n\nhttps://amboar.github.io/notes/2023/05/03/fixing-formatting-CI-failures-in-openbmc.html"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 111,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 92,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 296,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "0772f5e4f49246155a722bc3d34ad2e46ad361ce",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/8",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715065177,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/platform.c",
                    "line": 2524,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Mark this one as `LIBPLDM_ABI_TESTING` as well \ud83d\ude0a"
                },
                {
                    "file": "src/platform.c",
                    "line": 2524,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done, thanks for catching that!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 93,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "44866fa377ae1e57644f1f8e211a674e61b38c9a",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/9",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715066166,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "One minor cleanup from CI:\n\n```\ndiff --git a/src/platform.c b/src/platform.c\nindex 37fd90f..009acbe 100644\n--- a/src/platform.c\n+++ b/src/platform.c\n@@ -2573,7 +2573,8 @@ int decode_get_state_effecter_states_resp(const struct pldm_msg *msg,\n {\n \tstruct pldm_msgbuf _buf;\n \tstruct pldm_msgbuf *buf = &_buf;\n-\tint rc, i;\n+\tint rc;\n+\tint i;\n \n \tif (msg == NULL || completion_code == NULL ||\n \t    composite_effecter_count == NULL || field == NULL) {\n```"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done, do we maybe prefer to declare it inside the for statement? I see both styles here so I went with the older style just in case."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 94,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 303,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "4a7f410224b3d04cee46bd6d7f7ca8600abd7b0b",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/10",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715071888,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, CI picked up some undefined behaviour in the test cases. I've left a comment inline with some suggestions."
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "line": 4876,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So this yields a UBSAN error (see https://jenkins.openbmc.org/job/ci-repository/83942/console):\n\n```\nstderr:\n../tests/libpldm_platform_test.cpp:4876:5: runtime error: member access within misaligned address 0x502000002c53 for type 'struct pldm_get_state_effecter_states_req', which requires 2 byte alignment\n0x502000002c53: note: pointer points here\n 00  80 02 3a 01 ab 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00\n              ^ \n```\n\nThis is because the required alignment of `struct pldm_get_state_effecter_states_req` is not met by the offset of `request->payload` held in `std::vector<uint8_t> requestMsg`. Essentially, the `reinterpret_cast<>` used to assign to `req` on lines 4871-4873 is invalid.\n\nThat (among other issues) comes about because we no-longer declare the `struct pldm_get_state_effecter_states_req` as packed, and so this approach to implementing the tests isn't valid any more.\n\nPerhaps a better strategy is to first exercise the decode path by packing the bytes into a vector, either manually or using the `msgbuf` APIs, and using `EXPECT_*()` calls to demonstrate the decoding is successful. As a concrete example, see:\n\nhttps://gerrit.openbmc.org/c/openbmc/libpldm/+/67663/11/tests/libpldm_platform_test.cpp\n\nFrom there you can validate the encode function by round-tripping your values through an encode/decode cycle, and validating the decode yields expected values.\n\nConsider these casting concerns in the test cases below as well."
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "line": 4876,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "I was worried it might happen. I did some refactoring for the unit tests and added decode request and encode response. I ended up testing the encode before the decode with the manual array approach, I think it should be good enough."
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "line": 4876,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 75,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 115,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 95,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "d875e1443388dadd15fd5bf1d24fcabac2996beb",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/11",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715362648,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 169,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 435,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "5d5a990f23523b2b0c5118d9ad1dbcad3c374e0a",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/12",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715370772,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 438,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "40d35687bb579ad0948931a37dcd8a05d21fd928",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/13",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715407557,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 141,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 437,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "860de8af79f09cd8dd6e72a4663f015ca782ee34",
            "parents": [
                "ea435c9fdafbae65a43e2648c64806fee235ac3d"
            ],
            "ref": "refs/changes/10/71210/14",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715493515,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, we have some documentation covering running the CI container locally if that helps with testing:\n\nhttps://github.com/openbmc/docs/blob/master/testing/local-ci-build.md\n\nHowever, you can also smoke test it with something like `meson setup -Dabi-compliance-check=disabled build && meson test -C build`.\n\nHopefully one of those helps \ud83d\ude0a"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Thanks! I ran the CI locally, it should pass now."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 433,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "112a27665e70b2718e28e4d858fd5c5d130f5852",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/15",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715676823,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "line": 4866,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hate to point this out, but can we put the missing `e` in `Requst` here?"
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "line": 4866,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "No worries, done."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 433,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "dae45560cbb3547c4811b5620aafc0ff5f12090d",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/16",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715752454,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, I had a bit of a half-baked thought while giving this a (hopefully) final look. As it stands we're just waiting on the CLA business to be sorted out."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 871,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "__attribute__((packed)) is not required ?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 871,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Not anymore, please check out earlier comments."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1703,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I guess to go with the other API-related comment I left in the implementation, we could pass `struct pldm_get_state_effecter_states_resp *` here instead of the two individual arguments."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1703,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Hi Andrew, I actually it's a good and feasible idea, but I would also suggest, since we don't rely on `sizeof` anymore, that we change `get_effecter_state_field field[]` inside `struct pldm_get_state_effecter_states_resp` to `get_effecter_state_field *field` which should make allocating memory in C++ much easier without any additional API needs."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1703,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, I agree. Are you happy to rework that (marking this as unresolved so we don't lose it)?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1703,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1721,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As above."
                },
                {
                    "file": "src/platform.c",
                    "line": 2528,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "check resp for nullptr"
                },
                {
                    "file": "src/platform.c",
                    "line": 2528,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "This function is not longer needed so it was removed in the current patch."
                },
                {
                    "file": "src/platform.c",
                    "line": 2541,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "validate payload_Length ?"
                },
                {
                    "file": "src/platform.c",
                    "line": 2541,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "I believe that the `msgbuf` API should handle payload_length validation."
                },
                {
                    "file": "src/platform.c",
                    "line": 2541,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yep."
                },
                {
                    "file": "src/platform.c",
                    "line": 2597,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I do wonder whether it would be more effective to define the API like:\n\n```\nint decode_get_state_effecter_states_resp(const struct pldm_msg *msg,\n    size_t payload_length,\n    uint8_t *completion_code,\n    uint8_t *composite_effecter_count,\n    struct variable_field *field)\n```\n\nand then add a second API to decode from the `struct variable_field *field` out-parameter into an array of `get_effecter_state_field` objects. The split allows the caller to allocate exactly the memory required relative to `composite_effecter_count`.\n\nI'm marking this comment as resolved because maybe we answer the question by gaining experience using the API in anger, and as its `LIBPLDM_ABI_TESTING` we can come back and fix it if needed. However, I'm interested in your thoughts."
                },
                {
                    "file": "src/platform.c",
                    "line": 2657,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "add check for filed also"
                },
                {
                    "file": "src/platform.c",
                    "line": 2657,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Reworked in the current patch"
                },
                {
                    "file": "src/platform.c",
                    "line": 2661,
                    "reviewer": {
                        "name": "Gokul Sanker V G",
                        "email": "gokul.sanker.v.g@intel.com",
                        "username": "gokulsvg"
                    },
                    "message": "nit :- avoid using magic numbers"
                },
                {
                    "file": "src/platform.c",
                    "line": 2661,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 137,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 171,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 433,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "00644b0aa024e866fdcfffe0b8df124facfb5d14",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/17",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715940133,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 447,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "89a450e18302c9699b12c48465b0878f32c70fd9",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/18",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1715941297,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, I have some minor comments based on your latest rework. Sorry this is dragging out a bit (though, we're also still waiting on LF to deal with your CLA, so I guess while we're idling we may as well try to polish things...)"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 109,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Do we expect library users to need these? If not, I'd prefer we define them in the implementation rather than the public header."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 109,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Partially, I use the max but not the min value in openbmc/pldm, it felt odd separating between the two so I ended up with both on the public header."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 109,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1702,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Bit of a mouthful, I'd be fine if we just called this `resp` or something, but it doesn't matter too much."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1721,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As above."
                },
                {
                    "file": "src/platform.c",
                    "line": 2597,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`resp` would be a lot more succinct here \ud83d\ude0a I'm leaving this comment as unresolved as I think I prefer my proposal from a readability perspective. It should be fixed in `encode_get_state_effecter_states_resp()` as well."
                },
                {
                    "file": "src/platform.c",
                    "line": 2597,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 447,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "370030015e6df8057d7f40f1eb08750a389eb48e",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/19",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1716196093,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Hi Andrew, I have no issue polishing it as much as possible, it's better than revising it later in my opinion. \ud83d\ude0a"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, we've got the CLA stuff sorted, so now it's just down to the reviews. I've had some more thoughts on the API. I've also made some minor whitespace/wrapping comments."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1027,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "How does the caller know how much memory to allocate for the pointer provided by `field` prior to receiving the message?\n\nI think it's right for this member to be contained in the structure, but I think we need to change how it is dealt with by the `decode_get_state_effecter_states_resp()` API. See comment below.\n\nAs an alternative to changing the API, we could instead re-specify this member as:\n\n```\nget_effecter_state_field field[PLDM_GET_EFFECTER_STATE_FIELD_COUNT_MAX];\n```\n\nThis has the downside of potentially wasting a small amount of memory, but perhaps that's a small price to pay in the trade-off against dynamic allocation and splitting the API."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1027,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "What I currently do as the caller to decode, is indeed allocating the maximum possible according to `PLDM_GET_EFFECTER_STATE_FIELD_COUNT_MAX`. If we have keep it as a pointer a caller to encode could allocate less than the max if needed."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1027,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1690,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please rename this to `resp` to align with the implementation?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1690,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1696,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I notice there's a mix of tabs and spaces used for indentation here. Given it's a doxygen comment we should probably only have spaces (to avoid the tab-after-space problem). It would also be nice if the wrapping was a bit more sensible."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1696,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1699,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Regarding my comment on line 1027, if we don't specify the `fields` member as an array, I think we need to split the decoding into two steps:\n\n1. Decode the fixed-size portion of the message, which allows us to obtain the value for `comp_effecter_count`\n2. Decode the variable sized portion of the message, based on the memory allocated proportional to `comp_effecter_count`.\n\nWith that in mind, perhaps:\n\n```\nint decode_get_state_effecter_states_resp(\n    const struct pldm_msg *msg,\n    size_t payload_length,\n    struct pldm_get_state_effecter_states_resp *resp,\n    struct variable_field *fields);\n\nint decode_state_effecter_state_fields(\n    const struct variable_field *fields,\n    const struct pldm_get_state_effecter_states_resp *resp);\n```\n\nThe split allows the caller to sequence things like in the following sketch (error handling required):\n\n```\nstruct pldm_get_state_effecter_states_resp *resp;\nstruct variable_field fields;\nint rc;\n\nresp = malloc(sizeof(*resp));\ndecode_get_state_effecter_states_resp(msg, length, resp, &fields);\nresp->fields = calloc(resp->comp_effecter_count, sizeof(*resp->fields));\ndecode_state_effecter_state_fields(&fields, resp);\n```\n\nThis way the caller is in control of the allocations (which is what I prefer for something that's intended as an embedded library)."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1699,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "We can maybe take inspiration from how mctp system calls are behaving with a double pass of `msg` to `decode_get_state_effecter_states_resp` the first call (which indicated by setting resp->fields to null) will populate the resp without the state fields, the caller will then allocate the required memory and then call decode again with the same msg.\n\nSomething like:\n```\nstruct pldm_get_state_effecter_states_resp resp = {0}; // to make sure fields is null\n\ndecode_get_state_effecter_states_resp(msg, length, &resp);\nresp.fields = calloc(resp.comp_effecter_count, sizeof(*(resp.fields)));\ndecode_get_state_effecter_states_resp(msg, ,length, &resp);\n```\n\nIf it's a bit too complex, we can still just declare fields as an array with the max size, which will make it easier for the caller."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1699,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, the double call idea is kinda neat, but I have reservations about its generality, and the performance / fragility trade-offs with msgbuf.\n\nOn the second concern, because we're not maintaining internal state between calls we either need to reparse the message buffer from the start to again locate the offset of the state effecter states, or hard-code initialising `struct pldm_msgbuf` with the fixed offset of the state effecter states if `fields != NULL`. Both feel a little off to me; if we're going to have two invocations either side of a call to `calloc()`, I think I prefer my suggestion of explicitly passing an instance of `struct variable_field` between the calls.\n\nI guess a third option is to do the double-call approach and pass a NULL value for the `struct variable_field` parameter the first time? Similar to how e.g. `strtok_r()` uses an out-parameter for holding state. Not sure whether `strtok_r()` is a good design reference point though.\n\nOn the generality front, if we have nested variable-length structures the allocation picture could get a bit ugly, mainly from the perspective of *what* the caller needs to allocate, where they assign the pointer in the structure, and how the need to allocate gets signaled. That's not really a concern for this specific API, but if we're solving this problem and trying to create a consistent API design point across the library, then I feel it needs some thought.\n\nMaybe it's simpler to punt on it all for now and do the fixed-length array thing \ud83d\ude04"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1699,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "I think we can settle for the fixed-length array, it is simpler for both us and the users.\n\nThis will also solve the issue you raised on an earlier comment, where we can't be sure whether the user supplied enough memory."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1699,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1702,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`resp` again here so it lines up with the documentation and implementation."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1702,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1707,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Rename to `resp` to align with the implementation."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1707,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1713,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Mixed tabs/spaces and wrapping here too."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1713,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1721,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`resp` again here, as above."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 1721,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/platform.c",
                    "line": 2629,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The problem I have here is it's not communicated anywhere that we've been supplied enough memory to accomodate this."
                },
                {
                    "file": "src/platform.c",
                    "line": 2629,
                    "reviewer": {
                        "name": "Tal Yacobi",
                        "email": "talycb8@gmail.com",
                        "username": "tal-yac"
                    },
                    "message": "Should be solved with the fixed-array approach."
                },
                {
                    "file": "src/platform.c",
                    "line": 2629,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 104,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 437,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "2ac60f9315f405aa837847e9c888ef7f4b2f9b59",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/20",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1716297232,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 147,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 432,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "ea2915b67554b4a2fdba5df94d000c593f030cb7",
            "parents": [
                "458475a912c81f46a292a63753015ce6081061cc"
            ],
            "ref": "refs/changes/10/71210/21",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1716399166,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 150,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 435,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "a6fa5559a934a887f436a1011de8ba5554221b60",
            "parents": [
                "c166dd5f487b46c709e7fba449bc48f53f857f62"
            ],
            "ref": "refs/changes/10/71210/22",
            "uploader": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "createdOn": 1716478451,
            "author": {
                "name": "Tal Yacobi",
                "email": "talycb8@gmail.com",
                "username": "tal-yac"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Tal, I don't have any further concerns. Thanks again for iterating on it!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 99,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_platform_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "src/platform.c",
                    "type": "MODIFIED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 447,
            "sizeDeletions": 0
        }
    ]
}