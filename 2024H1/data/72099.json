{
    "project": "openbmc/libpldm",
    "branch": "main",
    "id": "I5fc3989c4c4595546a70c01eb2b6dadcf8c14303",
    "number": 72099,
    "subject": "pdr: Add related decode_entity_auxiliary_names_pdr*() APIs",
    "owner": {
        "name": "Thu Nguyen",
        "email": "thu@os.amperecomputing.com",
        "username": "ThuBaNguyen"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/72099",
    "hashtags": [],
    "createdOn": 1718614578,
    "lastUpdated": 1721011649,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1718614578,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1718614623,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718614623,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1718614673,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86195/ : FAILURE"
        },
        {
            "timestamp": 1718614752,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718614783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718614783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1718614953,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1718615035,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86198/ : SUCCESS"
        },
        {
            "timestamp": 1718669118,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2: Code-Review-1\n\n(5 comments)"
        },
        {
            "timestamp": 1718682757,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1718682781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1718682781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1718683034,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1718683085,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86323/ : SUCCESS"
        },
        {
            "timestamp": 1718775718,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1718793448,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1718842263,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1719066725,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719066740,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719066740,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1719066957,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86597/ : FAILURE"
        },
        {
            "timestamp": 1719067469,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719067491,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719067491,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1719067707,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/86599/ : FAILURE"
        },
        {
            "timestamp": 1719068055,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1719068081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1719068081,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1719068469,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/86602/ : SUCCESS"
        },
        {
            "timestamp": 1719069083,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 6:\n\n(4 comments)"
        },
        {
            "timestamp": 1719069385,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1719200842,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6: Code-Review-1\n\n(10 comments)"
        },
        {
            "timestamp": 1720012169,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720012182,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720012183,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1720012463,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/87249/ : FAILURE"
        },
        {
            "timestamp": 1720026598,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1720060429,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1720160692,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1720182346,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720182392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720182392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1720182408,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 8:\n\n(14 comments)"
        },
        {
            "timestamp": 1720182463,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/87408/ : FAILURE"
        },
        {
            "timestamp": 1720427464,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 9.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720427504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720427504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1720427786,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87451/ : SUCCESS"
        },
        {
            "timestamp": 1720474710,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1720607043,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720607077,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720607077,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1720607434,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 10:\n\n(7 comments)"
        },
        {
            "timestamp": 1720607460,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87637/ : SUCCESS"
        },
        {
            "timestamp": 1720609062,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720609091,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720609091,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1720609215,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1720609356,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87640/ : SUCCESS"
        },
        {
            "timestamp": 1720676923,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 11: Code-Review-1\n\n(8 comments)"
        },
        {
            "timestamp": 1720684772,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 12: New patch set was added with same tree, parent tree, and commit message as Patch Set 11.\n\nCopied Votes:\n* Code-Review-1 (copy condition: \"**changekind:NO_CHANGE** OR **changekind:NO_CODE_CHANGE** OR **changekind:TRIVIAL_REBASE** OR is:MIN\")\n* Verified+1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1720684813,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720684813,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1720685243,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87734/ : SUCCESS"
        },
        {
            "timestamp": 1720798004,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1720798036,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720798036,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1720798087,
            "reviewer": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "message": "Patch Set 13:\n\n(6 comments)"
        },
        {
            "timestamp": 1720798494,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87866/ : SUCCESS"
        },
        {
            "timestamp": 1721009615,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1721009648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1721009648,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1721010064,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87929/ : SUCCESS"
        },
        {
            "timestamp": 1721011090,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Code-Review+2\n\n(1 comment)"
        },
        {
            "timestamp": 1721011147,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Code-Review+2 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1721011181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1721011181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1721011484,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87936/ : SUCCESS"
        },
        {
            "timestamp": 1721011642,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 15: Code-Review+2"
        },
        {
            "timestamp": 1721011649,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "fd613860d8ffe4bfc414079f8fae57ac8ace43b3",
            "parents": [
                "d9b70ba743403b4c56ac8bf4817b02520d14cc8b"
            ],
            "ref": "refs/changes/99/72099/1",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1718614578,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "23a0b3455af61fcf63d5dcd8715792096a16e24b",
            "parents": [
                "d9b70ba743403b4c56ac8bf4817b02520d14cc8b"
            ],
            "ref": "refs/changes/99/72099/2",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1718614752,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If the implementation of the PDR parser isn't yet in libpldm then I prefer we don't add structure definitions to the libpldm public API. The patch doesn't currently use the struct you're adding in any functions exposed in the public API."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Because the number of entity name is different between the PDRs and the size of name and language tags also be different. As the current implementation of pldm/libpldm, those parsers are implemented in `pldmd`, no parser API implement in libpldm.\nI knew that the PDRs parser API should be implemented in libpldm. I also tried to apply that rule for others PDRs but in this case I'm not sure how to follow that.\nTo support parsing language tag and name we also need the strASCII, strUTF-16BE parser."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Thu, I have a few comments inline."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 110,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "In Table `Table 2 \u2013 Parts of the Entity Identification Information format` of DSP 0248, `If this value is 0x0000, the containing entity is considered to be the overall system`. That why the patch set uses this name."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 110,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you perhaps add that quote in a comment above the macro definition (along with the specific version of DSP0248 containing the quoted text)?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 110,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 549,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Are you trying to do a flexible array here? Because they don't work this way, and they aren't specified by C++. This issue is called out in the change checklist:\n\nhttps://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain=1#L74-L87\n\nThe definition will need to change if we choose to go ahead with the patch."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 549,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I updated the code, can you check?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 549,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 550,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The changes checklist requests that we don't add further packed structs:\n\nhttps://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain=1#L71-L72\n\nWhat's the justification for doing so here?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 550,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I updated the code, can you check?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 550,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "2b764d5aa60e18b7aed871c8e26a168c1022be45",
            "parents": [
                "d9b70ba743403b4c56ac8bf4817b02520d14cc8b"
            ],
            "ref": "refs/changes/99/72099/3",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1718682757,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/libpldm/platform.h",
                    "line": 114,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "A couple of considerations here:\n\n1. Perhaps we should namespace it by the spec, so `PLDM_PLATFORM_...`\n2. If it's part of the entity identification information, perhaps we should include that too.\n\nWhat do you think of `PLDM_PLATFORM_ENTITY_ID_SYSTEM_CONTAINER_ID`?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 114,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "CONTAINER_ID is a part of `Entity Identification Information` but not `Entity Identification` So I think if you want to include `ENTITY_ID` then we should use `ENTITY_ID_INFO`.\nBecause look at `Figure 5 \u2013 Entity Identification Information format`, `entity Id` and `Container Id` are parts `Entity Identification Information`. Using only `ENTITY_ID` then we don't SYSTEM is for `ENTITY_ID` or `CONTAINER_ID`.\n\nAs my opinion, `PLDM_PLATFORM_ENTITY_SYSTEM_CONTAINER_ID` can be one option too."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 114,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`PLDM_PLATFORM_ENTITY_SYSTEM_CONTAINER_ID` seems fine to me. It has enough information to orient users."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 114,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 556,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Ah, perhaps I should have been more precise. What I was trying to get at was:\n\n```\nstruct pldm_entity_auxiliary_names_pdr {\n    struct pldm_pdr_hdr hdr;\n    pldm_entity container;\n    uint8_t shared_name_count;\n#ifndef __cplusplus\n    uint8_t names[];\n#endif\n};\n\nuint8_t *pldm_entity_auxiliary_names_pdr_get_names(struct pldm_entity_auxiliary_names_pdr *pdr);\n```\n\nWhere the implementation of `pldm_entity_auxiliary_names_pdr_get_names()` in `src/dsp/platform.c` is:\n\n```\nuint8_t *pldm_entity_auxiliary_names_pdr_get_names(struct pldm_entity_auxiliary_names_pdr *pdr)\n{\n    return pdr->names;\n}\n```\n\nBut really `uint8_t` isn't right anyway.\n\nHowever, why can't we add the usual decoding functions for it? Given the nature of the structure I don't think what we have here is particularly helpful anyway.\n\nRoughly, this might instead look like:\n\n```\ntypedef char pldm_str_utf16be;\n\nstruct pldm_entity_auxiliary_name {\n    char *name_language_tag;\n    pldm_str_utf16be *entity_aux_name;\n};\n\nstruct pldm_entity_auxiliary_names_pdr {\n    struct pldm_pdr_hdr hdr;\n    pldm_entity container;\n    uint8_t shared_name_count;\n    uint8_t name_string_count;\n    struct pldm_entity_auxiliary_name *names;\n#ifndef __cplusplus\n    char auxiliary_name_data[];\n#endif\n};\n\nint decode_pldm_entity_auxiliary_names_pdr(struct pldm_msg *msg, size_t payload_length, struct pldm_entity_auxiliary_names_pdr *pdr, size_t pdr_length);\n```\n\nThen we can use this like:\n\n```\nstruct pldm_entity_auxiliary_names_pdr *pdr;\nsize_t pdr_length;\nint rc;\n\n// Add overflow check for addition\npdr_length = sizeof(*pdr) + payload_length;\npdr = malloc(pdr_length);\nif (!pdr) {\n    ...\n}\n\npdr->names = NULL;\nrc = decode_pldm_entity_auxiliary_names_pdr(msg, payload_length, pdr, pdr_length);\nif (rc < 0) {\n    ...\n}\n\npdr->names = calloc(aux_names_pdr->name_string_count, sizeof(*aux_names_pdr->names));\nif (!pdr->names) {\n    ...\n}\n\nrc = decode_pldm_entity_auxiliary_names_pdr(NULL, 0, pdr, pdr_length);\n...\n```\n\nThen in the implementation we:\n\n1. Copy all the string data out of the message into `auxiliary_name_data` (unfortunate, but allows us to discard the message storage) as part of the operations in the first call to `decode_pldm_entity_auxiliary_names_pdr()`\n2. Construct the index into the string data in the second call."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 556,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "> Ah, perhaps I should have been more precise. What I was trying to get at was:\n> \n> ```\n> struct pldm_entity_auxiliary_names_pdr {\n>     struct pldm_pdr_hdr hdr;\n>     pldm_entity container;\n>     uint8_t shared_name_count;\n> #ifndef __cplusplus\n>     uint8_t names[];\n> #endif\n> };\n> \n> uint8_t *pldm_entity_auxiliary_names_pdr_get_names(struct pldm_entity_auxiliary_names_pdr *pdr);\n> ```\n> \n> Where the implementation of `pldm_entity_auxiliary_names_pdr_get_names()` in `src/dsp/platform.c` is:\n> \n> ```\n> uint8_t *pldm_entity_auxiliary_names_pdr_get_names(struct pldm_entity_auxiliary_names_pdr *pdr)\n> {\n>     return pdr->names;\n> }\n> ```\n> \n> But really `uint8_t` isn't right anyway.\n> \n> However, why can't we add the usual decoding functions for it? Given the nature of the structure I don't think what we have here is particularly helpful anyway.\n> \n> Roughly, this might instead look like:\n> \n> ```\n> typedef char pldm_str_utf16be;\n> \n> struct pldm_entity_auxiliary_name {\n>     char *name_language_tag;\n>     pldm_str_utf16be *entity_aux_name;\n> };\n> \n> struct pldm_entity_auxiliary_names_pdr {\n>     struct pldm_pdr_hdr hdr;\n>     pldm_entity container;\n>     uint8_t shared_name_count;\n>     uint8_t name_string_count;\n>     struct pldm_entity_auxiliary_name *names;\n\n\nI don't get your idea in adding this field in here. Is it list of `struct pldm_entity_auxiliary_name`>?\n\n\n> #ifndef __cplusplus\n>     char auxiliary_name_data[];\n> #endif\n> };\n> \n> int decode_pldm_entity_auxiliary_names_pdr(struct pldm_msg *msg, size_t payload_length, struct pldm_entity_auxiliary_names_pdr *pdr, size_t pdr_length);\n> ```\n> \n> Then we can use this like:\n> \n> ```\n> struct pldm_entity_auxiliary_names_pdr *pdr;\n> size_t pdr_length;\n> int rc;\n> \n> // Add overflow check for addition\n> pdr_length = sizeof(*pdr) + payload_length;\n> pdr = malloc(pdr_length);\n> if (!pdr) {\n>     ...\n> }\n> \n> pdr->names = NULL;\n> rc = decode_pldm_entity_auxiliary_names_pdr(msg, payload_length, pdr, pdr_length);\n> if (rc < 0) {\n>     ...\n> }\n> \n> pdr->names = calloc(aux_names_pdr->name_string_count, sizeof(*aux_names_pdr->names));\n> if (!pdr->names) {\n>     ...\n> }\n> \n> rc = decode_pldm_entity_auxiliary_names_pdr(NULL, 0, pdr, pdr_length);\n> ...\n> ```\n\n\nThese code will be in `pldmd`, is this right?\n\n\n> \n> Then in the implementation we:\n> \n> 1. Copy all the string data out of the message into `auxiliary_name_data` (unfortunate, but allows us to discard the message storage) as part of the operations in the first call to `decode_pldm_entity_auxiliary_names_pdr()`\n\nThe decode_pldm_entity_auxiliary_names_pdr() will decode the response message to get hdr, container, shared_name_count, name_string_count and the pointer to the names data to auxiliary_name_data.\nIs this your idea?\n\n> 2. Construct the index into the string data in the second call.\n\nCan you give more detail about this line?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 556,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I don't get your idea in adding this field in here. Is it list of struct pldm_entity_auxiliary_name>?\n\nYes. The array of `struct pldm_entity_auxiliary_name` acts as an index into the blob of strings copied from the end of the message.\n\nThere's no reason for the C structure to be a direct reflection of the message type definition. It should have _at least_ the same information (not less), but because the job of libpldm is to provide encoding/decoding functions, we have the opportunity to make the C structures much more ergonomic than the message structure. The transformation between C structure and the packed message happens in the encoding/decoding functions.\n\n> These code will be in pldmd, is this right?\n\nRight. That was an example use of the API.\n\n> The decode_pldm_entity_auxiliary_names_pdr() will decode the response message to get hdr, container, shared_name_count, name_string_count and the pointer to the names data to auxiliary_name_data.\n> Is this your idea?\n\nRight. And in the suggestion I made there, it happens in two invocations. The first invocation decodes enough of the message to understand how many names are present. That gives us the information we need to allocate an appropriate amount of memory for the array of `struct pldm_entity_auxiliary_name`. The second invocation then constructs the index: it populates each of the elements in the array of `struct pldm_entity_auxiliary_name` with pointers into locations in `auxiliary_name_data`.\n\nPerhaps a more obvious thing to do is to create two separate functions, e.g:\n\n1. `decode_pldm_entity_auxiliary_names_pdr()`\n2. `decode_pldm_entity_auxiliary_names_pdr_index()`\n\nThat way we're not pulling funky tricks by changing the behaviour based on whether certain arguments to `decode_pldm_entity_auxiliary_names_pdr()` are `NULL`.\n\nWhat are your thoughts?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 556,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I updated the code. please check."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 556,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 37,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "aefb3162359d11c6ac9155e2161e2320ea20bc97",
            "parents": [
                "d9b70ba743403b4c56ac8bf4817b02520d14cc8b"
            ],
            "ref": "refs/changes/99/72099/4",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1719066725,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 44,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 225,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "b76f93013c34a2a0929a0f739a7bfa076e9c08af",
            "parents": [
                "15458ce5e7929e9777a1550396435c43fb176c2e"
            ],
            "ref": "refs/changes/99/72099/5",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1719067469,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 154,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 266,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "21bc4e1ddce858c5ae90476e110bff42b0e6dd08",
            "parents": [
                "16e979b59eda00afcbd14341a87d195cd7ba3e43"
            ],
            "ref": "refs/changes/99/72099/6",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1719068055,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Added other patch set to support `pdr: Add decode_auxiliary_names_data()`. This api will be used in this patch set to decode the auxiliary_name_data which is decode by `decode_entity_auxiliary_names_pdr_data`."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Thu, hopefully some of the replies help straighten out your concerns."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 575,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I added the API to decode the entity auxiliary names `decode_auxiliary_names_data` in  other patch set for future using.\nThe input of that API is pointer of auxiliary_name_data flexible char array. So I think we don't ned pldm_entity_auxiliary_name in this struct."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 575,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "That's missing the point. You need to consider how you *access* the strings. The intent was that this was a \"table of contents\" or an \"index\" into the string blob."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 575,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Agree."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 576,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "`#ifndef __cplusplus` is temporary comment out because when I run unit-test the build will failed.\n```\n../tests/dsp/platform.cpp: In member function \u2018virtual void decodeEntityAuxNamePdrData_GoodTest_Test::TestBody()\u2019:\n../tests/dsp/platform.cpp:5197:34: error: \u2018struct pldm_entity_auxiliary_names_pdr\u2019 has no member named \u2018auxiliary_name_data\u2019\n 5197 |         (const char*)decodedPdr->auxiliary_name_data, names_size,\n      |                                  ^~~~~~~~~~~~~~~~~~~\n../tests/dsp/platform.cpp: In member function \u2018virtual void decodeEntityAuxNamePdrData_BadTest_Test::TestBody()\u2019:\n../tests/dsp/platform.cpp:5285:34: error: \u2018struct pldm_entity_auxiliary_names_pdr\u2019 has no member named \u2018auxiliary_name_data\u2019\n 5285 |         (const char*)decodedPdr->auxiliary_name_data, names_size,\n```"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 576,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The point of this was that flexible arrays mustn't be exposed to C++ compilers because they're not defined by C++ the language.\n\nIf you need to access data held in a flexible array in C++ you need the C helper function I mentioned to you previously, that returns the pointer to the base of the array.\n\nPlease un-comment the `#ifndef __cplusplus` and replace any direct reference to `auxiliary_name_data` in C++ code with a call through the helper function to access the base pointer.\n\nHowever, if you add the `names` member above, there should be no reason to access `auxiliary_name_data` outside the implementation of the decoder/encoder for the names PDR."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 576,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "In the latest version of patch set, the API response the tags and aux_names in `struct pldm_entity_auxiliary_name *names`. Do you think we should remove `char auxiliary_name_data`?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 576,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Not if the pointers from the `pldm_msgbuf_span_string_*()` calls are pointing into the message buffer - the strings need to be copied out. That will also help with the alignment problem."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 576,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Sure, I agree that we will keep auxiliary_name_data."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 577,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "I don't understand why we use `char` type but not `uint8_t`. Both `char auxiliary_name_data[]` and `uint8_t auxiliary_name_data[]` is flexible array."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 577,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Because `char` is defined to safely alias all object types. `char` is distinct from `uint8_t` as whether `char` is signed or not is implementation-defined. Using `char` is unrelated to the flexible array, aside from the fact that it's by definition a single-byte quantity (... that safely aliases all other object types)."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 577,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "A thought I had here is we should declare `auxiliary_name_data` with `__attribute__((aligned(alignof(char16_t))))`, and then arrange the data so all the UTF16-BE strings are first (as this maintains their alignment requirements), and then we put all the ASCII strings last. That way we don't need to split the types and have to play funny games with allocation."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 577,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2379,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please, no more functions that do this. All new functions should return 0 on success or a negative errno value.\n\nSee: https://github.com/openbmc/libpldm/blob/main/docs/checklists/changes.md?plain=1#L108-L112"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2379,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2382,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`const struct variable_field`?"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2382,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "The code is changed the comment will be closed."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2751,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`pldm_msgbuf_init_errno()`."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2751,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2770,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why bounce through the stack object? Why not decode it straight into the provided object (`pdr_value->hdr`)?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2770,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2779,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Needs to be a negative errno. `-EBADMSG` is probably okay?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2779,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2783,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`pldm_msgbuf_span_remaining()`?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2783,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Should we use `pldm_msgbuf_extract_array_uint8()` which extract data from `buf` to `pdr_value->auxiliary_name_data` then we can `pldm_msgbuf_destroy_consumed` the `buf`. With `pldm_msgbuf_span_remaining()`, we have to keep `buf`.\n\nThe decode_pldm_entity_auxiliary_names_pdr_index() will response aux name pointer which point to the pdr_value->auxiliary_name_data. Which is allocated by the caller instead of the buff which allocated by the API.\n\nLet me know if I'm wrong."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2783,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 158,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 270,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "d63cff922092a446799c3ffc05e9b2652b36e4d4",
            "parents": [
                "647fa7e3367c036d54ec1e09f55193abf4724f33"
            ],
            "ref": "refs/changes/99/72099/7",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1720012169,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Do you have any idea to fix the unit-test error @Andrew?\n```\nstderr:\n../src/dsp/platform.c:2699:9: runtime error: load of misaligned address 0x506000004295 for type 'char16_t', which requires 2 byte alignment\n0x506000004295: note: pointer points here\n 03 65 6e 00 00 53 00  30 00 53 00 00 66 6e 00  00 53 00 31 00 00 67 6e  00 00 52 00 52 00 33 00  00\n```"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we address the other concerns first, and then look into this?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Sure."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2696,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This shouldn't be necessary. See the comments on the prior patches about the span APIs providing the buffer length."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2696,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2707,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "It's unclear to me whether these pointers are pointing into a buffer containing the received message, or somewhere else. If they're pointing into the message buffer then we mustn't use the pointers returned by the `pldm_msgbuf_span_string_*()` calls below, as that would either prevent the user from freeing the message buffer, or they will free it anyway and we're left with dangling pointers."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2707,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2748,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please avoid allocation inside the encode/decode APIs. This is why I was suggesting splitting the function in two. The allocation must be done by the caller.\n\nSee the discussion here:\n\nhttps://gerrit.openbmc.org/c/openbmc/libpldm/+/72099/comment/d7d1c516_d21b1874/"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2748,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 143,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 79,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 294,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "2eadb6758edf7f451fe30c974a318643d23e0cdf",
            "parents": [
                "bb973e8fec424c1cd4fd72e6c12bd817742ed14f"
            ],
            "ref": "refs/changes/99/72099/8",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1720182346,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 163,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 356,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "d4029948ed1e24ece6b5fb5bb24e2f8259ecd43c",
            "parents": [
                "ef12a0c0a9f5feecb19ee87d45a0c8b04c08b0c7"
            ],
            "ref": "refs/changes/99/72099/9",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1720427464,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/dsp/platform.c",
                    "line": 2780,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "will the change of dst affect on auxiliary_name_data?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2780,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Yes. The `src` buff will point to with aux names data in `names` pointers. The `dst` will point to auxiliary_name_data.\nCopy data from `src` do `dst` will change auxiliary_name_data."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2799,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Do we need to destroy buf?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2799,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated code to destroy `buf` and `dst`."
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2849,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Should we move definition of variable to start of function?"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2849,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "No, I think it's better that the scope is constrained to where it's needed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 174,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 168,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 441,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "15cdd35f2db03480570f69d19fab0e6cd5f8f911",
            "parents": [
                "15860480b58ec7f96cc3e3cc8b14a73ac664fefd"
            ],
            "ref": "refs/changes/99/72099/10",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1720607043,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Updated commit message."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 174,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 168,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 443,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "c136696cfa332ef6139a277e9277ec34f44864e5",
            "parents": [
                "15860480b58ec7f96cc3e3cc8b14a73ac664fefd"
            ],
            "ref": "refs/changes/99/72099/11",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1720609062,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Thu, only a few comments that should be straight-forward to rectify. Hopefully we've broken the back of this thing \ud83d\ude0a"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2376,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think it would be quite useful to put the usage example in the documentation here."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2376,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2379,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I prefer we drop the `_data()` here, I don't think it's necessary."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2379,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2380,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Any reason why this must be `const void *` and not `const struct pldm_msg *`? Then `data_length` becomes `payload_length` consistent with the other APIs (... which is still not great, but it's better than being inconsistent)."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2380,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Actually, I follow the below API format:\n```\n/** @brief Decode Numeric Sensor Pdr data\n *\n *  @param[in] pdr_data - pdr data for numeric sensor\n *  @param[in] pdr_data_length - Length of pdr data\n *  @param[out] pdr_value - unpacked numeric sensor PDR struct\n */\nint decode_numeric_sensor_pdr_data(\n    const void *pdr_data, size_t pdr_data_length,\n    struct pldm_numeric_sensor_value_pdr *pdr_value);\n```\nTo create new API to make the PDR decode APIs consistence."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2380,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, yeah, I guess we go with that for now. It feels like something that needs more thought though, as just passing void pointers around is a pretty poor UX."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2385,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please add e.g. `@pre` descriptions here to describe the pre-conditions that must be met when calling this function? You mention in the commit message the expectations we have on the `names` array for instance - we need to make sure that's clearly documented here."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 2385,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2714,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Busted whitespace (was that me?)"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2714,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2809,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "ah, so we can cheat a bit here to make it less verbose. I reckon:\n\n```\nif ((rc = pldm_msgbuf_destroy(dst)) ||\n    (rc = pldm_msgbuf_destroy(src)) ||\n    (rc = pldm_msgbuf_destroy(buf))) {\n    return rc;\n}\n\nreturn 0;\n```"
                },
                {
                    "file": "src/dsp/platform.c",
                    "line": 2809,
                    "reviewer": {
                        "name": "Thu Nguyen",
                        "email": "thu@os.amperecomputing.com",
                        "username": "ThuBaNguyen"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 456,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "29c45af886aa90c1d9be26c7c8ccf03906480d3d",
            "parents": [
                "b899c49837d9bfabaede1c66ef4062be721db7e5"
            ],
            "ref": "refs/changes/99/72099/12",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1720684772,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 178,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 456,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "6c6fcf1075bf6bde4c07919483511afb3523b3f4",
            "parents": [
                "63380d1dddf41f3ad13c362a968eeb0511e8820c"
            ],
            "ref": "refs/changes/99/72099/13",
            "uploader": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "createdOn": 1720798004,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 174,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 480,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "82042cf36677366dd7bd6235e87b70582924c7ce",
            "parents": [
                "a65fdde2b798d63b19a48137ef2f29fe25ff3284"
            ],
            "ref": "refs/changes/99/72099/14",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1721009615,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 174,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 477,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "dacfa354fa4afcbe84532ad66d0d8e22839b3370",
            "parents": [
                "56f73f9573340dbeefe8ed9bffa32ad9f373ea59"
            ],
            "ref": "refs/changes/99/72099/15",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1721011147,
            "author": {
                "name": "Thu Nguyen",
                "email": "thu@os.amperecomputing.com",
                "username": "ThuBaNguyen"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "tests/dsp/platform.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "CHANGELOG.md",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/dsp/platform.c",
                    "type": "MODIFIED",
                    "insertions": 174,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 477,
            "sizeDeletions": 0
        }
    ]
}