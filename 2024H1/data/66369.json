{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I3055a77a6302165a1ca72b4213633ebe5d4a9313",
    "number": 66369,
    "subject": "entity-manager hw detect via device-tree",
    "owner": {
        "name": "Christopher Sides",
        "email": "christopher.sides@hpe.com",
        "username": "csides-hpe"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/docs/+/66369",
    "hashtags": [],
    "createdOn": 1694037529,
    "lastUpdated": 1723588996,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1694037529,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1694037593,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694037593,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1694037616,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/73814/ : FAILURE"
        },
        {
            "timestamp": 1694039265,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1694040275,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1694102151,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1694102168,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1694547230,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1694547266,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1694720539,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694720587,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694720588,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1694720615,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/74143/ : FAILURE"
        },
        {
            "timestamp": 1694720941,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694720992,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694720992,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1694721017,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74144/ : SUCCESS"
        },
        {
            "timestamp": 1694723913,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 4: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694723932,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694723932,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1694723958,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74146/ : SUCCESS"
        },
        {
            "timestamp": 1695140920,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1695140946,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1695140946,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1695140978,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74252/ : SUCCESS"
        },
        {
            "timestamp": 1695245994,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1695246024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1695246024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1695246047,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74297/ : SUCCESS"
        },
        {
            "timestamp": 1696465377,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(11 comments)"
        },
        {
            "timestamp": 1697661321,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 7.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1697661375,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1697661375,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1697661396,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/75114/ : SUCCESS"
        },
        {
            "timestamp": 1697661911,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7:\n\n(10 comments)"
        },
        {
            "timestamp": 1697672998,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(18 comments)"
        },
        {
            "timestamp": 1697748381,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7:\n\n(12 comments)"
        },
        {
            "timestamp": 1697759193,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1698168201,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1698187370,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7:\n\n(5 comments)"
        },
        {
            "timestamp": 1701100392,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1701100420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1701100420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1701100440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76442/ : SUCCESS"
        },
        {
            "timestamp": 1701103484,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1701103685,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9: Patch Set 8 was rebased\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1701103720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1701103720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1701103741,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76444/ : SUCCESS"
        },
        {
            "timestamp": 1701127433,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Code-Review-1\n\n(6 comments)"
        },
        {
            "timestamp": 1701212840,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1701213519,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1701219415,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701219891,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701300974,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 9:\n\n(3 comments)"
        },
        {
            "timestamp": 1701310878,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701466451,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9:\n\n(19 comments)"
        },
        {
            "timestamp": 1701468874,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9:\n\n(4 comments)"
        },
        {
            "timestamp": 1701646480,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1701703829,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1701730682,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701789158,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "mdmii@outlook.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701807744,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701810906,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701906450,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701987740,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701993078,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1701996131,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1702069641,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1702069663,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1702069663,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1702069688,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76989/ : SUCCESS"
        },
        {
            "timestamp": 1702070082,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 10:\n\n(6 comments)"
        },
        {
            "timestamp": 1702071208,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1702071232,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1702071232,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1702071253,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76990/ : SUCCESS"
        },
        {
            "timestamp": 1702071661,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1702072061,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 12: Commit message was updated.\n\nCopied Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1702072092,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1702072093,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1702072113,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76992/ : SUCCESS"
        },
        {
            "timestamp": 1702252952,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 12: Code-Review-1\n\n(7 comments)"
        },
        {
            "timestamp": 1702418675,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 12:\n\n(6 comments)"
        },
        {
            "timestamp": 1702422767,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 12:\n\n(3 comments)"
        },
        {
            "timestamp": 1704324924,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1704324958,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1704324959,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1704324983,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77530/ : SUCCESS"
        },
        {
            "timestamp": 1704325595,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 13:\n\n(2 comments)"
        },
        {
            "timestamp": 1704403789,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1704403806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1704403806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1704403826,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77580/ : SUCCESS"
        },
        {
            "timestamp": 1704408353,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 14: Code-Review-1\n\n(10 comments)"
        },
        {
            "timestamp": 1704479504,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 15.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1704479546,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1704479547,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1704479571,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77645/ : SUCCESS"
        },
        {
            "timestamp": 1704479958,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 15:\n\n(10 comments)"
        },
        {
            "timestamp": 1704933136,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 15: Code-Review-1\n\n(16 comments)"
        },
        {
            "timestamp": 1705005972,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1705006004,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705006004,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1705006034,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77881/ : SUCCESS"
        },
        {
            "timestamp": 1705006180,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 16:\n\n(16 comments)"
        },
        {
            "timestamp": 1705015922,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 16:\n\n(2 comments)"
        },
        {
            "timestamp": 1705016290,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 16: Code-Review-1\n\n(1 comment)"
        },
        {
            "timestamp": 1705089670,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1705089697,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705089697,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1705089718,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77937/ : SUCCESS"
        },
        {
            "timestamp": 1705090377,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 17:\n\n(11 comments)"
        },
        {
            "timestamp": 1705090611,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1705090639,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1705090642,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705090642,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1705090861,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/77938/ : SUCCESS"
        },
        {
            "timestamp": 1705103896,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 18: Code-Review+1"
        },
        {
            "timestamp": 1705349596,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1705439063,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 19: Commit message was updated.\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR **changekind:NO_CODE_CHANGE** OR changekind:TRIVIAL_REBASE OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1705439075,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705439075,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1705439099,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78012/ : SUCCESS"
        },
        {
            "timestamp": 1705439324,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 19:\n\n(2 comments)"
        },
        {
            "timestamp": 1705439394,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1705442440,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 19: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1705443981,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1705507363,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1705507780,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1705508394,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1705508420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705508420,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1705508442,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78064/ : SUCCESS"
        },
        {
            "timestamp": 1705508622,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1705510128,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1705510554,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1705514599,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 21: New patch set was added with same tree, parent tree, and commit message as Patch Set 20.\n\nCopied Votes:\n* Verified+1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1705514626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705514626,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1705514646,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78076/ : SUCCESS"
        },
        {
            "timestamp": 1705515097,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 21:\n\n(3 comments)"
        },
        {
            "timestamp": 1707248286,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 21: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1707250399,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(21 comments)"
        },
        {
            "timestamp": 1707251034,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(2 comments)"
        },
        {
            "timestamp": 1707251160,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1707251481,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1707253288,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 21: -Code-Review\n\n(1 comment)"
        },
        {
            "timestamp": 1707265756,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 21:\n\n(6 comments)"
        },
        {
            "timestamp": 1707268842,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 21:\n\n(4 comments)"
        },
        {
            "timestamp": 1707271614,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 21:\n\n(4 comments)"
        },
        {
            "timestamp": 1711037617,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 21:\n\n(22 comments)"
        },
        {
            "timestamp": 1711037961,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 22: New patch set was added with same tree, parent tree, and commit message as Patch Set 21.\n\nCopied Votes:\n* Verified+1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1711037985,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711037985,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1711038011,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 23.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711038016,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22:\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81085/ : SUCCESS"
        },
        {
            "timestamp": 1711038021,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711038021,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1711038047,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/81086/ : FAILURE"
        },
        {
            "timestamp": 1711041517,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 24.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711041535,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711041535,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1711041556,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81094/ : SUCCESS"
        },
        {
            "timestamp": 1711070072,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 24: Code-Review-1\n\n(6 comments)"
        },
        {
            "timestamp": 1711133461,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 24:\n\n(6 comments)"
        },
        {
            "timestamp": 1711134630,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 25.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711134643,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711134643,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1711134669,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81155/ : SUCCESS"
        },
        {
            "timestamp": 1711137582,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 25:\n\n(1 comment)"
        },
        {
            "timestamp": 1711145155,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 25:\n\n(1 comment)"
        },
        {
            "timestamp": 1711145174,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 26.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711145203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711145203,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: -Ok-To-Test"
        },
        {
            "timestamp": 1711145225,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81160/ : SUCCESS"
        },
        {
            "timestamp": 1711145370,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 26:\n\n(2 comments)"
        },
        {
            "timestamp": 1711145469,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 27: Published edit on patch set 26.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711145498,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711145498,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1711145520,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/81161/ : FAILURE"
        },
        {
            "timestamp": 1711145919,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 28.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711145948,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711145949,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: -Ok-To-Test"
        },
        {
            "timestamp": 1711145969,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81162/ : SUCCESS"
        },
        {
            "timestamp": 1711146590,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 29.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711146608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711146608,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: -Ok-To-Test"
        },
        {
            "timestamp": 1711146629,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81163/ : SUCCESS"
        },
        {
            "timestamp": 1711334508,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 29: Code-Review-1\n\n(3 comments)"
        },
        {
            "timestamp": 1711382348,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 30.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711382375,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711382375,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: -Ok-To-Test"
        },
        {
            "timestamp": 1711382410,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81216/ : SUCCESS"
        },
        {
            "timestamp": 1711382733,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 30:\n\n(16 comments)"
        },
        {
            "timestamp": 1711409813,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 30: Code-Review+1"
        },
        {
            "timestamp": 1715978291,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 30:\n\n(1 comment)"
        },
        {
            "timestamp": 1722553276,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 30:\n\n(3 comments)"
        },
        {
            "timestamp": 1723588996,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 30:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "78e85ffac5d1cc216984d1bb80e546c7791e1a3b",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/1",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694037529,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I forgot to run the local CI tool on this doc before pushing to Gerrit, then discovered my build machine is running into some new issues with Docker when I tried to correct.\n\nCI-tool-driven format updates to come."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm running into issues getting 'openbmc-build-scripts' to run locally in order to auto-format this doc to pass Gerrit build-verification, and resolving that is taking longer than expected. \n\nI'm going to go ahead and open this up for review in the meantime.\n\nMore detail on the build-scripts issue I'm hitting: calls to 'run-unit-test-docker.sh' break @ a call to './scripts/build-unit-test-docker' around where '/usr/bin/docker build ..' is called. I'm continuing to investigate potential causes."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm likely going to revamp this doc to reference a generalized 'u-boot-env-var -> dbus as a FRU-alternative' design doc (as discussed in my 9/12/2023 comments @ https://gerrit.openbmc.org/c/openbmc/docs/+/65678), and have this doc focus on the overall HPE-specific processes the functionality discussed there would be part of."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Marking as 'unresolved'"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hw_detection_without_fru.md",
                    "type": "ADDED",
                    "insertions": 120,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 134,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "a985de280d615b15518251b15befbb577dfee5d3",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/2",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694720539,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 144,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "525c01fb66743b0e0fdf1933493c6739d7cfec14",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/3",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694720941,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 153,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "05928057e2438aebf8173473651a300ccb97b3a8",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/4",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694723913,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 153,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "c13f9c1f60d4b2b95a12f997487c8c94bae22dc0",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/5",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1695140920,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 141,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 155,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "16bdbc187892348e52b3ad3251dd9ce0a9ceb413",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/6",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1695245994,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Christopher, thanks for providing some more details on the design points. I have a few queries."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Typo: proprietary"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: `fru-device` (https://github.com/openbmc/entity-manager/blob/master/src/meson.build#L29)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please unpack that a bit more in the text here? How does the data get into BMC RAM if there's no direct access?\n\nLater on you mention a secure-element is involved, but I'd much prefer you explain this up front so the reader doesn't carry the mental baggage of \"but how?\" through the text until they reach that explanation."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Definitely - more detail has been added to the new draft (which now switches focus to using /proc/device-tree/chosen/ as a pickup spot for a proposed daemon instead of relying on chaining together d-bus services)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please provide a link to the source. There's no reason not to substantiate the assertion."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Added in the new draft"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 52,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Use of u-boot environment variables feels more like an implementation detail to me. What drives the assertion that they are a requirement?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 52,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "You have a good point. The methodology in the new draft doesn't rely on u-Boot env variables, but I've gone ahead and made this point less specific re: implimentation"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 52,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why are we tying the implementation to a specific bootloader? Why does the interface need that information embedded in its name?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The methodology presented in the latest draft still relies on HPE-specific code in u-Boot, but the handoff point for the data is now a more neutral non-HPE-specific location - the chosen node at /proc/device-tree/chosen/ (https://www.kernel.org/doc/Documentation/devicetree/bindings/chosen.txt)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again I have to wonder why environment variables? Milton's suggestion elsewhere of defining a reserved memory region covering the pre-determined memory location mentioned above seems more practical."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "We're definitely willing to look harder at reserved memory regions if /proc/device-tree/chosen isn't a good option (that it turns out we already have in play in proof-of-concept daemon code)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I wouldn't really call this IPC. Otherwise any persistent storage is IPC, right?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Honestly, I needed to do a bit more research into how the term 'filesystem' is used in different contexts. Thanks for this point."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 101,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think the key piece here is that phosphor-u-boot-env-mgr already exists, and this code doesn't, so there's not a lot of motivation to write code specialised to the problem at hand."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 101,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Typo: Additionally"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 154,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "51d31d6bebb8ce70bc560b08c655bfaebef12df0",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/7",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1697661321,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Christopher, thanks for iterating on this with us. As a point of organisation, if you think you've resolved a problem identified in the comments please make sure to tick the `Resolved` checkbox so they can be hidden from view on subsequent revisions. I've marked a handful of comments as resolved.\n\nOn the content, I think we're converging on a reasonable design. There are still some bits left to work through though. Let me know what you think of some of the ideas."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Much appreciated, thanks!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nitpick: If we're going to use acronyms I much prefer they're explicitly defined. A practical place to define them is inline, immediately adjacent to their initial expanded form. For instance, in the paragraph above, you could put:\n\n> Instead, baseboard HW data is stored in a secure element (SE) ...\n\n(In quoting that I've just noticed you've used HW as an abbreviation also!)\n\nBut honestly, it doesn't save much. Perhaps avoid acronyms altogether and just use the expanded form?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'll fix this in the next draft."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 38,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please unpack u-BootBlock for us in the text? Is it a pure software solution? Is it additional hardware that snoops the SPI bus and controls system reset lines? What is it? Whether it's proprietary or not might be a problem that's outside the scope here, but I would appreciate some more details."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 38,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I will correct this in the next draft, but it's a software bit that uses a set of included keys to verify the bootblock before the rest of the process is allowed to begin."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 38,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 40,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "I am guessing this commit https://github.com/u-boot/u-boot/commit/384fc0fef13dae9c1567c1f1a6cdac491e7e2b90"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 40,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "You've got it right."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 40,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "correction (right commit, wrong repository fork)\nhttps://github.com/HewlettPackard/gxp-uboot/commit/384fc0fef13dae9c1567c1f1a6cdac491e7e2b90"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 40,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Just checking that you do mean an overlay here, as that is a specific concept in devicetree land."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "It's my current understanding that (our HPE-specific) u-Boot uses a device tree overlay inserted into the 'flat device tree' avail at u-Boot time to make the HW ID data available in chosen/ once the boot process is farther along."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, that would be excellent background to add to the document."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "A device tree overlay is a specifically formatted device tree blob that has additional data and is designed to patch an existing tree.   While there is not userspace api, the kernel documentation gives some notes.\n\nI would guess you are simply merging content into the flat device tree and not producing an overlay that is later applied by U-boot (or the kernel).\n\nhttps://www.kernel.org/doc/html/latest/devicetree/overlay-notes.html\nhttps://github.com/openbmc/linux/blob/dev-6.5/drivers/of/overlay.c\nhttps://github.com/openbmc/linux/blob/dev-6.5/drivers/of/dynamic.c\nhttps://github.com/dgibson/dtc/blob/2283dd78eff5b37a092988e04fd873b040ad27c6/Documentation/manual.txt#L697"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'll talk with the guy who did the u-boot code to confirm, but you very well may be correct there."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I did confirm that you were right about how the device tree was being modified. I've corrected that in the new version of the doc. Thanks again for all the links and info, it's all been very valuable hep!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Bit of a nitpick, but you're discussing u-boot, and then make reference to a linux kernel pseudo filesystem interface. If you want to discuss `/proc/device-tree/chosen` it would be good to formulate the sentence in terms of Linux rather than u-boot."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "In terms of the entire sentence, did your implementation do this already? Or is this what you're proposing? Because if it's part of what you're proposing then it doesn't belong in the \"Background and References\" section."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again a bit of a nitpick, but maybe 'attributes' or 'paths' are better terms here? I associate a file handle with a file descriptor, something that's dynamically created as part of execution of an application by opening a file, where this is discussing the 'files' themselves."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "HPE-specific u-Boot code that outputs the HW ID data to chosen/ exists and is publicly available @ https://github.com/HewlettPackard/gxp-uboot"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, that seems like an important point that needs to be added to the text."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "It was, line 40."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 43,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "My feeling is that this is not entirely in the spirit of the `chosen` node. My understanding of the `chosen` node is that it's sort-of a convenience node to communicate an administrative policy choice for booting the system. For reference, the [devicetree specification](https://github.com/devicetree-org/devicetree-specification/releases/download/v0.3/devicetree-specification-v0.3.pdf) says this in 3.5 `/chosen` Node:\n\n> The `/chosen` node does not represent a real device in the system but describes parameters chosen or specified by the system firmware at run time.\n\nThe information you're proposing to embed in `chosen` here sound a lot more like concrete \"facts\" about the hardware. To me they feel like they should go elsewhere. Perhaps you can provide some specific examples of the information you plan to store in the `chosen` node to help us understand whether it's appropriate?\n\nFor instance, if what you're exposing is information like the platform class, revision, serial number, and other related data, then perhaps the kernel's `soc_device` subsystem can help:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/sys_soc.h?h=v6.6-rc6\n\nWe expose some bits and pieces for Aspeed SoCs:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/soc/aspeed/aspeed-socinfo.c?h=v6.6-rc6\n\nThis yields the following on an Aspeed AST2600:\n\n```\nroot@ast2600:~# grep . /sys/devices/soc0/*\n/sys/devices/soc0/family:AST2600\n/sys/devices/soc0/machine:AST2600 EVB\n/sys/devices/soc0/revision:A3\n/sys/devices/soc0/serial_number:0932ba2112109613\n/sys/devices/soc0/soc_id:05030303\nroot@ast2600:~# \n```\n\nA useful escape hatch for any other properties might be via `custom_attr_group`:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/sys_soc.h?h=v6.6-rc6#n18\n\nIn terms of implementation you might map the reserve memory specified in the devicetree and parse your data out into the `soc_device` attributes."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks a ton for the detailed suggestion writeup - it is extremely helpful info for my investigations!\n\n(Written a little later, after talking to some folks): Our process currently has u-Boot putting together a device-tree overlay that points to a location in RAM that contains HW ID data (placed there in the step before u-Boot fires up) and gets inserted into the flat device-tree that's available to u-Boot.\n\nWhen this device-tree binary is consumed, the data we need becomes available in device-tree/chosen/\n\nAt the moment, I have the impression that reserved-memory regions aren't available for writing at the time that u-Boot is doing its work.\n\nFor now, I'm not sure what options are available for getting data out of u-Boot past device-tree overlays -> device-tree/chosen/ or using u-Boot env variables and picking up the data from there with something like phosophor-uboot-env-mgr.\n\nI will continue to investigate."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "I agree this is not related to the original OpenFirmware IEEE1275 usage of chosen (which was to communicate ihandles, open instances of drivers).   Linux has extended this to store phandles (references to other nodes in the tree) in several defined properties (eg, linux,stdout-path vs stdout), and devicetree.org has extended its definition to be \"chosen by system firmware\".\nhttps://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst#chosen-node\n\nHowever, the information parsed in your board fixup is all hardware information and should be placed according to standard bindings.\nhttps://github.com/HewlettPackard/gxp-uboot/blob/5aa47dcfa086fdde8093baa55fa0586e5b0ef56d/board/hpe/gxp/gxp_board.c#L249\n\nmac_0 and mac_1 should be placed in the driver nodes as local-mac-address.  U-boot had code to set the eth<n>addr envionment variables to the associated device tree entries (which I expect may set mac-address).\n\nhttps://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter4-device-bindings.rst#local-mac-address-property\n\nSimilarly, there are standard properties for model and serial-number \nhttps://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst#root-node\nwhich should probably be assigned to the root node.   I don't know what the pca is but having a device node representing it with its part number and serial would be expected.  (Note: I just read Andrew's comment about the soc device generic driver, which makes sense for hardware registers).\n\nIf you want to expose the raw blobs with their crc consider something like a /firmware node or sub-node describing specific stores (roms / images)."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I really appreciate the writeup and the links, thanks!\n\nI hadn't considered it might be an option to define arbitrarily named device-tree nodes for things like 'pca_sn' (a serial number assigned after manufacture, if I remember correctly) instead of putting everything under chosen/ \n\n(...I *am* understanding that part of your suggestion correctly, right?)\n\nI also wasn't aware of the devicetree-specification docs at that link before now, and it looks loaded with useful info in a much less dry-looking format that the docs I've been reading re: device-tree so far. So extra thanks for taking the time to link 'em.\n\nI'll give this (and your other comments) some solid consideration before continuing on with my next draft."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks again for the suggestions -- after some discussion and some proof of concept tests, the new version of this 'how to detect HPE hardware' design doc now focuses on *just* the well known device-tree 'model' and 'serial-number' paths in device-tree for now.\n\nMy thinking is that 'model' is enough to identify the HW to Entity-Manager, and 'serial-number' is low hanging fruit (won't be used for HW ID, but we'll very likely want to provide serial number info over redfish in the future)\n\nIf/when this design is approved and implemented, I expect to revisit this doc in the future to add more 'nice to have' HPE-specific fields into the mix (likely gated behind a model check, so other platforms won't be affected) -- maybe under a /proc/device-tree/baseboard/ path, or something similar. \n\nI assume additional discussion will be required since we'd be coming up with arbitrary nodes to store info in, which is why I chose to leave it out while we get something 'working' off the ground."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't think this makes sense - EM probes are evaluated any time an object appears, disappears or changes. I don't think there should be any timing relationship specified with respect to EM.\n\nHowever, given the information is a product of the system booting, we can anticipate it is present before EM starts."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I hadn't realized that probes were evaluated more than once. Good info, thanks!\n\nI'll correct this bit in the next draft."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Ah, that's a fundamental EM design point - it just reacts to whatever FRU data (not necessarily IPMI-encoded FRU data) it can see, when it becomes (un)available."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 65,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't see a reason to bake in this implementation-specific detail. You're trying to represent generic FRU information right? Why does that need to be tied to the underlying source of the data? Essentially I think you're over-specifying the interface."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 65,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm not sure I'd describe it as generic FRU data- HPE's HW ID data is not in a usual FRU storage blob format, and the data fields only line up in a few places against recognized FRU storage data fields (we've got fields like part-number and pca_part-number, for example)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 65,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Right, but the point is that the `chosen-args` segment of the interface name exposes the fact that you've implemented this in the `/chosen` node of the devicetree. I don't think it's necessary to reveal that detail in the D-Bus interface."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 65,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, I'd love some more context for u-BootBlock and this secure element (if they're not the same?)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Will do in the next draft to come. u-BootBock and the secure element are separate things. \n\n...But after talking with some folks, I've realized it's inaccurate to say that it's the 'u-BootBlock' that's actually communicating with the secure element - it's actually another (HPE-specific) component in the boot chain that fires up before u-Boot, and relies of info (keys, I believe) passed up from u-BootBlock.\n\nI'll aim to clarify more in the next draft."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yes. Please provide context for all of the relevant components."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "I didn't find u-BootBlock defined in the upstream u-boot repository.  Please use terms defined by upstream."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Will do. After discussing things with some folks at HPE, it was brought to my attention that the data is actually read by code in 'BootBlock,' not in u-BootBlock. \n\nu-BootBlock's job is just to validate BootBlock with a built-in public key before allowing the rest of the boot process to continue.\n\nThe next draft will correct this, and will expand further on the process."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've now updated info re: the HPE boot process - let me know if more detail would be preferred, thanks!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 75,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I wish others had as much of a grip on what goes in the Alternatives Considered section as you've demonstrated here. This is a great boneyard!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I appreciate that, and will aim to keep it up in the future!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 146,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 160,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "18b4270fc93c7ec6699a931135c10663adbdf86a",
            "parents": [
                "afb213e0829cd2d1218beececcd2422be1c60e19"
            ],
            "ref": "refs/changes/69/66369/8",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1701100392,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 181,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "970732c63eeadc74254bb5c39a68e4a79216db5a",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/9",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1701103685,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Chris, thanks again for the updates. I've got a couple of comments regarding formatting and an outstanding community query on integrating devicetree support directly into EM, but other than that it's starting to feel sensible.\n\nHowever, can you please mark old conversations that we've worked through as resolved so it's clear we're making progress?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Apologies for being fairly late to the party here -- I *think* I've read or at least skimmed through all the discussion that's taken place here (hopefully I haven't missed something where my thoughts here have already been addressed) but: to take a step back for a moment, it seems like there are two relatively independent aspects in consideration here:\n\n - how to retrieve hardware ID data from where it's stored\n - the format of that data and how to parse it into useful metadata fields\n \nThe problem at hand is that HPE hardware does non-standard things for both.\n\nLooking at the existing state of things, E-M's fru-device daemon only supports the standard IPMI FRU data format, but it *is* capable of retrieving that data via different means (manual userspace I2C transactions, reading from an eeprom file provided by a kernel driver, or from a regular file in `/etc`).  In a hypothetical world in which HPE systems still had their hardware ID data stored in the secure element but did so in the standard IPMI FRU format, I think the approach to take would be to create a means to plumb that data into the existing fru-device daemon.\n\nLooking at the other side, in another hypothetical in which HPE systems used the same proprietary data format they do but stored it in a standard I2C eeprom, I'd be inclined to just add some logic to fru-device to make it able to recognize and parse the alternate format -- in fact, while it's been a bit dormant for a while, I've actually made some efforts on that front previously (for a different format, obviously): https://gerrit.openbmc.org/c/openbmc/entity-manager/+/49341\n\nSo given the above, what I'm wondering is if we could just make fru-device handle it itself, without introducing any new daemons or the like.  I guess my open question would be:\n\n - Is the access channel to the secure element only available during the early boot phase, or can the HW ID data still be retrieved once Linux is up and running on the BMC?\n   - If the latter, would it be feasible to create a driver that would expose that data as a file in a way similar to how I2C eeprom data is exposed in sysfs?\n   - If the former, could we just have u-boot drop the entire blob into a designated FDT node?\n\n - Does the proprietary data format preclude having an open-source parser for it?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Is the access channel to the secure element only available during the early boot phase, or can the HW ID data still be retrieved once Linux is up and running on the BMC?\n\nI hadn't got a direct answer to that by my inferred answer was \"no\", but it's not clear to me why it's \"no\" (maybe some e.g. TrustZone-style separation of privileged hardware?). Clarification of the mechanics would be a good addition to the document.\n\n> If the former, could we just have u-boot drop the entire blob into a designated FDT node?\n\nI think that's where things are at now? There was also discussion about exposing the mentioned reserved memory via Linux, but it seems that's not preserved long enough in the boot process? It's not clear to me whether that is a requirement, a constraint, or some kind of engineering decision that might have more flexibility.\n\n> Does the proprietary data format preclude having an open-source parser for it?\n\nI think that's in their u-boot fork that transforms the data in the reserved memory into attributes in the devicetree."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": ">> could we just have u-boot drop the entire blob into a designated FDT node?\n>\n> I think that's where things are at now? \n\nHmm, I had thought the current idea was to have u-boot parse it and create per-field FDT nodes for things like model & serial number?  (i.e. what's described in lines 46-47 of the current version of the doc)  What I meant was to just leave it in its original un-parsed binary form to pass it through to linux (and thus its userspace) and let a parser in fru-device extract the needed fields from that.\n\n> I think that's in their u-boot fork that transforms the data in the reserved memory into attributes in the devicetree.\n\nAh, yes, and looking back at lines 42-44 that would seem to imply that an open-source parser for the proprietary format is indeed OK."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> What I meant was to just leave it in its original un-parsed binary form to pass it through to linux (and thus its userspace) and let a parser in fru-device extract the needed fields from that.\n\nAh, so that feels a little abusive of devicetree. However we did dive down a related path in attempting to expose the reserved memory containing the data. But again, that didn't seem possible for some reason, though it wasn't clear why not and whether that could be changed:\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/65678/comment/514b891b_6b4246c5/\n\nI asked Chris to add that discussion to the `Alternatives Considered` section."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Cleaning up some old resolved comments threads, and replying to a few others. (More replies to some comments coming after this update)"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "> I'm wondering is if we could just make fru-device handle it itself, without introducing any new daemons or the like\n\nInterestingly, the very first thing I submitted on this topic was a block of code proposed for FRU-Device that could read from 'arbitrary paths in the filesystem' (but the HPE-example usage was setup to read HPE data from inside the device-tree/chosen node).\n\n\nI called it a 'managed FRU' at the time (got pushback on that name), but we'll probably turn it into a separate daemon and call it something else once a design doc is accepted, at the code here is modified where needed to fit the 'new' design.\n\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/65669\n   \nOne of the bigger pushbacks was on the idea that 1 daemon should be responsible for only 1 channel, and that FRU-Device is aimed at EEPROM over I2C reads (with a coding-convenience exception for reading an EEPROM blob from a location in the OS filesystem).\n\n-------------\n\n>Is the access channel to the secure element only available during the early boot phase, or can the HW ID data still be retrieved once Linux is up and running on the BMC?\n\nThe secure element storing the data is not directly accessible by BMC. An HPE bootloader runs before u-Boot, accesses the secure element, and uses a predetermined location in RAM to pass the data along for pickup by u-Boot code.\n \nThe location in RAM is not protected, so there's no guarantee of the contents after u-Boot's stage finishes and the rest of the boot process begins (even though it *theoretically* should be unchanged in the short term).\n \n -----------------------\n \n>Does the proprietary data format preclude having an open-source parser for it?\n \nThe parser is open source and can be found in HPE's forked u-boot code @ https://github.com/HewlettPackard/gxp-uboot/\n \n -----------------------------\n \n>There was also discussion about exposing the mentioned reserved memory via Linux, but it seems that's not preserved long enough in the boot process? It's not clear to me whether that is a requirement, a constraint, or some kind of engineering decision that might have more flexibility.\n\nAs my current understanding goes, we can reserve memory via u-Boot making modifications to the flat device-tree, but we can't define data to populate that memory space from there. \n\nAs I understand it, by the time the modified flat device tree has been consumed by the kernel and the memory is actually reserved, we don't have guarantees that the RAM location u-Boot would have read from hasn't been overwritten (though it's \"probably\" fine)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> The secure element storing the data is not directly accessible by BMC. An HPE bootloader runs before u-Boot, accesses the secure element\n\nYou keep stating this and not explaining the mechanics of it. How does this isolation work? What is it that prevents u-boot from accessing the secure element? How does the HPE bootloader talk to the secure element? Is it attached via I2C? SPI? 1W? A bunch of stuff here is unclear and I think that lack of clarity is preventing us from providing further feedback.\n\n> and uses a predetermined location in RAM to pass the data along for pickup by u-Boot code.\n>\n> The location in RAM is not protected, so there's no guarantee of the contents after u-Boot's stage finishes and the rest of the boot process begins (even though it theoretically should be unchanged in the short term).\n\nI'm going to poke at this claim a bit more. u-boot has the ability to reserve chunks of memory for various reasons. You can find a bunch of related code in https://github.com/HewlettPackard/gxp-uboot/blob/v2020.10-gxp-openbmc/common/board_f.c by searching `reserve_`. I think it's possible to make this all line up so we can expose the data to userspace under linux via reserved memory.\n\n> As my current understanding goes, we can reserve memory via u-Boot making modifications to the flat device-tree, but we can't define data to populate that memory space from there. \n\nBut if you define the reserved memory region as the region that's already populated by the HPE bootloader, then there's no need to populate it, as it's already populated. However, if for some reason they need to be different locations, then it should just be a `memcpy()`?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The poking is definitely appreciated! \n\nIt had not occurred to me that it would be possible to mark an already-populated space in RAM as 'reserved' and then read from it after boot. I think I'd just assumed the reservation process would wipe the memory clear during boot.\n\nWe'll do some experimenting and then I'll get back to you on this. \n\nTo confirm-- assuming using reserved memory path works out and we can dump a blob, then have a daemon (hosted in Entity-Manager, I still assume) parse the HPE format -- is this strongly preferred over using device-tree model and serial-number paths?\n\nI feel like device-tree/model and /serial-number make sense in a \"maybe other entities might have a use for this\" kind of way -- but at the same time, maybe establishing a pathway for reserved memory reads could be just as useful... I think I'll leave it up to more experienced folks to offer guidance here \ud83d\ude0a\n\nI'll also ask around for the level of detail re: secure element access you're asking about. Off the top of my head, I believe a proprietary driver that HPE doesn't own is involved in communicating with the secure element. I believe the driver is authorized for release in HPE's bootblock, but not elsewhere. I'll have to ask about the specific communication channel used."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> We'll do some experimenting and then I'll get back to you on this. \n\nGreat, thanks for continuing to iterate on this with us. It's a great example of how working with upstream should work (though it's often squashed by competing pressures).\n\n> To confirm-- assuming using reserved memory path works out and we can dump a blob, then have a daemon (hosted in Entity-Manager, I still assume) parse the HPE format -- is this strongly preferred over using device-tree model and serial-number paths?\n\nReally it depends on the other information. There's no harm in duplicating the model and serial number data between the devicetree and the blob, but shoving arbitrary data into the devicetree doesn't immediately sit well with me. It's not an opaque data transport, it's a well-defined data structure (with schemas) for describing undiscoverable hardware.\n\n> I'll also ask around for the level of detail re: secure element access you're asking about.\n\nThanks for continuing to work with us on this as well \ud83d\ude0a"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "While any memory can be marked reserved, there are some considerations if you want to relocate the block before passing to the Linux kernel.    Normally U-Boot places itself at the top of RAM (there is a variable to adjust this limit).  In addition you need linear memory for the fit, the kernel and initramfs (or other initrd) copied from the fit.  The kernel decompressor allocates the full kernel image and stack, and then invokes the kernel itself.  The other consideration is that the kernel will allocate memory in at least page chunks, and groups binary pairs up to at least the large page size, so having at least page alignment is good."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I very much appreciate the time you guys are taking to offer so much detailed guidance on this -- even the dead ends have a very helpful learning experience (that I'll definitely be aiming to pass along :)\n\n>There's no harm in duplicating the model and serial number data between the devicetree and the blob, but shoving arbitrary data into the devicetree doesn't immediately sit well with me\n\nWhat would folks think about a daemon for reading in 'model' and 'serial-number' from device-tree, then separately pulling additional data from reserved memory through a reserved-memory daemon later on? (reserved memory experimentation is ongoing).\n\nIn this scenario, this doc would be probably be updated to remove discussion of plans to add additional HW ID data through a 'baseboard' (working name) device-tree node, and to instead refer to a different (future) doc for reading additional HW ID data from reserved-memory.\n\nThe 'model' string is the big thing we need to ID HPE platforms, and the rest of the stuff is generally just 'would be nice to display in UI someday' data that we're not too worried about yet.\n\nAn additional detail I've recently discovered is that the 'model' value we're currently looking to rely on for HPE platform IDs actually comes from a separate (CPLD-based memory) device than the rest of the HW ID blob comes from; the HPE u-Boot code just originally grouped the output together under device-tree/chosen as a hidden implementation detail.\n\nThat said, I don't think BMC needs to be 'aware' of the origins of the model value if it's just getting it from the standard device-tree/model path.\n\nWhat do you folks think?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Also - I've confirmed that what I said previously about Secure Element communication was correct - the bootloader's communication with it relies on a 3rd party driver, and there are solid restrictions on how drivers that communicate with the SE can be released."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Also - I've confirmed that what I said previously about Secure Element communication was correct - the bootloader's communication with it relies on a 3rd party driver, and there are solid restrictions on how drivers that communicate with the SE can be released.\n\nCan you please add this explanation to the text - it's useful to know we have more of a political constraint and than a technical constraint.\n\n> What would folks think about a daemon for reading in 'model' and 'serial-number' from device-tree, then separately pulling additional data from reserved memory through a reserved-memory daemon later on? (reserved memory experimentation is ongoing).\n\nThat sounds like a reasonable solution to me. For what it's worth IBM already does something similar (search for `IBMCompatibleSystem` - thought I think Matt Spinler is moving them away from that towards a generic `Compatible` interface)\"\n\n> An additional detail I've recently discovered is that the 'model' value we're currently looking to rely on for HPE platform IDs actually comes from a separate (CPLD-based memory) device than the rest of the HW ID blob comes from; the HPE u-Boot code just originally grouped the output together under device-tree/chosen as a hidden implementation detail.\n\nPlease also integrate this note into the text.\n\n> That said, I don't think BMC needs to be 'aware' of the origins of the model value if it's just getting it from the standard device-tree/model path.\n\nAgreed. However, please make sure the details are in this document so in the future we can understand how we came to whatever decisions we make."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "There is an xyz.openbmc_project.Inventory.Decorator.Compatible interface that is meant to hold things like model values, but it holds an array of values similar to how the device tree compatible stuff, and I'm not sure if entity-manager can probe on an array value."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'd generally expect EM to be creating the Compatible records and not consuming them."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think that's up to those who are writing D-Bus probe statements, right? Why exclude probing on compatible specifically?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "My suspicion is that it's more an 'in practice'"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I'd generally expect EM to be creating the Compatible records and not consuming them.\n\nPatrick had the same comment that I did.  This wasn't fixed in the design, I'm not sure why it was marked done.\n\n\n> Why exclude probing on compatible specifically?\n\nBecause EM config files are a description of a piece of HARDWARE.  The idea of a \"compatible\" interface only exists in software is arbitrary.  The whole point of EM is to convert \"This specific hardware identifies itself via X\" into a set of compatibility strings (exposes records) that software can consume."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "^ \"and is arbitrary\""
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "We're now looking at creating an interface called 'xyz.openbmc_project.BMCPrebootContext' to hold the data read by this daemon."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we add the discussion about exposing the reserved memory under Linux to the \"Alternatives Considered\" section?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Can do. \n\nThe biggest hurdle as I understand it is that we can define a reserved memory space from inside u-Boot through modifications to the 'flat' device-tree, but I wasn't able to find discussion of methods to pre-populate that reserved memory with data *before* the flat device-tree is consumed by the kernel.\n\nThere's nothing protecting the chunk of RAM that our u-Boot code is using as a pickup point, so there's no solid guarantee of the contents after that point (even though they should in theory be unchanged for at least awhile)."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 44,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "Have you prototyped such code?  If so, an updated link would be appreciated."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "We've tested a proof of concept re: having code in u-boot that alters the contents of device's tree's 'model' and 'serial-number' via modifications to the flat device tree, but it hasn't been posted online yet.\n\nIf/when we agree this path is the way to go, the source that updates 'model' and 'serial-number' will be made available @ https://github.com/HewlettPackard/gxp-uboot/\n\nThe current release outputs a series of properties under device-tree/chosen/"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 48,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This link fails to render correctly in the document:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/970732c63eeadc74254bb5c39a68e4a79216db5a/designs/oem/hpe/hpe_hw_detect_no-fru.md#background-and-references\n\nNote that markdown generally supports \"reference links\" that allow you to separate the URL from the hyperlink markup:\n\nhttps://github.github.com/gfm/#reference-link\n\nYou can do this instead:\n\n```\n... ['model' and 'serial-number,' which both have well-known paths in the device tree root][dt-spec-chap3-root-node].\n\n[dt-spec-chap3-root-node]: https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst#root-node\n```"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for the tip!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm wondering whether we just glue devicetree probe support directly into EM and save the DBus side of things.\n\nI've brought it up on Discord also:\n\nhttps://discord.com/channels/775381525260664832/819741065531359263/1178834869351092254"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "mdmii@outlook.com",
                        "username": "mdmillerii"
                    },
                    "message": "As I stated on Discord, this counter proposal needs more details.  How would it work?  Would a board be identified by a compatible string, and specify which sub-nodes (or phandle links) are the slots representing other nodes for other FRUs?  each entity would be expected to restrict itself to properties of that single node?\n\n(similar content in a discord thread forked from above as a proposal)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Reflecting on it I think exposing a devicetree probe capability opens up opportunities much wider than are necessary to meet HP's needs. I feel that's motivating in your questions Milton and is reasonable cause for concern. Maybe we should also reconsider whether injecting the data into the devicetree is the right thing to do at all, but we have been going around on it a bit, and it feels like we'll get a bit bogged down. Maybe it's best if we don't expose the devicetree capability to the EM config files and chug on with the D-Bus probe approach. We could at least contain exploitation of the devicetree more easily that way."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "If we're leaning back towards a specific daemon for reading from device-tree paths, I'm definitely good with that."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay. Though first I think we need to resolve our revisit of the reserved memory approach above."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The new draft references another (doesn't exist yet) OEM/HPE design doc for transporting arbitrary HW ID data via reserved-memory. \n\nThe alternatives considered section now also mentions the pros/cons for reading 'model' through reserved-memory instead of device-tree/model. It also now includes the 'what if probes could handle device-tree paths' pros/cons too."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 97,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I wouldn't say \"written to file paths in ...\" but rather \"exposed as devicetree attributes\""
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 97,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'll do this in the next draft."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 97,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Shoot - missed this point in the latest draft. I'll put up another one soon with this correction added too."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 97,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "A formatting comment rather than a content comment, but can you make the various cases, the pros and the cons subheaders so we can more easily distinguish them from the properties?\n\n```\n## Alternatives Considered\n\n### All HW ID data is ...\n\n#### Pros\n1. ...\n2. ...\n\n#### Cons\n1. ...\n2. ...\n```\n\nAlso, instead of bullets it's much more useful to use numbered lists so we can discuss the properties by reference to their number."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "> Also, instead of bullets it's much more useful to use numbered lists so we can discuss the properties by reference to their number.\n\nNot to get too bikesheddy here, but FWIW I don't 100% agree there -- IMO numbering is more applicable when there is a particular meaningful order for the items (like steps in a sequence, whereas this is basically just a set with an arbitrary order imposed for the purpose of writing it down).  It also incurs more ancillary book-keeping work if any adjustments are made (adding or removing at anything but the end of the list implies a bunch of renumbering of existing entries).  The markdown feature of allowing you to write just a plain `1.` on every entry and have \"real\" numbers assigned when rendered helps there, but then you kinda defeat the intended purpose here in that you lose the ability to usefully refer to item number N when looking at the un-rendered source (which for me anyway is a pretty large fraction of the time)."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "It's less about an ordering and more about a unique identifier. It just happens to be the case that Markdown's unique identifiers also provide ordering. I also don't find numbering that much of a burden when there's only a handful of related elements. I didn't do a survey to figure out whether I'm in the minority there though \ud83d\ude0a"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'll update the formatting here in the next draft."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Another point I missed in patchset 9, but should have fixed up in patchset 10 shortly."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Since there was some uncertainty re: using numbers, I tried letters. Is the new format alright?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 167,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 181,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "024db46914773c457e8d57376a7f6acd38e8d2dc",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/10",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1702069641,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 216,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 231,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "edcdc577fee74807c7290c5b6ec891c5a3cd38cb",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/11",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1702071208,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 218,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 233,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "0e0fed5c7197564300de0acd5fb5be81d961c64e",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/12",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1702072061,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Chris - I'm having fewer design concerns so I think we're converging on something acceptable. I have a few comments on the structure of the document itself, and another on the content of the blob we retrieve from the secure element."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Some of the sentences here feel redundant. Can you please reword it?\n\nAlso to pick at a detail, my understanding is that it's not the case there's \"no direct BMC access\", that implies to me there's no hardware connection. Perhaps something like:\n\n> The proprietary, HPE-controlled bootblock firmware communicates with a secure element to retrieve portions of the platform vital product data (VPD). It uses a driver whose implementation is strictly license-controlled and cannot be publicly released. The open source portions of the boot chain must adapt to the bootblock's reserved memory ABI for providing the VPD from the secure element.\n\nAlso I think it's worth discussing the extent of the other data provided through this interface. I dug up what I think is the relevant code-path in your u-boot fork:\n\nhttps://github.com/HewlettPackard/gxp-uboot/blob/384fc0fef13dae9c1567c1f1a6cdac491e7e2b90/board/hpe/gxp/gxp_board.c#L211-L216\n\nSo it looks like the GXP and PCA (what's the PCA?) part number and serial number, NIC MAC addresses? Are there other properties too or is this the set?\n\nBecause, you can exploit the `mac-address` property from the `ethernet-controller` devicetree schema to deal with the MAC metadata:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings/net/ethernet-controller.yaml?h=v6.7-rc5#n20\n\nAm I looking in the right place here?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I will reword this part, thanks for the input here.\n\nAnd yes, you're looking in the right place.\n\nPCA_xx is an ID tied directly to a specific part like the mainboard, while the non-PCA version like 'PCA_SerialNumber vs. SerialNumber) is assigned to the assembled unit when it's put together in the factory.\n\nOther than\n- PartNumber\n- PCA_PartNumber\n- SerialNumber\n- PCA_SerialNumber\n- Mac 1\n- MAC 2\n\nThere's also Server_id, which comes from a CPLD-based memory device, and is (now) output as device-tree/model\n\nThe main one we care about is server_id (model) since that value remains the same across a given platform, even if different mainboard revisions are used from one unit to another (they'd have different pca_PartNumbers).\n\nSince you mention it, I guess it might make sense to go ahead and include 'mac-address' in the scope of this proposal since it seems like low-hanging fruit re: well-defined device-tree properties. \n\nPresumably, this MAC data is *just* for passing status info to redfish/WebUI -- I don't believe we plan to rely on d-Bus for any MAC-address-reliant functionality at this time.\n\nI mostly just left it out because I've been focused on getting 'device-tree/model' for a system identifier-- but I'm happy to go ahead and include it now if folks feel like it makes sense to do that now instead of worrying about it later."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> Since you mention it, I guess it might make sense to go ahead and include 'mac-address' in the scope of this proposal since it seems like low-hanging fruit re: well-defined device-tree properties. \n\nRight, yeah I think it makes sense to take care of the low-hanging fruit, even if it's not the primary focus of the document.\n\nI'd appreciate it if you can describe that list of properties in the document itself. Unpacking \"blob\" to \"here's a handful of concrete properties\" is really helpful for reasoning about the problem we're trying to solve. I had imagined you had kilobytes of weird metadata, but that's not the case at all, and it's relatively well defined.\n\n> I mostly just left it out because I've been focused on getting 'device-tree/model' for a system identifier-- but I'm happy to go ahead and include it now if folks feel like it makes sense to do that now instead of worrying about it later.\n\nSounds good!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Hope you had a solid holiday and newyears!\n\nI ended up borrowing much of your wording, and also ended up changing instances of 'HW ID' (outside of the problem description) to 'VPD' or 'product data' or 'vital product data' -- hopefully I found a good balance between using the abbreviation, and sometimes not abbreviating to keep things more readable."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This needs to be in square brackets: `[dt-spec-chap3-root-node]`. If you check the rendered link it's still not right \ud83d\ude0a\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/0e0fed5c7197564300de0acd5fb5be81d961c64e/designs/oem/hpe/hpe_hw_detect_no-fru.md"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think it would help to specifically mention the PDI `Compatible` interface here"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm putting together a new draft based on your latest comments (Thanks again for the above and beyond in-depth commentary!) -- but could you clarify what you mean by \"mention the PDI compatible interface\"? I'm drawing a blank on what 'PDI' is in this context."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Oh. Sorry. PDI is [openbmc/phosphor-dbus-interfaces](https://github.com/openbmc/phosphor-dbus-interfaces). The `Compatible` interface is this:\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/Compatible.interface.yaml"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 113,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You need to be careful with your nested bullet points below. The nesting isn't always entirely correct. Have a look at the rendered version:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/0e0fed5c7197564300de0acd5fb5be81d961c64e/designs/oem/hpe/hpe_hw_detect_no-fru.md#alternatives-considered\n\nI think this would be much easier to manage with sub-headings and bullet lists that are not nested."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 113,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 113,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you unpack this concern a bit? I don't recall that being part of the discussions - they were more around the grammar of a devicetree probe statement, and opening the can of worms of matching on any old devicetree node.\n\nAlso with the semi-colon separator you're really creating a list-within-a-list. We're already using a markdown list, just make the second portion a separate markdown list element."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "My thinking is that if probe statements are responsible for calling code that pulls from arbitrary data in device-tree, there's potential for something breaking in the code there to affect probe behavior for devices that would be otherwise working.\n\nThis is just speculation on my part. Do you think I should take that point out?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yeah, please take that out. We don't need to speculate implementation bugs \ud83d\ude0a"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 121,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Right, this is what I was discussing in the previous comment."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ack"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 218,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 233,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "5541503ecb3e2a80ee353c1111c407e8918d8842",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/13",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1704324924,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 243,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "fda07aee308ee04469b014c2af392590b94c6adc",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/14",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1704403789,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Chris, I have a couple of comments on the design, but mostly comments on your use of Markdown. If you can clean those up then I think this is pretty close to something I'm comfortable accepting."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "As always, your comments are very much appreciated, thanks for taking the time!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Typo: proprietary"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 72,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This link syntax is still incorrect, you need square brackets (`[]`) for the URL portion where the portion is \"reference-style\", and not parens (`()`), which require the URL be provided directly inline\n\nSee the original markdown specification:\n\nhttps://daringfireball.net/projects/markdown/syntax#link\n\nAnd Github's specification for Github-Flavored Markdown:\n\nhttps://github.github.com/gfm/#reference-link\n\nYou can check the result in Gerrit's gitiles instance:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/fda07aee308ee04469b014c2af392590b94c6adc/designs/oem/hpe/hpe_hw_detect_no-fru.md"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 72,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Fixed.\n\nIt also hadn't clicked with me until this post that I could visit the Gerrit gitiles instance and swap out the hash to navigate directories (like docs/design/oem/hpe)that haven't been accepted yet. This seems like an extremely helpful thing to realize. I will spread this info along folks working on design docs, so thanks for that too!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This link syntax is also incorrect. See above."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think we can drop this as a requirement, really it's detail that is the result of a political (licensing) situation. Those may change over time."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 102,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't think this is right? We were discussing the `Compatible` interface previously:\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/Compatible.interface.yaml\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/66369/comment/8d04a943_b56d4b9d/"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Ah! Total brain glitch on my part there. After posting the last draft, I saw I'd left that line"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "You're correct- good catch.\n\nI realized the line was still referring to interface 'chosen-HW-ID' after the last patchset was up, and must've brain glitched when I corrected. \n\nDeviceTree was the name I'd been planning to suggest before it clicked that we can just write to the existing Decorator.Compatible interface from a daemon, rather than from inside an Entity-Manager config JSON like most platforms are doing."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 137,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, so the nested bullets look at least semantically correct now. However, I would still prefer that we use nested headers here (which are automatically linkable), and then numbered lists inside that. So:\n\n```\n### Entity-Manager probes are extended to handle reading data from arbitrary devicetree nodes\n\n#### Pros\n\n1. No new daemon required\n\n#### Cons\n\n1. May encourage undesired devicetree exploitation\n\n### A `reserved-memory` node in the devicetree is used for transport of `serial-number` and `model` ID data\n\n#### Pros\n\n1. ...\n2. ...\n\n#### Cons\n\n1. ...\n2. ...\n\n...\n```"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for the examples.  I don't need to do anything special for the longer titles, do I? I left them as a single line to avoid weird spacing issues that popped up when I tried adding my own line breaks."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 146,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is combining a markdown-specified bullet list (`- `) with an ad-hoc ordered list using syntax that is not specified by markdown  (`a) `). Can you please keep to specified markdown constructs? That makes maintenance a lot easier.\n\nHere's the syntax for a markdown numbered list:\n\nhttps://daringfireball.net/projects/markdown/syntax#list\n\n(https://github.github.com/gfm/#ordered-list-marker)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 146,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I had not done much work in markdown before this doc, so links like these have been extra helpful"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 188,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Typo: environment"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 188,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 244,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 260,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "60a74df6629e9ed9991ca954ffb66291660e8889",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/15",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1704479504,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Chris, I have some comments but many are just nitpicks or typos. Some still relate to markdown formatting or devicetree specifics. I don't have any significant opposition to the design at this point, though I do wonder whether we can shift the document out from `oem/hpe` and rename it more along the lines of the behaviour it provides: Identifying a FRU through the devicetree model (this may be useful to others besides HPE)."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm all for it. I assume it'd be fine to submit an amend to this that removes the ../oem/hpe/ directory, then adds this doc to /docs/design -- does that sound alright?\n\nI'm very open to renaming suggestions if anything comes to mind re: helping folks who might be interested in this to find it. I'll be sure to update the 'title' line in the doc to match, along with the gerrit review title.\n\nOne potential name that comes to mind is 'entity-manager-hw-detect-via-device-tree' Thoughts?\n\nI'll submit a patchset with the changes below first to make it easier to see the file diff, then I'll submit another once we've settled on a name that moves the file and changes the filename."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> One potential name that comes to mind is 'entity-manager-hw-detect-via-device-tree' Thoughts?\n\nSounds okay to me.\n\n> I'll submit a patchset with the changes below first to make it easier to see the file diff, then I'll submit another once we've settled on a name that moves the file and changes the filename.\n\nOkay."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "File has been renamed and newest suggestions are in place. Next patchset should move the file."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "typo: implementation"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 49,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Your latest set of comments led me to realize the editor I've been using (Notepad++) needs a plugin for spellcheck features, which I've now gone ahead and installed now. \n\nI appreciate you taking the time to help sweep up these details I'd missed, and future submissions should have fewer of these sorts of issues from here out. I'm also passing what I'm learning from this experience along to coworkers putting together their own design doc drafts. Thanks!"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "typo? publicly"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "s/BMC/Linux"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: I'd say 'flattened' rather than 'flat' here. Separately, I feel the quotes around 'flat' are unnecessary. Flattened devicetrees aren't unfamiliar to many people working in this domain."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've taken your suggestion here, but what is the 's' in s/BMC/Linux?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Oh, sorry. Perhaps I'm a bit too deep in unix-isms. `s/x/y/` is the [`sed` pattern for \"substitute `x` with `y`\"][1], where the `/`s are separators between the match and replacement patterns for the substitution. What I was trying to say was \"substitute 'BMC' with 'Linux'\"\n\n[1]: https://www.gnu.org/software/sed/manual/html_node/The-_0022s_0022-Command.html#The-_0022s_0022-Command"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 72,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: I'd prefer this wording instead:\n\n> setting the values for the [`/model` and `/serial-number` properties][dt-spec-chap3-root-node]\n\nUsing `/model` and `/serial-number` exploits the existing path notation provided by the devicetree specification:\n\nhttps://github.com/devicetree-org/devicetree-specification/blob/v0.4/source/chapter2-devicetree-basics.rst#path-names"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 72,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: Perhaps \"a property provided by the network binding\""
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 126,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: \"exposes it in Linux\""
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 126,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: I'd prefer you surround this in backticks so it stands out as a technical definition:\n\n    `xyz.openbmc_project.Inventory.Decorator.Compatible`"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I went ahead and did this to every line that had 'xyz.' in it. 3 lines were changed. Does that seem alright?"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Ah, so another markdown behaviour is that indented sections are considered code blocks (just as if you surrounded this with triple-backticks):\n\nhttps://daringfireball.net/projects/markdown/syntax#precode\n\nYou can see the code blocks in the rendered markdown:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/60a74df6629e9ed9991ca954ffb66291660e8889/designs/oem/hpe/hpe_hw_detect_no-fru.md#alternatives-considered\n\nPlease remove the indentation such that the numbers for the numbered list are at the beginning of the line, and fix for the rest of the cases through the document."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Leaving the hanging indents is fine for multi-line points, right? That's the impression I get from the doc-- just confirming that's what we want."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 147,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "typo: exploitation"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 147,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See the comment about path notation above. I'd prefer this just be `/model`."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See comment about path notation above. I'd prefer this just be `/model`"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See comment about path notation above. I'd prefer this just be `/model`"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 168,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 174,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think this could also use the just the devicetree path notation (so: `/chosen/`). It's implicit that Linux exposes the devicetree under `/proc/device-tree` (though also `/sys/firmware/devicetree/base`)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 174,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "typo: service"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 253,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 269,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "a41f03cb39a7d2d620ebecc06457cdb092e2faeb",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/16",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705005972,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Sorry, my previous comment was not communicated very clearly. This should just be 'Linux'. There are a few places throughout the document where you've used 'BMC' where 'Linux' should be used instead.\n\nOther than this, I think we're in good shape. Thanks for working on this."
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Gotcha. I *think* all remaining uses of 'BMC' make sense in the doc, but let me know if you think any of them don't fit as-is. And thanks for helping out here :)"
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/hpe_hw_detect_no-fru.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 268,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "90af6e0e191542ac44d71042e53c91b10b7dd657",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/17",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705089670,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/oem/hpe/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 268,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/18",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705090611,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please wrap 50/72 as the developing guide asks."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "To confirm-- the issue is that the lines of my body were wrapping *too early*, not that they had too many characters, correct?\n\nThanks for the heads up, I think I had only been watching to make sure I didn't go over the 50/72 boundaries when I made my last change."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Usually your editor can be configured to automatically wrap the text at the required column. Failing that there's always [fold](https://www.man7.org/linux/man-pages/man1/fold.1.html)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "That's a very useful command I didn't know about, thanks! Can you tell me what editor you prefer that has word wrapping where you can define the column to wrap on?\n\nI've been using Notepad++. It does have word-wrap functionality, but not column-definable out of the box."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "(Removing 'resolved' flag to keep replies open...)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I'm not sure if git defaults to vim for commit messages or if it just does for me because I use (neo)vim for everything, but that is easy to configure to handle the 50/72 lengths, including reformatting paragraphs or the whole thing with 'gw'."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've got some novice level experience with vim, but hadn't tried setting a word-wrap with there, and I haven't tried neovim yet. Good info, thanks!"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "IMO, this design is communicating data with uboot, therefore it goes in a daemon that communicates with uboot, https://github.com/openbmc/phosphor-u-boot-env-mgr which also has the advantage that the existing code will now be better maintained.  Even if none of the code is in common, sharing the repo with all uboot communication code is organizationally much better in my opinion, because it adds to the idea that solutions are generic, not platform specific.  Keep in mind, phosphor-u-boot-env-mgr has less executable code than this design document has words, so getting it maintained and used shouldn't be a huge burden to put on the authors of this document.\n\nI don't really buy into the idea that HPe platforms are so unique that they require yet another daemon to communicate data from uboot into dbus.  Maybe it operates in some unique ways using some unique ram regions but it's still transferring data uboot->dbus, and should share the code that already exists, even if it's only in name. \"If the HPe u-boot node exists\" seems like something that the code could trivially branch on and be added to by others later.\n\nIn addition, this document needs unified with https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n\nWhich still has a number of open comments from core maintainers, and has an author comment that says:\n\n> I'm now planning to update this proposal to discuss creating a 'u-boot-env FRU-alternative' daemon (non-HPE-specific) in Entity-Manager that would make use of the phosphor-u-boot-env-mgr service (if exists) to move HW identifying data to D-Bus.\"\n\nHopefully it's easy to see why I'm confused why there's yet another design doc for what amounts to the same feature.\n\nGiven how long this design has been in-progress, I'm assuming this implementation already exists in a fork somewhere?  To be clear, working code isn't a prerequisite for a design approval, but if it exists, providing a pointer to it would likely answer quite a few questions better than text descriptions, and give us something to point to when making specific suggestions about dbus interfaces."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> IMO, this design is communicating data with uboot, therefore it goes in a daemon that communicates with uboot, https://github.com/openbmc/phosphor-u-boot-env-mgr\n\nLet's hold up there. I think there's a bit more nuance to it than that. The environment is not the only method via which u-boot exchanges data with other parts of the system. The devicetree is another, and its purpose is to describe the hardware. Modifying devicetrees at runtime is expected practice - firmware often generates them at runtime.\n\nThe purpose of the u-boot environment is to allow configuration of the behaviour of u-boot. Ideally it shouldn't have a purpose beyond that.\n\nThe complete list of properties that HPE are concerned with are enumerated in the document:\n\n1. `server_id` (platform model id)\n2. `pca_part_number` (baseboard part no)\n3. `pca_serial_number` (baseboard serial no)\n4. `part_number` (platform product no, set at assembly by factory)\n5. `serial_number` (system serial no, assigned at assembly by factory)\n6. `mac0` (if present: MAC address for dedicated BMC network interface)\n7. `mac1` (if present: MAC address for secondary network interface that may or may not be shared with host)\n\nThe network device schema provides the [`local-mac-address` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter4-device-bindings.rst#local-mac-address-property), addressing `mac0` (6) and `mac1` (7).\n\nThe [`model` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain=1#L39) should encode `pca_part_number` (2) if this is where the GXP SoC is situated. Under that assumption the [`serial-number` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain=1#L53) addresses `pca_serial_number` (3). The baseboard model should be what's driving the EM configs, it represents the hardware that's present.\n\nAs an alternative regarding 1, IBM, for example, embed the platform model string in the `model` property:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/boot/dts/aspeed/aspeed-bmc-ibm-rainier.dts?h=v6.7#n11\n\nThis method might be used to expose `server_id` (1) or possibly `part_number` (4), but really I think we need to have the EM config probe on the baseboard if that's where the GXP SoC is situated.\n\nInformation should be placed where it's designed to go. As far as I'm concerned, that's the devicetree for the properties discussed above, with the caveat that it may be necessary to put the MAC addresses into the u-boot environment for the purpose of enabling networking in u-boot.\n\nIf we have to use the environment to convey some of the information that doesn't fit anywhere else, then so be it. But I think the design point is feasible using specified properties in the devicetree for their designated purpose.\n\n> I don't really buy into the idea that HPe platforms are so unique that they require yet another daemon to communicate data from uboot into dbus\n\nI don't think the design-point of hosting specific data from the devicetree is unexpected. HPE might be the first people to hit on it, but it's certainly more broadly applicable. It's not code that is specific to a HPE platform design. It has broader utility.\n\n> In addition, this document needs unified with https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n\n+1, I've been confused by this several times."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> > IMO, this design is communicating data with uboot, therefore it goes in a daemon that communicates with uboot, https://github.com/openbmc/phosphor-u-boot-env-mgr\n> \n> Let's hold up there. I think there's a bit more nuance to it than that. The environment is not the only method via which u-boot exchanges data with other parts of the system. The devicetree is another, and its purpose is to describe the hardware. Modifying devicetrees at runtime is expected practice - firmware often generates them at runtime.\n\nAt no point did I say that the environment is the _only_ way u-boot communicates with userspace.\n\n> \n> The purpose of the u-boot environment is to allow configuration of the behaviour of u-boot. Ideally it shouldn't have a purpose beyond that.\n\nCool.\n\n> \n> The complete list of properties that HPE are concerned with are enumerated in the document:\n> \n> 1. `server_id` (platform model id)\n> 2. `pca_part_number` (baseboard part no)\n> 3. `pca_serial_number` (baseboard serial no)\n> 4. `part_number` (platform product no, set at assembly by factory)\n> 5. `serial_number` (system serial no, assigned at assembly by factory)\n> 6. `mac0` (if present: MAC address for dedicated BMC network interface)\n> 7. `mac1` (if present: MAC address for secondary network interface that may or may not be shared with host)\n> \n> The network device schema provides the [`local-mac-address` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter4-device-bindings.rst#local-mac-address-property), addressing `mac0` (6) and `mac1` (7).\n> \n> The [`model` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain=1#L39) should encode `pca_part_number` (2) if this is where the GXP SoC is situated. Under that assumption the [`serial-number` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain=1#L53) addresses `pca_serial_number` (3). The baseboard model should be what's driving the EM configs, it represents the hardware that's present.\n> \n> As an alternative regarding 1, IBM, for example, embed the platform model string in the `model` property:\n> \n> https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/boot/dts/aspeed/aspeed-bmc-ibm-rainier.dts?h=v6.7#n11\n> \n> This method might be used to expose `server_id` (1) or possibly `part_number` (4), but really I think we need to have the EM config probe on the baseboard if that's where the GXP SoC is situated.\n> \n> Information should be placed where it's designed to go. As far as I'm concerned, that's the devicetree for the properties discussed above, with the caveat that it may be necessary to put the MAC addresses into the u-boot environment for the purpose of enabling networking in u-boot.\n\n> \n> If we have to use the environment to convey some of the information that doesn't fit anywhere else, then so be it. But I think the design point is feasible using specified properties in the devicetree for their designated purpose.\n> \n> > I don't really buy into the idea that HPe platforms are so unique that they require yet another daemon to communicate data from uboot into dbus\n> \n> I don't think the design-point of hosting specific data from the devicetree is unexpected. HPE might be the first people to hit on it, but it's certainly more broadly applicable. It's not code that is specific to a HPE platform design. It has broader utility.\n\n\nI wasn't very clear I guess.  I have no problem with the information being placed in devicetree, that seems like a reasonable thing to do, for all the reasons you mentioned, I would just like to see that preboot (uboot for now) to userspace communications are done in the same daemon, and the interfaces are such that someone with access to a mainboard could reasonably construct a proper probe statement.\n\n> \n> > In addition, this document needs unified with https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n> \n> +1, I've been confused by this several times.\n\n+2ing this, so it doesn't get lost in the thread."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I would just like to see that preboot (uboot for now) to userspace communications are done in the same daemon\n\nMy immediate feeling is that is too ill-defined to say no to stuff people propose for it, and that it would become a maintenance concern. It's already covering the u-boot environment (which Linux has no visibility of) and the devicetree (which Linux _does_ have visibility of). I don't feel like that is particularly coherent.\n\n> and the interfaces are such that someone with access to a mainboard could reasonably construct a proper probe statement.\n\nCan you unpack what your expectations are here? Where's the line for \"reasonably construct\"?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Will follow up on this point on Discord, but I've gotten the 'okay' for to have folks from HPE (starting with myself, expanding roster as needed) agree to take on a maintainer role for phosphor-u-boot-env-mgr and to base the device-tree -> d-bus daemon we'd like to use from there. The more we've looked into it, the more sense it seems to make to keep this daemon associated with u-boot-specific code.\n\n---------------------------------------------------------\n\nRe: 2 design doc versions-- \n\nShort Summary: The linked doc was initially described (perhaps incorrectly) as a generalized 'file system -> d-bus' design, and described an existing (but no longer relevant) Gerrit submission that enables the existing fru-device daemon in Entity-Manager to source data from device-tree/chosen nodes.\n\nThe other doc (this one) started as an OEM/HPE-specific 'how HPE will leverage the system in the first doc to read from device-tree/chosen nodes' design. After much community discussion, this doc slowly transformed from something HPE-specific into a more generalized 'device-tree -> D-bus' design with applications outside of HPE systems. I think the old doc can be deleted at this point.\n\n-----------------\nA rough ordering of events w/ links:\n\n1. Submitted fru-device daemon code changes to Gerrit for handling device-tree/chosen nodes. Was described to OBMC community as an 'arbitrary file system -> d-bus daemon' -- this got a fair bit of pushback, largely relating to the 'arbitrary file systems' description. This was corrected to narrow focus on 'device-tree nodes' in later discussions.  Gerrit code submission @ https://gerrit.openbmc.org/c/openbmc/entity-manager/+/65669\n\n2. Was asked to submit a design document for the above changes. Submitted the doc @ https://gerrit.openbmc.org/c/openbmc/docs/+/65678 (originally focused on describing the already-submitted code, and describing the reasoning for it)\n\t\n3. Submitted an additional 'OEM/HPE' version of the doc to https://gerrit.openbmc.org/c/openbmc/docs/+/66369 (current doc), intending for the 'generalized' doc to describe a generic method for 'arbitrary file system -> dbus' handling, with the OEM/HPE version giving deeper HPE-specific background, plus going into detail about HPE's specific needs and requirements, along with info on how the 'general' system would be applied to device-tree nodes for HPE's HW requirements.\n\t\n4. Based on community discussions, the  document was changed from a \"arbitrary file system -> d-bus daemon\" to instead discuss an \"HPE FRU -> d-bus daemon\" hosted in the phosphor-u-boot-env-mgr subproject instead of in entity-manager\n\t\n5. After further discussion, got pushback about the 'd-bus chain getting long' (likely due to a convoluted suggestion on my end re: using code in Entity-Manager to decide if an HPE-specific daemon in phosphor-u-boot-env-mgr should be started).\n\t \n6. I realized the community didn't consider 'device-tree -> dbus' to be as objectionable as an 'arbitrary file system -> d-bus daemon' so a rebranding of existing code/plans happened around here. \n\n7. Based on community discussion, I decided to switch design focus to 'device-tree -> d-bus daemon' and started deciding on which fields were necessary + low hanging fruit that made sense to include\n\t\n8. After more community discussion, we decided that the OEM/HPE doc had been edited down into a general use doc, so it was moved out of the OEM/HPE subdirectories and rebranded to the doc we're on now.\n\nOther than the discussion history in it, I think the original doc is irrelevant at this point, and can be removed to future avoid confusion.\n\nI'm still considering creating an additional document (once all this stuff is settled) in the future that gives some kind of general purpose 'here's things to consider and look at when thinking about a new daemon for entity-manager HW ID' doc in the future -- largely because of how confusing I found things at first.\n\nIf/when that happens, such a doc would include info like existing daemons, and design preferences like how we'd prefer one channel per daemon, or to keep daemons associated with their data sources -- both of which are seemingly violated by current fru-device daemon implementation in the Entity-Manager subproject. Things like that definitely caused plenty of extra confusion on my end early on."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This sounds very similar to the Tyan file format (which FRU device handles) or the VPD IBM parser design.  Could you please add those into your background?  Ideally also with details on why this design is taking a different approach."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 13,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not quite understanding this section.  If there are portions that are required to make this work that cannot be open sourced, what's the point of this design?  If nobody can build a GXP OpenBMC image that works, why open source just a portion?  Just keep the proprietary implementation, support it, and call it done.  Calling something \"OpenBMC\" without open sourcing the code to actually make it work it doesn't seem appropriate, or useful to a user."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm an open source enthusiast as much as any other, but I think we need to be a bit pragmatic here. Is it ideal? No. Is the bootblock required by their secure-boot architecture? Yes. Are there other similarities in the ecosystem? Well, the Aspeed boot ROM isn't open source either (this would be useful just for inspection purposes).\n\nLet's acknowledge that HPE are making pretty good progress with making the *rest* of their BMC stack open source. I prefer progress over perfection."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> I'm an open source enthusiast as much as any other, but I think we need to be a bit pragmatic here. Is it ideal? No. Is the bootblock required by their secure-boot architecture? Yes. Are there other similarities in the ecosystem? Well, the Aspeed boot ROM isn't open source either (this would be useful just for inspection purposes).\n\nRight, but I can do a build with the ROM as part of it.  Maybe I misunderstood, so let me ask the pointed question:\n\nWhen this design doc is done, can I build a bmc that boots on an HPE platform and see this feature function as intended?  From the sounds of this text block the answer is no, but given the above that we're comparing to the aspeed boot rom, which I CAN build and run (even if it's a binary blob), that's a different consideration entirely.\n\n> \n> Let's acknowledge that HPE are making pretty good progress with making the *rest* of their BMC stack open source. I prefer progress over perfection.\n\nAbsolutely.  I mentioned on discord that this point is probably out of scope for this design discussion.  Resolving in this context."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As I understand it, you can take HPE's OpenBMC tree, build it and boot it on one of their supported platforms, so long as you've done the appropriate key management magic to allow booting your firmware build.\n\nThat's based on the statement by Jean-Marie at OSFC here, at about 3m50s:\n\nhttps://www.osfc.io/2023/talks/provision-open-source-firmware-system-at-scale/"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 61,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Getting this into an upstream uboot or openbmc uboot would presumably be a prerequisite of acceptance of this design?  has that discussion been started?  Can you link it?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 61,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "In the short term, an HPE-fork of OpenBMC will include recipes to point to the public HPE-fork of u-boot (currently needed for more than just this HW identification bit), \n\nIn the longer term, there's an ongoing effort to boot HPE hardware on top of the latest 'official' u-boot code with minimal changes on top, and we plan to work on upstreaming that once it's ready to go."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is openbmc pointing at this u-boot fork?\n\nhttps://github.com/openbmc/openbmc/blob/8a4267b756cd3dadf58a01d1c96764f8d80077ee/meta-hpe/meta-gxp/recipes-bsp/u-boot/u-boot-common-gxp_2020.10.inc#L12C1-L13C1\n\npresumably HPe would need to follow the process that Nuvoton and Aspeed did, and get it included in https://github.com/openbmc/u-boot  Have you discussed that with Joel?\n\nAs written this seems like it's in direct contradiction of\nhttps://github.com/openbmc/docs/blob/master/meta-layer-guidelines.md\n\nTrying to propose \"generic\" solutions that apply to everything when the underlying implementation seems like we're making a huge amount of technical debt.\n\nThe fact that HPe is both a system manufacturer, and makes its own BMC was maybe why this was allowed?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "HPE has a lot of working hardware on OBMC based on internal proof of concept code that wasn't originally built with upstreaming acceptance in mind. A few of us have been put to the task of porting whatever we can to from 'proof of concept' to 'upstream ready' with an aim of reducing the difference between mainstream code and internal dev builds as much as possible.\n\nIn the shorter term, I believe the plan is to have a public HPE fork of OpenBMC available on Github with a handful of recipes added that point to any HPE-specific repos with components that haven't gone through the OBMC acceptance processes. \n\nIn the longer term, we're going to be working to upstream whatever we can, with an ultimate hope of not needing an HPE-specific fork(s) anymore. We'll be looking to knock off training wheels by removing recipes for forked components when and where we can over time.\n\nIn the medium-longer term for u-boot, there is an effort to work out a 'minimal' set of changes that will allow HPE hardware to boot on top of mainstream u-boot that I believe has been seeing progress. The current plan is to eventually upstream that effort once it's ready."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In the past we haven't put manufacturer specific daemons in entity-manager.  the IBM VPD is parsed by its own repo.  Any reason we'd put it in EM this time around?  If we're changing that, should we move the IBM daemon into EM?\n\nThe doc you reference still has quite a few open comments, and is really difficult to reconcile with this design."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This wouldn't be a manufacturer-specific daemon. It would be a small amount of code exposing the root `model` and `serial-number` devicetree properties on D-Bus that is applicable on almost any system."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Looking like we'll probably be hosting this proposed daemon in phosphor-uboot-env-mgr after all. \n\nThe more I've looked into that option after it was last suggested, the more it seems like it makes sense to separate these d-bus daemons according to the data source this way."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems like an issue in naming.\n\nEntity manager files are intended to represent what physically exists on a component such that it's not debatable what the interfaces are, and those without OpenBMC experience can write config files.\n\nxyz.openbmc_project.Inventory.Decorator.Compatible doesn't represent anything about the physical board, and means nothing in the real world without knowing exactly how the software is configured.  I suspect we would need naming that conveys something to the effect of: \"HPe format FRU manufacturer field equals X\"\n\nThus we're not relying on a particular distro/software config to write those Compatible flags, which would require the EM config writer to understand a lot more about how OpenBMC is structured, and whos probe elements might be subjective.\n\nYou'll notice the existing FRU device entries follow this \"IPMI FRU Manufacturer field equals X\" pattern.  An example of an IBM OEM parser is below.\n\nhttps://github.com/openbmc/entity-manager/blob/8d2ed842534cc63b446321faa17b5d400350f6a3/configurations/rainier_1s4u_chassis.json#L24C23-L24C23\n\nthat example then publishes xyz.openbmc_project.Inventory.Decorator.Compatible as a result.  Your design is inverting that.  At a minimum we need to use something other than Compatible as the EM probe, so we don't have a disconnect between which object owns the Compatible interface."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> xyz.openbmc_project.Inventory.Decorator.Compatible doesn't represent anything about the physical board, and means nothing in the real world without knowing exactly how the software is configured. I suspect we would need naming that conveys something to the effect of: \"HPe format FRU manufacturer field equals X\"\n\nWhat about https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml ?\n\nIt lives in the `Decorator` namespace, but it does all the things we need it to do."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Decorator.Asset again, doesn't mean anything in the real world, so when we do board ports, people will need to go look up what exists.\n\nHow about something like:\nSpiFlashFru(Model = )\n\nThe physical board has a fru field in flash, which is what we're technically probing on, and exists in the real world.  \"devicetree\" doesn't exist to a hardware engineer, so I'm intentionally avoiding using it as an interface name."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> \"devicetree\" doesn't exist to a hardware engineer, so I'm intentionally avoiding using it as an interface name.\n\nSure, I don't think it's necessary to include implementation details such as \"devicetree\" in an interface name.\n\n> The physical board has a fru field in flash, which is what we're technically probing on, and exists in the real world.\n\nThat's not what this document asserts though. From the description in \"Background and References\":\n\n> For GXP-based Gen 11 HPE platforms, proprietary HPE-controlled bootblock firmware communicates with a secure element to provide necessary VPD. This process uses a driver whose implementation is strictly license-controlled and cannot be publicly released. The open source portions of the boot chain must adapt to the bootblock's reserved memory application binary interface (ABI) for providing VPD from the secure element.\n\nand \n\n> Additionally, code in u-Boot gathers MAC addresses for the BMC's network interfaces, along with retrieving a 'server_id' value from an embedded CPLD-based memory device. This value is unique to each model of HPE platform, and will be used for platform-wide identification. In comparison, the data in the aforementioned blob may be used for recognizing finer details like specific board revisions for a given platform.\n\nThis suggests we should have something like `SecureElement(Model = )` for the baseboard, or `CPLD(Model = )` for the platform?\n\nThat _would_ tend to make it HPE-specific, but you're kinda forcing that by trying to strip out any abstraction?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm currently leaning towards 'BMCPrebootContext' that was suggested as a 'generic' name in the discord chat, especially since it'll still apply even if the device-tree is altered from somewhere other than u-boot.\n\nThat still sound good to everyone?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please wrap your document on 80 character boundaries.  There are lots of issues, this is only one.  Please fix all of them.\n\nI'm assuming it wasn't intentional for these to be headings.  They appear to be text."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I did intentionally turn these into headings that could be referenced via links -- based on a suggestion I got previously -- and found that wrapping the characters at the 80 character boundaries broke for the heading format for longer 'titles.'\n\nI found at least one other accepted design doc (the only one I checked with a more complex list of 'alternatives' like the ones here) that used the same formatting.\n\nI've also since discovered I can add line-breaks that don't break formatting with <br/>, so I've added that to the next draft."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 146,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Agreed."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 196,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Would increase code reuse and testing."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 196,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 199,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this mean?  The \"preferred\" design has the same chain length, right?  It just puts a new daemon in the entity-manager repo instead of reusing an existing one?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 199,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've gone ahead and overhauled how this 'alternative' is described since we're actually looking to rely on phosphor-uboot-env-mgr now -- but I think part of the original complaint I got was re: having an HPE-only daemon in phosphor-uboot-env-mgr and trying to figure out how to make sure the daemon would only fire off on HPE machines and not waste cycles on non-HPE systems. \n\nThere may have been a suggestion to have behavior in the HPE daemon change based on what was read onto d-bus from the existing fru-device daemon, which may have been part of the \"chain is getting uncomfortably long\" comments."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 199,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 201,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this a con?  Saving cycles doesn't seem like a bad thing, even if it isn't important?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 201,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Better abstraction is another pro."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 209,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "?  what does this mean?  I'm really not sure why the location of the code would change how things are able to be leveraged?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "In addition, remove the mention of GPIO->dbus daemon.  Such a daemon has been discussed so many times that there's a doc on why it's not going to be permitted."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See https://github.com/openbmc/docs/blob/master/anti-patterns.md#dbus-interface-representing-gpios"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for the heads up -- removed."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 214,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 216,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not really following how this is different aside from where you're putting the new daemon.  FWIW, putting all uboot communication code in the same place seems like it would save significant dependencies?\n\nIf I'm understanding the design correctly, this alternative would be my preference."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 216,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Good point. This 'alternative' has now been removed since the design is now aiming to land a non-HPE-specific daemon in phosphor-u-boot-env-mgr."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 216,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "https://gerrit.openbmc.org/c/openbmc/docs/+/65678 still lists \n\n> This proposal aims to leverage\n[phosphor-u-boot-enviornmental-manager](https://github.com/openbmc/phosphor-u-boot-env-mgr)'s\nu-Boot -> D-Bus data transfer functionality in order to bridge the gap from\nu-Boot to make passed-through HW data available on D-Bus, where it can be acted\nupon by Entity-Manager processes.\n\n\nPresumably that needs updated and synced up with this one?\n\n\nFWIW, I'm having a lot of trouble syncing those two documents in my head.  They're effectively solving the same problem, were written by the same author, and have tons of overlap between them, while not being consistent in what they say the implementation is.\n\nCan we combine them please into a single \"Here's how to detect HPe hardware\" document so that we have one consistent source for how this is designed?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Absolutely. I've attempted to give a brief history of that doc and this one in another comment, but essentially, that one started out as a \"general file system -> dbus\" design doc, and this doc started as a \"HPE-specific use of general file system to read from device-tree/chosen -> dbus\" design doc.\n\n(in retrospect, if I would have called it a devicetree -> dbus doc from the start, which is what we were looking to do with device-tree/chosen at the time, I think I would have gotten less initial pushback).\n\nAt some point, this doc had enough HPE-specific stuff stripped out in revisions to just call it a 'generalized' version. \n\nA new HPE-specific doc about adding HPE-specific fields is likely to come in the future. I'm thinking I'm just going to mark the other doc as 'closed' to avoid future confusion."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 217,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why not just enable phosphor uboot env manager by default?  Seems similar to what we're already proposing, just we're instead putting code in EM."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "This definitely makes more sense to me now, especially since this is no longer an HPE-specific daemon being proposed to be hosted in phosphor-uboot-env-mgr"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 222,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 228,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "not sure I agree with this, and as worded, \"feeling messy\" isn't very easy to connect with given its so abstract.\n\n\nAt the end of the day, SOME daemon needs to translate the raw data structures into high level DBus interfaces.  This can be:\n\nEntity-manager.  Given the fact that entity-manager doesn't currently talk directly to hardware, this seems ill advised, and would cause worse failure modes (failure to get uboot data would cause failure of all EM configs).\n\nphosphor-u-boot-env-mgr.  This would be my preference, given it already has a design for exposing uboot information to DBus.  Even if the code doesn't currently do it exactly the way we want, having all the uboot->dbus communication code in one place seems like a good idea.  I would advise enabling this daemon by default, similar to what the \"put this in entity-manager\" approach is wanting\n\nNew daemon in entity-manager repo.  I'm not sure entity-manager is the right fit here, as I'm not really sure what code this implementation and entity-manager would share.  Large amounts of shared code instead of copied code would be the only reason I would support this, but I don't really see it.  Most of the code in EM is specific to EM."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 228,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "It was on the basis that it is an alternative to fru-device, which also lives in the EM repo, and it doesn't have anywhere near the complexity of something like the IBM VPD stuff."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 228,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> It was on the basis that it is an alternative to fru-device, which also lives in the EM repo, and it doesn't have anywhere near the complexity of something like the IBM VPD stuff.\n\nmy key point is that I would like to see like communication paths put in the same daemon.  communicating u-boot -> userspace seems like a class of communication that organizationally should live together.\n\nAs far as where it specifically lives, if we really want EM, I'm fine with that, but lets start by moving phosphor-uboot-env manager in, and go from there."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 228,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I guess this comes back to my concerns about a pre-boot communications daemon in https://gerrit.openbmc.org/c/openbmc/docs/+/66369/comments/1a93aded_d83dc568"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 228,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The more I've thought about it, the more I find myself thinking the suggestion to host this daemon in phosphor-u-boot-env-mgr makes sense, since from the OBMC kernel's perspective, a flat device tree is  being handed off from u-boot.\n\nI believe there was a comment thread somewhere that asked if folks from HPE would be willing to step up as maintainers for that repo, and I've gotten the 'okay' to agree to that, if there's still interest. \n\nI'll bring it up on Discord for community discussion,"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 228,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 245,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Still need to answer who will maintain this code.  Presumably the existing entity-manager maintainers don't have a GXP system, so is someone from HPe getting added to reviews for correctness?  Please get that person added as a reviewer and start doing code reviews of EM patchsets."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 245,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've updated the organizational section to discuss the use of phosphor-u-boot-env-mgr, and having HPE maintainers (starting with myself) on board."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 245,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 252,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That's not really what this section is for.  Are you going to write:\n\nUnit tests?\nFunctional tests?\nManual tests?\n\nYou've called out which platform you plan on testing on, which is good, lets just get the next level of detail on how you intend to test this."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 252,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 268,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "786a615839751a73263918036e6292d6a60c0ec2",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/19",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705439063,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Updated the wordwrap boundaries for the commit statement body"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why a shared ram region instead of uboot environment variables?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "answer in the doc please."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 59,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Have you tried this already? The Names property on that interface is an array.  I wonder if EM can handle that yet."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Not yet-- I had been thinking properties like 'model' could be added under Decorator.Compatible, but after your question, I had a look in phosphor-dbus-interfaces's /Inventory/Decorator/* and it clicked that xyz.openbmc_project.Inventory.Decorator.Asset would a far better candidate, especially since it already defines properties for Model and Serial-Number\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/0aadbe41aadd155d91e2bda1c471ac85a7dffee9/yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml\n\nI'm going to update the doc to reference that interface instead, if there are no objections."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Yea, that one would be OK.  These inventory.decorator interfaces were originally inventory to decorate existing inventory objects, hence the name, but this wouldn't be the first time they're being used somewhere else as the Compatible one is already being used by code update objects."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 267,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "b94af9a09614769a2f3ac016ec51a258ce4011d1",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/20",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705508394,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Refactored references to 'xyz.openbmc_project.Inventory.Decorator.Compatible' into xyz.openbmc_project.Inventory.Decorator.Asset as described @ https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml\n\nsince this interface already has properties for 'model' and 'serial number'"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 267,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "fe7dd452d3651767b84097257a80f255d1518433",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/21",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705514599,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "NO_CHANGE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The latest commit used 'fold' to word-wrap at 79 columns. Some manual modifications were made to the inline links, since fold is not aware of how those are to be displayed."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "This direction is fine with me."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "all good points"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for the in-depth discussion, everyone - it took longer than I expected, but I hope I've addressed all the points everyone brought up.\n\nFollowing community suggestions, we're now focusing on the phosphor-uboot-env-mgr repo for hosting the daemon we're discussing.\n\n--- re: phosphor-uboot-env-mgr' repo maintenance ---\nIf there's still interest in the idea, I've gotten the 'okay' at HPE offer to serve as maintainers (starting with myself, roster expanding as needed) for the phosphor-uboot-env-mgr repo. \n\nI will bring the topic up on Discord for further discussion."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 267,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "ec777dedb71dd67d3cb705f799e69fc548abcdaf",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/22",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711037961,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 252,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 267,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "a05407033dd5ec2c7ee1efede3ba307fb76ca49b",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/23",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711038011,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 267,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 282,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "a3c3ce2aa1f1b6827a1620437baeda2638dc3a93",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/24",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711041517,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Chris, I think my main concern is around the other document linked that I've commented on. I made some minor suggestions as well."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "How do folks feel about creating an interface named 'xyz.openbmc_project.MachineContext' for the proposed daemon to send data to?"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is already mentioned in the previous paragraph, so I think we can drop it. After dropping it I think you can merge the remaining sentence in this paragraph into the following paragraph."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 69,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for the suggestion"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm not entirely comfortable with this it references a run-time-y concept rather than the hardware. How about `xyz.openbmc_project.Platform` or `xyz.openbmc_project.Machine`? I feel like the name ties the content more closely to the hardware - but it is just a straw-person suggestion for a bit of a vague feeling. I've also been wrong about my feelings for DBus interfaces for probe statements before, so some input from e.g. Ed would be good."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Two of the suggestions I originally heard from Ed were \"UbootDeviceModel\" or \n\"if you really wanted to be generic, you could call it BMCPrebootContext.\"\n\nSounds like we've got one vote against 'BMCPrebootContext,' and I'm not sure about using 'UbootDeviceModel' particularly because I'm aware of efforts by HPE and (I believe it was) IBM with kernel-level efforts from Xilinx to enable dynamic modifications to the device tree after u-boot is 'done.' \n\nIf the choice was between 'Platform' or 'Machine,' I think I like 'Machine' a little better since this interface will include information that applies to a specific machine, but may not apply platform-wide -- things like MAC addresses or serial-numbers.\n\nWhat do folks think about calling it 'xyz.openbmc_project.MachineContext'?\n \nI'll bring this up in up on Discord for further discussion."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please trim trailing whitespace \ud83d\ude0a"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done!"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 145,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Isn't this document proposing some additions to `phosphor-uboot-env-mgr` instead?\n\nAlso I think you agreed to drop the other document and flesh this one out instead? It would be helpful to have more discussion of the daemon in the proposed design section here."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 145,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Remove the leading `<(` and the trailing `)>` - the anchor `href` is broken in the rendered markdown:\n\n```\n<a href=\"%28https%3A//gerrit.openbmc.org/c/openbmc/docs/+/65678%29\">A daemon in Entity-Manager</a>\n```\n\nWhich yields the link\n\n```\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/a3c3ce2aa1f1b6827a1620437baeda2638dc3a93/designs/%28https%3A//gerrit.openbmc.org/c/openbmc/docs/+/65678%29\n```\n\nHover over the link here to see what I mean:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/a3c3ce2aa1f1b6827a1620437baeda2638dc3a93/designs/entity-manager-hw-detect-via-device-tree.md#proposed-design"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 145,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for the markdown explanations. I've gone ahead and removed the entire link since it goes to a now-outdated design doc anyways."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 145,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Good catch! And I'm just realizing that link goes to the old soon-to-be-abandoned design doc this one has superseded.\n\nIf there are no objections, I'll go ahead and mark the older doc as abandoned."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 271,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 286,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "8422c6799981adcaa86784168e1439cfe4a7d373",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/25",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711134630,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Don't we already have dbus interfaces for all of these attributes?  Why do we need to define a new dbus interface?  \n\n\nIt seems like you're describing:\n\nu-boot -> new daemon -> entity-manager -> dbus inventory objects.\n\nWhy not cut entity-manager out of it and just make the dbus inventory objects directly? (maybe this belongs in an alternatives)\n\nAny reason why we couldn't make the same arbitrary-ish interface that FruDevice makes?  Unfortunately that interface is also not-documented, but we could fix that.  Most of these fields you've listed already have analogs in IPMI."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 50,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've added a new alternatives item (\"addendum\") to discuss some of the existing interfaces considered and potential names we've already looked at.\n\nre: why not cut out entity manager, further discussion seems to be ongoing on Discord, but to quote Andrew J, who put it much better than I could:\n\n\"In my mind there are two motivations for making it work with EM:\n\nA recognised and central way to describe the components (that's slowly getting more formalised with the schema definitions)\nThe Exposes statement in each config that advances the discovery cycle and allows them to exploit dbus-sensors\"\n\n(copy/pasted for the benefit of anyone reading this later without discord context).\n\nWe could also continue discussion about interface naming on the new 'alternative' item in the doc I'm about to push up if folks have more thoughts!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 266,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 281,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "1a97a7e962e450f186997a39a3f8b9c84eacf3a4",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/26",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711145174,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I've added a new 'Alternatives' item at the bottom (\"Addendum\") that discusses the state of the d-bus interface naming discussion."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "This is probably a good place to continue d-bus interface naming discussions."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Seems like we're leaning towards xyz.openbmc_project.MachineContext, now defined @ \n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/73260"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 225,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Based on comments from phosphor-dbus-interface maintenance, we're now leaning towards leveraging the existing interfaces for Inventory.Decorator.Assets (for .Model and .SerialNumber) and Inventory.Item.NetworkInterface (for .MACAddress) using path /xyz/openbmc_project/MachineContext.\n\nThis part of the doc will be updated pending community discussion on this combination of interfaces and dbus path \n\nCurrent discussion here: https://gerrit.openbmc.org/c/openbmc/phosphor-u-boot-env-mgr/+/71512/comment/86b03e06_27daefad/"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 289,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "059e87f089a1d58a46062a7568a9798f6ccfaef1",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/27",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711145469,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 294,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 309,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "eb44cf6f34527dd8fee3f59d499061ac86112396",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/28",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711145919,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 289,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 304,
            "sizeDeletions": 0
        },
        {
            "number": 29,
            "revision": "1a8b33daf684200b62cceca1c2ba7ffe7ee95999",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/29",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711146590,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Chris, just a couple of points on style."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Need to delete the stray backtick \ud83d\ude0a"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 229,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I stronly prefer you don't use a C-style comment here. I'd rather you use a multi-line list entry:\n\n```\n1. xyz.openbmc_project.Decorator.\\*\n\n   \"Doesn't represent anything about the physical board\" - Ed Tanous.\n\n2. xyz.openbmc_project.FRUDevice\n\n   The data is not coming from a FRU device.\n```\n\netc. Or, use a table with \"Proposal\" and \"Reason for Rejection\" columns.\n\nRegardless of the choice, please audit the rest of the document and fix any other instances in a similar way."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 229,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The formatting tools in the CI process *really* didn't care for a lot of the formatting tricks I tried and kept stripping the formatting out-- so I ended going with 'Proposal/Rejection\" lines that seem to look alright."
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "line": 229,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 290,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 305,
            "sizeDeletions": 0
        },
        {
            "number": 30,
            "revision": "6fba9e5b1ad8d04715fd6a2fdfc985ab92a58f4e",
            "parents": [
                "5ae481581052b996966ef4c3df18afb12b1fbda8"
            ],
            "ref": "refs/changes/69/66369/30",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711382348,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Mostly formatting changes to the 'interfaces proposed/rejected' alternatives list toward the end of the doc"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "A working implementation of this code has been pushed to gerrit under the phosphor-u-boot-env-mgr repo to help simplify discussions\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-u-boot-env-mgr/+/71512"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "A simple implementation of the this doc's Device Tree -> D-Bus design can be found @ 71512: service: device-tree node to d-bus for hw id data | https://gerrit.openbmc.org/c/openbmc/phosphor-u-boot-env-mgr/+/71512\n\nIt may be easier to look that over before diving into the minutae of this doc.\n\nAn 'xyz.openbmc_project.MachineContext' interface has been defined according to this design @ 73260: defines a new interface for machinecontext | https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/73260"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "designs/entity-manager-hw-detect-via-device-tree.md",
                    "type": "ADDED",
                    "insertions": 306,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 321,
            "sizeDeletions": 0
        }
    ]
}