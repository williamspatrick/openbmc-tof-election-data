{
    "project": "openbmc/libcper",
    "branch": "main",
    "id": "I81b0c7770ce07c585eda3d3dda702f88a52c3918",
    "number": 72637,
    "subject": "Fix base64 malloc sizes",
    "owner": {
        "name": "Andrew Adriance",
        "email": "aadriance@nvidia.com",
        "username": "aadriance"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libcper/+/72637",
    "hashtags": [],
    "createdOn": 1720553763,
    "lastUpdated": 1721079264,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1720553763,
            "reviewer": {
                "name": "Andrew Adriance",
                "email": "aadriance@nvidia.com",
                "username": "aadriance"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1720553787,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1720553787,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1720553832,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/87575/ : SUCCESS"
        },
        {
            "timestamp": 1720572569,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1720667604,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1720667651,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1720710629,
            "reviewer": {
                "name": "Andrew Adriance",
                "email": "aadriance@nvidia.com",
                "username": "aadriance"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1720803104,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1720876128,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1721060756,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1721078672,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1721079246,
            "reviewer": {
                "name": "Andrew Adriance",
                "email": "aadriance@nvidia.com",
                "username": "aadriance"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1721079264,
            "reviewer": {
                "name": "Andrew Adriance",
                "email": "aadriance@nvidia.com",
                "username": "aadriance"
            },
            "message": "Abandoned\n\nReplaced with https://gerrit.openbmc.org/c/openbmc/libcper/+/72777"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "4736573e89d75058004a0efd87be1af0c55beddd",
            "parents": [
                "a5b3d49b9e02ae5194f9c7dfc9fe3eb0e4bd39c1"
            ],
            "ref": "refs/changes/37/72637/1",
            "uploader": {
                "name": "Andrew Adriance",
                "email": "aadriance@nvidia.com",
                "username": "aadriance"
            },
            "createdOn": 1720553763,
            "author": {
                "name": "Andrew Adriance",
                "email": "aadriance@nvidia.com",
                "username": "aadriance"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why?  Is there a pointer to documentation?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrew Adriance",
                        "email": "aadriance@nvidia.com",
                        "username": "aadriance"
                    },
                    "message": "Unfortunately the underlying library here is lacking in this regard."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Do we know why this doesn't cause unit tests failures every time?  Is there randomization somewhere that we need to explicitly allow a seed for?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrew Adriance",
                        "email": "aadriance@nvidia.com",
                        "username": "aadriance"
                    },
                    "message": "The tests generate randomized CPERs as part of the process. I think in the long run we'll want a set of CPERs of known edge cases that should be handled gracefully."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK.  We should look at that randomization and just run all sizes in the future.  No real need to randomize for a library so small.\n\nOh well, problem for tomorrow.  Thanks for the info."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Adriance",
                        "email": "aadriance@nvidia.com",
                        "username": "aadriance"
                    },
                    "message": "respond to current comments"
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Take a look at the encoded_size() function here:\nhttps://www.boost.org/doc/libs/1_68_0/boost/beast/core/detail/base64.hpp\n\nWe need the equivalent here, and it doesn't look like the base64 library we have provides one, so we'll have to invent one, but it should be identical to the one I linked."
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Andrew Adriance",
                        "email": "aadriance@nvidia.com",
                        "username": "aadriance"
                    },
                    "message": "ACK, do we think we should switch to a better implemented library given this issue all up or run with rolling our own endcoded_size() function?"
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think in the future we should just embed a simple base64 decoder instead of trying to take a dependency.  A quick look shows that base64 implementations in C are ~80 lines of code.  We have almost that much config in just managing the dependency.\n\nbut in the context of this commit, we need to put in an encoded_size method that returns the correct size to malloc for a given input."
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "if you're looking to vendor utility code, [ccan](https://github.com/rustyrussell/ccan) is often a good starting point. for instance it has a [BSD/MIT licensed base64 module](https://github.com/rustyrussell/ccan/tree/master/ccan/base64)"
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Thanks for the pointer."
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "https://gerrit.openbmc.org/c/openbmc/libcper/+/72777\n\nI think obsoletes this patch."
                },
                {
                    "file": "cper-parse.c",
                    "line": 338,
                    "reviewer": {
                        "name": "Andrew Adriance",
                        "email": "aadriance@nvidia.com",
                        "username": "aadriance"
                    },
                    "message": "Agree, abandoning."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "sections/cper-section-cxl-component.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "sections/cper-section-ccix-per.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "sections/cper-section-cxl-protocol.c",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "cper-parse.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "sections/cper-section-arm.c",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "sections/cper-section-ia32x64.c",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 20,
            "sizeDeletions": 8
        }
    ]
}