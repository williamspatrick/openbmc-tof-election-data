{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I1240b951d6e37adc1aad5ad3b19144f6baa64998",
    "number": 62825,
    "subject": "add hysteresis param to parseThresholdsFromAttr()",
    "owner": {
        "name": "Christopher Sides",
        "email": "christopher.sides@hpe.com",
        "username": "csides-hpe"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/62825",
    "hashtags": [],
    "createdOn": 1682371194,
    "lastUpdated": 1711553213,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1682371194,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1682371226,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1682371226,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1682371265,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/64843/ : FAILURE"
        },
        {
            "timestamp": 1682371296,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1682371340,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1682371341,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1682371649,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/64844/ : SUCCESS"
        },
        {
            "timestamp": 1682372633,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1683676832,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1683677822,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1689963888,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1690938732,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1692213320,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1693239269,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1693240396,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1693243707,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1694810152,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694810195,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694810195,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1694810235,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/74168/ : FAILURE"
        },
        {
            "timestamp": 1694810424,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1694810439,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694810439,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1694810488,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 5: Patch Set 4 was rebased"
        },
        {
            "timestamp": 1694810519,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1694810519,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1694810520,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/74169/ : ABORTED"
        },
        {
            "timestamp": 1694810982,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/74171/ : SUCCESS"
        },
        {
            "timestamp": 1694811241,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1694813646,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1695322681,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1705598191,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 6: Patch Set 5 was rebased\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1705598217,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705598217,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1705598231,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/78140/ : FAILURE"
        },
        {
            "timestamp": 1705599027,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1705599075,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1705599232,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1705603711,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1705603766,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705603766,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1705603819,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1705604025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78156/ : SUCCESS"
        },
        {
            "timestamp": 1706565274,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1706568050,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1706734427,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7:\n\n(2 comments)"
        },
        {
            "timestamp": 1706822262,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Uploaded patch set 8.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1706822311,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1706822311,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1706822553,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78687/ : SUCCESS"
        },
        {
            "timestamp": 1706823510,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1707443827,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1711051741,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9: Patch Set 8 was rebased\n\nCopied Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR **changekind:TRIVIAL_REBASE** OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711051766,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711051767,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1711052132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81111/ : SUCCESS"
        },
        {
            "timestamp": 1711093219,
            "reviewer": {
                "name": "Jeff Lin",
                "email": "JeffLin2@quantatw.com",
                "username": "JinFuLin"
            },
            "message": "Patch Set 9: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1711118651,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1711415765,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 9: Code-Review+2"
        },
        {
            "timestamp": 1711553213,
            "reviewer": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "bf8ca22b9ca64729248cd3b6b860545f1433d944",
            "parents": [
                "9a472e8ed1a0da677d2e28446db87b55677b8d83"
            ],
            "ref": "refs/changes/25/62825/1",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1682371194,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 23,
            "sizeDeletions": 3
        },
        {
            "number": 2,
            "revision": "2bbe5522e5caf3b079d1a3eb1ae485721dcea9ec",
            "parents": [
                "9a472e8ed1a0da677d2e28446db87b55677b8d83"
            ],
            "ref": "refs/changes/25/62825/2",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1682371296,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You say it's standard without putting any links to any sort of documentation on why this is a standard.  This is not a standard I've ever heard of, I've seen 1 generally."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The number 2.55 was pulled from a value that gets applied during Sensor object init if no other hysteresis value is specified. That said, I can agree with looking to avoid magic numbers here.\n\nI'm currently looking at the idea of using 'NaN' as a default value, then having the Sensor 'update' function *not* overwrite existing threshold fields with NaN when encountered."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Another alternative would  be to add a hysteresis parameter to parseThresholdsFromAttr with a default value of NaN (what this fix does, but with default value NaN instead of 2.55). \n\nIn this path, instead of changing Sensor update calls to *not* overwrite Sensor thresholds with NaN, we'd just leave it up to callers of parseThresholdFromAttr to specify a hysteresis value for their hardware instead of relying on values chosen during the usual Sensors init."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> The number 2.55 was pulled from a value that gets applied during Sensor object init if no other hysteresis value is specified.\n\nThen say this, don't say it's a \"standard value\", just say it matches what existed before, and doesn't change behavior.\n\nMy preference would be for the later, just pass the value in with some kind of default, but I haven't looked at the sensor code in a while."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "but doesn't this change behavior for existing systems?\n\nAs-is, there's already some hysteresis defaults specified in the Sensor implementation of 1% of sensor range.  That seems better than a hardcoded value.\n\nhttps://github.com/openbmc/dbus-sensors/blob/38857578d7243fb60f2b266d291526b5b97d0fc5/src/sensor.hpp#L72"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "As I understand it, only Intel code uses parseThresholdFromAttr at this time, and that '0' value hardcoded in now is a semi-recent addition in response to an Intel-specific issue @ https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61744/\n\nI believe the issue is that (originally, before the Intel '0' fix)\n1) parseThresholdFromAttr didn't get a hysteresis value passed in, and in turn, didn't specify a value for Hysteresis in the vector that it created. \n\n2) the Sensor Update function (I believe only called from Intel code- by passing it a vector returned by parseThresholdFromAttr) would encounter the 'unspecified' field and would write 'NaN' as an update for the field to the Sensor, (likely) overwriting a '2.55' value that's applied to the hysteresis field during Sensor object init steps.\n\nAfter the Intel fix was accepted, a HW-specific hysteresis value of '0' will be always written when Sensor update() is called with the return from parseThresholdFromAttr().\n\nRight now, only Intel is using this pathway, so there aren't any conflicts I'm aware of. This fix discussion here is aimed at removing anything HW-specific if possible, just since I happened to notice it while looking through reviews at the time."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> As I understand it, only Intel code uses parseThresholdFromAttr at this time, and that '0' value hardcoded in now is a semi-recent addition in response to an Intel-specific issue @ https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61744/\n\nGotcha, I wasn't aware of this background.\n\n> \n> I believe the issue is that (originally, before the Intel '0' fix)\n> 1) parseThresholdFromAttr didn't get a hysteresis value passed in, and in turn, didn't specify a value for Hysteresis in the vector that it created. \n> \n> 2) the Sensor Update function (I believe only called from Intel code- by passing it a vector returned by parseThresholdFromAttr) would encounter the 'unspecified' field and would write 'NaN' as an update for the field to the Sensor, (likely) overwriting a '2.55' value that's applied to the hysteresis field during Sensor object init steps.\n> \n> After the Intel fix was accepted, a HW-specific hysteresis value of '0' will be always written when Sensor update() is called with the return from parseThresholdFromAttr().\n> \n> Right now, only Intel is using this pathway, so there aren't any conflicts I'm aware of. This fix discussion here is aimed at removing anything HW-specific if possible, just since I happened to notice it while looking through reviews at the time.\n\nACK"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The change @ https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/62826/1 will prevent IntelCPU functionality from breaking if/when this change is accepted."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The solution turns out to be a little more complex than hoped for.\n\nI got pulled in some other directions for a bit, but I'm still looking into and working on solving this (likely) future-issue."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Lookin forward to your update"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "se"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 519,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This looks like it's just a bug.  I suspect this should've been std::numeric_limits<double>::quiet_NaN()"
                },
                {
                    "file": "src/Thresholds.cpp",
                    "line": 519,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "If I remember correctly, the fix @ https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61744/comment/441a01e1_978d2110/ solved an issue where NaN was always being written to a Sensor hysteresis field during Sensor 'update' calls using data return from parseThresholdFromAttr().\n\nThe accepted fix (I think my comments came juuust barely too late) there was to hardcode hysteresis value '0' in a way that would apply to anything calling parseThrsholdFromAttr() then using Sensor 'update' with the returned data.\n\nAt last check, Intel code is the only one currently making use of that function, and that '0' value is a hysteresis value that makes sense for Intel devices, but potentially not other devices (which I understand generally use a value of '2.55' during an 'populate empty fields' step if no other hysteresis value is specified).\n\nMy current thinking/investigation path here is to look into the 'update' function (currently only used by Intel code after calling parseThresholdFromAttr, I believe - but need to confirm again) and maybe see if it makes sense to have it *not* overwrite fields if 'NaN' is specified.\n\nI think overwriting hysteresis fields with 'NaN' is what caused the original issue being solved in https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61744/3"
                },
                {
                    "file": "src/Thresholds.hpp",
                    "line": 126,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Specify default hysteresis that is good for all sensors is hard. options can be:\n1. use n/a, then sensor.hpp fill in the threshold based off sensors min and max\n2. derive from thresholds, for example 1% of highThreshold - lowThreshold\nIt make sense to use #1 since it is what the code does today i believe"
                },
                {
                    "file": "src/Thresholds.hpp",
                    "line": 126,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Suggestion #1 sounds like good to me. I'll take a look at sensor.hpp and see what makes sense."
                },
                {
                    "file": "src/Thresholds.hpp",
                    "line": 126,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "After further investigation, it appears that at the time and place where 'parseThresholdsFromAttr()' is called from in Intel code, we don't have access to any objects with access to the high/low thresholds values to import for use here (no referenceable sensor object exists yet at this stage).\n\nIn the 'standard' path for handling these thresholds (ie, not going through 'parseThreshodlsFromAttr'), a 'private fillMissingThresholds()' gets called after sensor instantiation to set unset threshold values (like the 'hysteresis' field being focused on here). \n\nI'm thinking about adding a new public function to the sensor class that would do something similar to the existing 'set unset thresholds' , but have it only affect we're concerned about being set when 'parseThresholdsFromAttr' is used to define thresholds. It would be up to uses of 'parseThresholdsFromAttr()' to make sure to call it after the sensor object has been created (which happens after parseThresholdsFromAttr() is finished).\n\nIf that sounds alright, I'll likely submit it as an amendment to this change once I've got some code that looks viable."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 24,
            "sizeDeletions": 3
        },
        {
            "number": 3,
            "revision": "ad3d04b232934c504f6b32258807fba5dd1679a0",
            "parents": [
                "9a472e8ed1a0da677d2e28446db87b55677b8d83"
            ],
            "ref": "refs/changes/25/62825/3",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694810152,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 28,
            "sizeDeletions": 3
        },
        {
            "number": 4,
            "revision": "568fb4d44de92a6ec02dbf0fd6a58856608b10e0",
            "parents": [
                "9a472e8ed1a0da677d2e28446db87b55677b8d83"
            ],
            "ref": "refs/changes/25/62825/4",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694810424,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 3
        },
        {
            "number": 5,
            "revision": "f748ffe9a59822a3662064e898718dae91a72efd",
            "parents": [
                "39fadb9ef890e9b7393c8e993da55c651dd19d2c"
            ],
            "ref": "refs/changes/25/62825/5",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1694810488,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "It occurs to me that while there's still some debate to be had over the best default value to use for 'hysteresis,' if we just set the value to NaN for now, that will let the function header explicitly reflect what was implicitly happening before the Intel-specific '0' value was hardcoded into the function body, while giving caller a chance to set their own value.\n\nI'm thinking I'll submit a 'follow-up' change to this one that tries to define the =2.55 value again and see if folks care to engage and push that discussion forward, or just leave it like this (which at least avoids some previous pitfalls).\n\nEither way, I don't think that discussion should get in the way of adding a new parameter so that we don't have a 'hidden' Intel-specific value coded in for hysteresis for anyone who might decide to call ParseThesholdsFromAttr() in the future."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I checked again and realized that the hysteresis = 2.55 value would only apply to certain sensors, not all, or even 'most' of them.\n\nI've created a new Gerrit review where, instead of suggesting a different default value from NaN, it's about what kind of comment might make sense to add along-side the 'NaN' change this review now proposes - or other alternatives.\n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/66370"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Additional note re: picking hysteresis default = NaN; the parseThresholdsFromConfig() function also sets a default value of NaN for hysteresis, but then attempts to replace the value with data from config (if hysteresis is defined). -FromAttrib() appears to have no access to hysteresis data unless a value is explicitly passed  to it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 3
        },
        {
            "number": 6,
            "revision": "9d6ff2448cd10944d0443c3f0b9aabd27183c59a",
            "parents": [
                "6e6561d6bd693fdb138c131ee811aabc982e4efc"
            ],
            "ref": "refs/changes/25/62825/6",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705598191,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 29,
            "sizeDeletions": 3
        },
        {
            "number": 7,
            "revision": "156f165189cdd029f4a951a653cf388592b4cba6",
            "parents": [
                "6e6561d6bd693fdb138c131ee811aabc982e4efc"
            ],
            "ref": "refs/changes/25/62825/7",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1705603711,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Wouldn't this reintroduce the issue that threshold can not get de-asserted with NaN hysteresis?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The idea here is callers *should* override the hysteresis value -- but if they do not specify a hysteresis, the function will behave the same way it did before the 'Intel Fix' was accepted. \n\nThe 'Intel Fix' solved their hysteresis NaN issue by hardcoding hysteresis=0 into the function body, but that value doesn't make sense for other hardware, and finding a different sensible number to use default hysteresis value has a fair number of challenges.\n\nBasically, this fix aims to make pre-existing behavior explicit + mutable, rather than using hardcoded values with implicit behavior (ie always setting hysteresis to NaN behind the scenes, or always using 'hysteresis=0' when the function is called)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "I agree that this is better way than hardcode inside the function. Is there a real issue/failure this change is to address? Or you are trying to fix the same issue with a better approach? I don't think we want to introduce a regression.  Pass 0.0 at https://github.com/openbmc/dbus-sensors/blob/16d6f17bec38b6c095dfb6bed224f17d941fb9b3/src/IntelCPUSensor.cpp#L291 would avoid the regression"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "This patchset now has Intel calls pass in hysteresis=0.\n\nThere's no active failures at this time, this is an attempt to head off issues with a fix I saw get accepted a little while back. Without this change, if anyone other than Intel makes use of this function, the hysteresis will be incorrectly set for the non-Intel HW.\n\nI originally attached myself to the (now merged) issue @ https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61744/comments/38f6a to gain some experience helping with other people's projects. \n\nI dug into the code and posted a comment about an issue I found with the fix-- but by coincidence, the fix was accepted maybe minutes before my comment was posted.\n\nI'm mostly just pushing on this \nA) for the experience with helping with OBMC stuff outside my own projects\nB) I happened to notice an issue I think will likely cause issues in the future (IF this function ever sees use outside of Intel's usage), and I'm willing to keep pushing on it if folks agree that's the right way to go."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "What is this referring to?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "I'm specifically referring to this fix: https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/61744/comments/38f6a?tab=comments\n\nThe original behavior was that the function always implicitly set hysteresis=NaN, and there was no way to change that value.\n\nThe 'Intel Fix' was to implicitly set hysteresis=0 by hardcoding it into the function body.\n\nThis fix is to set hysteresis=NaN in the header and have it be overridable. This effectively rollbacks the hardcoded Intel Fix and make the original behavior explicit instead of implicit. \n\nThis fix comes with a sister-fix so that existing Intel calls to the function will now explicitly specify hysteresis=0, instead of relying on hardcoded Intel-specific behavior in the function (https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/62826/12)"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Test done?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "In theory we'd probably like to get someone from Intel with access to Intel HW to take a look -- especially if I can get the original 'Intel Fix' engineer's attention.\n\nThat said, using Hysteresis=NaN as a default value is the old behavior from before hysteresis=0 was hardcoded in for the Intel Fix.\n\nIn practice, I'm not sure heavy testing is needed, since this pair of relationship-chained fixes (in practice) simply moves where the hysteresis value is being set -- moving it from being hardcoded in the body of parseThresholdsFromAttr() and instead setting it through a function parameter when the function is called.\n\nIn practice, nothing is actually calling parseThresholdsFromAttr() and using the default Hysteresis=NaN value."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Please add test section in the commit message. Refer https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#testing"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "The new Tested section states\n\n\"Tested: Confirmed the code builds and doesn't throw errors with OBMC\n'local CI' testing. I believe heavier testing with actual Intel HW\nisn't needed because this change simple moves where a value is specified\n(from hardcode in function body to passed-in parameter) without\naffecting any existing in-use functionality.\"\n\nWill this work, or do you feel more 'actual' testing should be required here?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 23,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "That is fair"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 30,
            "sizeDeletions": 3
        },
        {
            "number": 8,
            "revision": "f129cdf49fadcf40083776dc4bd939d258c8d0a0",
            "parents": [
                "6e6561d6bd693fdb138c131ee811aabc982e4efc"
            ],
            "ref": "refs/changes/25/62825/8",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1706822262,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Patchset now includes comments about setting hysteresis param when calling parseThresholdsFromAttr(), and updates the IntelCPU calls to the funct to specify hysteresis = 0 \n\nThe comments and Intel code change were separate Gerrit-relation-chained patches before this update."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/IntelCPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/IntelCPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 5
        },
        {
            "number": 9,
            "revision": "a327923d4ba7b47b8ff07fe42ccb025fd9c894b9",
            "parents": [
                "b2a0f2e0bfb5bc28fce737339f67df6a842cb726"
            ],
            "ref": "refs/changes/25/62825/9",
            "uploader": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "createdOn": 1711051741,
            "author": {
                "name": "Christopher Sides",
                "email": "christopher.sides@hpe.com",
                "username": "csides-hpe"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeff Lin",
                        "email": "JeffLin2@quantatw.com",
                        "username": "JinFuLin"
                    },
                    "message": "I cherry-pick in my machine and cpu sensor can trigger threshold event."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "Thanks for taking to time to check this out for me!"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Christopher Sides",
                        "email": "christopher.sides@hpe.com",
                        "username": "csides-hpe"
                    },
                    "message": "We now have confirmation on live Intel hardware that this fix does not break functionality."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 31,
                    "deletions": 0
                },
                {
                    "file": "src/IntelCPUSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/IntelCPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/Thresholds.cpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -2
                },
                {
                    "file": "src/Thresholds.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 42,
            "sizeDeletions": 5
        }
    ]
}