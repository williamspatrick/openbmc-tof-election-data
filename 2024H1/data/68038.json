{
    "project": "openbmc/obmc-console",
    "branch": "master",
    "id": "Ie65a8b5db40b74adf298d5d911227909c97df45a",
    "number": 68038,
    "subject": "Use state machine to handle sysrq",
    "owner": {
        "name": "Michael Xie",
        "email": "xiexinnan@bytedance.com",
        "username": "MichaelXie98"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/obmc-console/+/68038",
    "hashtags": [],
    "createdOn": 1701419250,
    "lastUpdated": 1708921179,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1701419250,
            "reviewer": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1701419260,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1701419260,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1701419285,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76724/ : SUCCESS"
        },
        {
            "timestamp": 1701442965,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1701653646,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(5 comments)"
        },
        {
            "timestamp": 1701658957,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1701703189,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1701703448,
            "reviewer": {
                "name": "Ninad Palsule",
                "email": "ninad@linux.ibm.com",
                "username": "ninadpalsule"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1701730780,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1708486959,
            "reviewer": {
                "name": "Heyi Guo",
                "email": "guoheyi@linux.alibaba.com",
                "username": "iwishguo"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1708491090,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1708491289,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708491344,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708491344,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1708491373,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/79578/ : SUCCESS"
        },
        {
            "timestamp": 1708491483,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1708491596,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1708492943,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1708502941,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1708565413,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1708569461,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1708572598,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708572624,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708572624,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1708572640,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79637/ : FAILURE"
        },
        {
            "timestamp": 1708572655,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 3:\n\n(8 comments)"
        },
        {
            "timestamp": 1708572709,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708572739,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708572739,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1708572768,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/79638/ : SUCCESS"
        },
        {
            "timestamp": 1708572908,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1708573456,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1708573766,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1708574035,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 5: Commit message was updated.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708574049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708574049,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1708574067,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79640/ : FAILURE"
        },
        {
            "timestamp": 1708574164,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 6: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708574199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708574199,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1708574217,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79641/ : FAILURE"
        },
        {
            "timestamp": 1708574308,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1708576140,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1708578473,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1708581191,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1708921179,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        }
    ],
    "wip": true,
    "patchSets": [
        {
            "number": 1,
            "revision": "4c2d681003331c316d0c147ac675b8e0aefdabea",
            "parents": [
                "3453084b579970cd368357bf091f173924ecba5e"
            ],
            "ref": "refs/changes/38/68038/1",
            "uploader": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "createdOn": 1701419250,
            "author": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Michael, thanks for the patch! I have some comments inline about functionality and performance."
                },
                {
                    "file": "socket-handler.c",
                    "line": 290,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Calling concole data out in every case statement. Should we restructure?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 290,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "That's not true because it's conditional on what came before it in the transition handling. Consider the `break` on line 295 below, or `tcsendbreak()` on 304."
                },
                {
                    "file": "socket-handler.c",
                    "line": 290,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "yes, I thought those special cases can be handled separately."
                },
                {
                    "file": "socket-handler.c",
                    "line": 290,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you implement what you're proposing and push it somewhere we can take a look? It's not clear to me how it would look (and whether it's an improvement)."
                },
                {
                    "file": "socket-handler.c",
                    "line": 290,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 305,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think we should add the case `} else if (key == '~') {` to send through the escaped tilde, which allows further SSH-style escaping to work on the host:\n\n```\n...\n} else if (key == '~') {\n    console_data_out(sh->console, &tilde, 1);\n} ...\n```"
                },
                {
                    "file": "socket-handler.c",
                    "line": 305,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 306,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Make this `static const uint8_t tilde = '~';` and move it out to the scope of the for loop. That way we can use it for the tilde case mentioned in the comment above."
                },
                {
                    "file": "socket-handler.c",
                    "line": 306,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm a bit concerned about the performance here. We're issuing `console_data_out()` one character at a time. To illustrate, I pasted 100 paragraphs of [Lorem Ipsum](https://loremipsum.io/generator/?n=100&t=p) into `obmc-console-client` while running `obmc-console-server` under `perf` on my laptop:\n\n```\n$ grep '^model name' /proc/cpuinfo | head -n1\nmodel name      : 13th Gen Intel(R) Core(TM) i7-1360P\n```\n\nBefore the change `perf stat` reports:\n\n```\n Performance counter stats for './build/obmc-console-server -i test /dev/pts/4':\n\n              3.55 msec task-clock                       #    0.000 CPUs utilized          \n                26      context-switches                 #    7.333 K/sec                  \n                 4      cpu-migrations                   #    1.128 K/sec                  \n               140      page-faults                      #   39.485 K/sec                  \n         3,800,363      cpu_core/cycles/                 #    1.072 G/sec                  \n     <not counted>      cpu_atom/cycles/                                              (0.00%)\n         4,093,929      cpu_core/instructions/           #    1.155 G/sec                  \n     <not counted>      cpu_atom/instructions/                                        (0.00%)\n           862,786      cpu_core/branches/               #  243.337 M/sec                  \n     <not counted>      cpu_atom/branches/                                            (0.00%)\n            22,780      cpu_core/branch-misses/          #    6.425 M/sec                  \n     <not counted>      cpu_atom/branch-misses/                                       (0.00%)\n        22,760,454      cpu_core/slots/                  #    6.419 G/sec                  \n         4,464,441      cpu_core/topdown-retiring/       #     19.3% Retiring              \n         3,034,727      cpu_core/topdown-bad-spec/       #     13.1% Bad Speculation       \n         9,818,235      cpu_core/topdown-fe-bound/       #     42.5% Frontend Bound        \n         5,801,684      cpu_core/topdown-be-bound/       #     25.1% Backend Bound         \n           892,566      cpu_core/topdown-heavy-ops/      #      3.9% Heavy Operations       #     15.4% Light Operations      \n         2,856,213      cpu_core/topdown-br-mispredict/  #     12.4% Branch Mispredict      #      0.8% Machine Clears        \n         6,694,251      cpu_core/topdown-fetch-lat/      #     29.0% Fetch Latency          #     13.5% Fetch Bandwidth       \n         3,123,983      cpu_core/topdown-mem-bound/      #     13.5% Memory Bound           #     11.6% Core Bound            \n\n      40.072307641 seconds time elapsed\n\n       0.005056000 seconds user\n       0.000000000 seconds sys\n```\n\nAfter the change, `perf stat` reports:\n\n```\n Performance counter stats for './build/obmc-console-server -i test /dev/pts/4':\n\n             58.63 msec task-clock                       #    0.008 CPUs utilized          \n                 7      context-switches                 #  119.401 /sec                   \n                 3      cpu-migrations                   #   51.172 /sec                   \n               138      page-faults                      #    2.354 K/sec                  \n       193,516,683      cpu_core/cycles/                 #    3.301 G/sec                  \n     <not counted>      cpu_atom/cycles/                                              (0.00%)\n       192,645,376      cpu_core/instructions/           #    3.286 G/sec                  \n     <not counted>      cpu_atom/instructions/                                        (0.00%)\n        42,437,564      cpu_core/branches/               #  723.873 M/sec                  \n     <not counted>      cpu_atom/branches/                                            (0.00%)\n           141,862      cpu_core/branch-misses/          #    2.420 M/sec                  \n     <not counted>      cpu_atom/branch-misses/                                       (0.00%)\n     1,160,850,462      cpu_core/slots/                  #   19.801 G/sec                  \n       223,065,382      cpu_core/topdown-retiring/       #     19.3% Retiring              \n        22,761,773      cpu_core/topdown-bad-spec/       #      2.0% Bad Speculation       \n       150,227,706      cpu_core/topdown-fe-bound/       #     13.0% Frontend Bound        \n       760,243,243      cpu_core/topdown-be-bound/       #     65.7% Backend Bound         \n        50,075,902      cpu_core/topdown-heavy-ops/      #      4.3% Heavy Operations       #     15.0% Light Operations      \n        18,209,419      cpu_core/topdown-br-mispredict/  #      1.6% Branch Mispredict      #      0.4% Machine Clears        \n        72,837,676      cpu_core/topdown-fetch-lat/      #      6.3% Fetch Latency          #      6.7% Fetch Bandwidth       \n       500,759,022      cpu_core/topdown-mem-bound/      #     43.3% Memory Bound           #     22.4% Core Bound            \n\n       7.565322564 seconds time elapsed\n\n       0.008474000 seconds user\n       0.050845000 seconds sys\n```\n\nThat's a 47x increase of instructions executed, which seems pretty unreasonable.\n\nPerhaps we can provide a fast-path."
                },
                {
                    "file": "socket-handler.c",
                    "line": 315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Alright, I got curious. Here's an alternative implementation:\n\nhttps://github.com/amboar/obmc-console/commit/e0ea76a72194b6314514a7f0daf897aa74bdf98d\n\nAgain with 100 paragraphs of Lorem Ipsum, `perf stat` reports:\n\n```\n Performance counter stats for './build/obmc-console-server -i test /dev/pts/4':\n\n              3.74 msec task-clock                       #    0.000 CPUs utilized\n                24      context-switches                 #    6.415 K/sec\n                 3      cpu-migrations                   #  801.913 /sec\n               140      page-faults                      #   37.423 K/sec\n         4,894,248      cpu_core/cycles/                 #    1.308 G/sec\n     <not counted>      cpu_atom/cycles/                                              (0.00%)\n         4,634,528      cpu_core/instructions/           #    1.239 G/sec\n     <not counted>      cpu_atom/instructions/                                        (0.00%)\n           977,756      cpu_core/branches/               #  261.358 M/sec\n     <not counted>      cpu_atom/branches/                                            (0.00%)\n            30,189      cpu_core/branch-misses/          #    8.070 M/sec\n     <not counted>      cpu_atom/branch-misses/                                       (0.00%)\n        29,306,724      cpu_core/slots/                  #    7.834 G/sec\n         5,401,631      cpu_core/topdown-retiring/       #     18.0% Retiring\n         3,792,634      cpu_core/topdown-bad-spec/       #     12.6% Bad Speculation\n        13,331,686      cpu_core/topdown-fe-bound/       #     44.4% Frontend Bound\n         7,470,341      cpu_core/topdown-be-bound/       #     24.9% Backend Bound\n         1,034,354      cpu_core/topdown-heavy-ops/      #      3.4% Heavy Operations       #     14.6% Light Operations\n         3,677,706      cpu_core/topdown-br-mispredict/  #     12.3% Branch Mispredict      #      0.4% Machine Clears\n         9,883,836      cpu_core/topdown-fetch-lat/      #     33.0% Fetch Latency          #     11.5% Fetch Bandwidth\n         4,022,491      cpu_core/topdown-mem-bound/      #     13.4% Memory Bound           #     11.5% Core Bound\n\n      23.479433391 seconds time elapsed\n\n       0.000000000 seconds user\n       0.005521000 seconds sys\n```\n\nThat's a 1.13x increase in the number of instructions over the no-escape-handling case, much better than 47x. I checked the behaviour with `strace`, which appears correct.\n\ninput: `\\r~~B`\nstrace:\n```\n13:19:20.305230 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:19:41.582658 recvfrom(6, \"\\r\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:19:41.582936 write(3, \"\\r\", 1)       = 1\n13:19:41.583240 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:19:42.766728 recvfrom(6, \"~\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:19:42.767120 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:19:43.126912 recvfrom(6, \"B\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:19:43.127185 ioctl(3, TCSBRK, 0)     = 0\n```\n\ninput: `\\r~~~`\nstrace:\n```\n13:20:23.595949 recvfrom(6, \"\\r\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:20:23.596263 write(3, \"\\r\", 1)       = 1\n13:20:23.596467 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:20:24.587204 recvfrom(6, \"~\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:20:24.587355 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:20:24.747306 recvfrom(6, \"~\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:20:24.747548 write(3, \"~\", 1)        = 1\n```\n\ninput: `\\r~~X`\nstrace:\n```\n13:20:36.931463 recvfrom(6, \"\\r\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:20:36.931824 write(3, \"\\r\", 1)       = 1\n13:20:36.932107 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:20:38.723549 recvfrom(6, \"~\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:20:38.723919 poll([{fd=5, events=POLLIN}, {fd=6, events=POLLIN}, {fd=3, events=POLLIN}, {fd=0, events=0}], 4, -1) = 1 ([{fd=6, revents=POLLIN}])\n13:20:39.596082 recvfrom(6, \"X\", 4096, MSG_DONTWAIT, NULL, NULL) = 1\n13:20:39.596474 write(3, \"~\", 1)        = 1\n13:20:39.596688 write(3, \"X\", 1)        = 1\n```"
                },
                {
                    "file": "socket-handler.c",
                    "line": 315,
                    "reviewer": {
                        "name": "Heyi Guo",
                        "email": "guoheyi@linux.alibaba.com",
                        "username": "iwishguo"
                    },
                    "message": "Hi Andrew,\n\nYour patch works well during my test; is it ready to merge it into upstream?\nThanks."
                },
                {
                    "file": "socket-handler.c",
                    "line": 315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Let me push it for review"
                },
                {
                    "file": "socket-handler.c",
                    "line": 315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 316,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Should we set console->state to escape_idle by default otherwise we will miss first escape character?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 316,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Where are you proposing to set it by default?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 316,
                    "reviewer": {
                        "name": "Ninad Palsule",
                        "email": "ninad@linux.ibm.com",
                        "username": "ninadpalsule"
                    },
                    "message": "Basically when we create console but looks like escape_idle value is 0 so we are fine right now unless someone changes that value."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 25,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 37,
                    "deletions": -1
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 70,
            "sizeDeletions": 1
        },
        {
            "number": 2,
            "revision": "e0ea76a72194b6314514a7f0daf897aa74bdf98d",
            "parents": [
                "3453084b579970cd368357bf091f173924ecba5e"
            ],
            "ref": "refs/changes/38/68038/2",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1708491289,
            "author": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Areas that I think might need some work:\n\n- Write tests\n- Improve the formatting\n- Consider whether we want to swallow all escape sequences even if we don't implement any particular behaviour for some, on the basis that it would be a change in behaviour in the future to start swallowing sequences we didn't previously"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Heyi, are these some things that you could help address?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 306,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Might this perhaps be clearer as an `else`?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 306,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yeah that's probably better."
                },
                {
                    "file": "socket-handler.c",
                    "line": 306,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 321,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Along vaguely similar lines, I'd find this easier to read as\n\n```\nif (*begin == '~') {\n  sh->console->state = escape_leader;\n  begin++;\n} else {\n  sh->console->state = escape_idle;\n}\nbreak;\n```\n\n(which I think is equivalent...)"
                },
                {
                    "file": "socket-handler.c",
                    "line": 321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "socket-handler.c",
                    "line": 321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 344,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Nit: s/break/escape/, slightly more generally?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 344,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "socket-handler.c",
                    "line": 344,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "IMO a `switch (*begin)` might be more straightforward for readability & extensibility?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "...and following the tilde emitted here, the unrecognized escape char at `*begin` itself will get emitted by the subsequent iteration of the loop in the `escape_idle` state it appears?  I was sort of expecting to see that handled here since at some intuitive gut level it seemed to me like handling that byte would be part of this block of logic -- letting it fall out naturally like that is fine though, but might be worth a brief mention in the comment (given the thoroughness of the commenting otherwise)."
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Let me play with that a little."
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What do you think of the idea that we consume all undefined escape sequences rather than emit them? As a means of taking all the pain of future disruption now..."
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "I actually drafted most of a comment about that in reply to [your earlier comment](https://gerrit.openbmc.org/c/openbmc/obmc-console/+/68038/comments/169b7070_a15ec087), but then discarded it after deciding that what you'd written seemed reasonable, though of course now I realize that was an idea that wasn't currently implemented, merely proposed...thinking about it a bit more now, it seems like there are pros & cons both ways.\n\nThe \"swallow all escape sequences\" approach is the most self-consistent, and if we do add more escapes later we don't suddenly start swallowing sequences that we previously weren't.  For ease-of-use though it seems like it could be sort of irritating to have to double up the tilde every time for commonly-used sequences like \"~/\".\n\nThe \"emit unrecognized escape sequences\" approach has the disadvantage that we might potentially change behavior in the future, but is more consistent with other existing things users might be familiar with like OpenSSH's ssh client, and both ipmitool and freeipmi's SOL console client, all of which have similar in-band-signaled escape sequences and all of which pass unrecognized sequences through.  (I'll note for the record that dropbear's ssh client, somewhat curiously, passes the subsequent character through but *not* the escape character itself, so typing \"~/\" produces just \"/\", which I think is almost certainly not something we want to emulate, but also probably not a behavior most users are accustomed to, so meh.)  I suppose screen and tmux could also be looked to as \"prior art\" in this space (neither passes unrecognized sequences through), but common usage of those likely involves much heavier use of their escape sequences and general awareness of them so I don't think it's as good a comparison.\n\nArguably though changing an unrecognized escape sequence from a (swallowed) no-op to something with some arbitrary other side-effect is a potentially-breaking change in behavior as well it seems (albeit a bit less \"surprising\" perhaps).\n\nOverall I think I'd lean toward keeping the existing behavior (passing through unrecognized sequences instead of swallowing them) for the ease-of-use and external consistency/least-surprise benefits."
                },
                {
                    "file": "socket-handler.c",
                    "line": 345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Seems reasonable. I'm going to quote that in the commit message :)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 68,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 102,
            "sizeDeletions": 3
        },
        {
            "number": 3,
            "revision": "8a15fcc9262e9120a9a2f89f621bfb3a84bc65ae",
            "parents": [
                "66ddf711d10cf684c8a179c4c2e6690e073990da"
            ],
            "ref": "refs/changes/38/68038/3",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1708572598,
            "author": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 156,
            "sizeDeletions": 3
        },
        {
            "number": 4,
            "revision": "8c38a1fcfe52f2c1ce1eab6027d29b0b25fbcdaa",
            "parents": [
                "66ddf711d10cf684c8a179c4c2e6690e073990da"
            ],
            "ref": "refs/changes/38/68038/4",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1708572709,
            "author": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "socket-handler.c",
                    "line": 278,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Hmm...are there clients/scenarios where hitting return produces *just* a bare CR, with no LF?  Wondering about the necessity of the added logic to handle it (even the smaller amount in the previous version), or if we could only look for the `\\n~` sequence and ignore `\\r` entirely..."
                },
                {
                    "file": "socket-handler.c",
                    "line": 278,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "well, [when I was testing](https://amboar.github.io/notes/2023/05/02/testing-obmc-console-with-socat.html) I was only getting `\\r`, which probably needs some more investigation..."
                },
                {
                    "file": "socket-handler.c",
                    "line": 278,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Probably due to the `rawer` option there I'd guess...was that included for a particular reason?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 278,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I don't think that's the case, rather I suspect it's the `cfmakeraw()` issued by `obmc-console-client` for the client tty that prevents translation of `\\r` to `\\n` to begin with?. So perhaps it's really `\\n` that we can ignore, which it turns out is what the client does:\n\nhttps://github.com/openbmc/obmc-console/blob/master/console-client.c#L69-L109"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 26,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 158,
            "sizeDeletions": 3
        },
        {
            "number": 5,
            "revision": "228fec959af03148ead7987d0496c948460b97c1",
            "parents": [
                "66ddf711d10cf684c8a179c4c2e6690e073990da"
            ],
            "ref": "refs/changes/38/68038/5",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1708574035,
            "author": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 3
        },
        {
            "number": 6,
            "revision": "46c18bb1cbad52cf599550359c8fbd593420e3c7",
            "parents": [
                "66ddf711d10cf684c8a179c4c2e6690e073990da"
            ],
            "ref": "refs/changes/38/68038/6",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1708574164,
            "author": {
                "name": "Michael Xie",
                "email": "xiexinnan@bytedance.com",
                "username": "MichaelXie98"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "socket-handler.c",
                    "line": 403,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "This is probably more a hypothetical question, but do we want the same behaviour in other handlers? We only have one other read-write instance, `tty-handler`.\n\nOr should tty-handler be catching the OOB breaks instead?"
                },
                {
                    "file": "socket-handler.c",
                    "line": 403,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We... should probably have equivalent functionality at least. I guess that implies doing _something_ for tty-handler. I feel like relaying the TTY break might be better there, but that would be a little inconsistent?\n\nZev, Xinnan, thoughts?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": "socket-handler.c",
                    "type": "MODIFIED",
                    "insertions": 123,
                    "deletions": -3
                },
                {
                    "file": "console-server.h",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 211,
            "sizeDeletions": 3
        }
    ]
}