{
    "project": "openbmc/sdbusplus",
    "branch": "master",
    "topic": "bmc-health-metrics",
    "id": "I09fbc4d9745b2101136a815a8c9d1790047121db",
    "number": 66364,
    "subject": "docs: propose D-Bus paths and service-name format for interface yaml",
    "owner": {
        "name": "Jagpal S Gill",
        "email": "paligill@gmail.com",
        "username": "jagpalgill"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/66364",
    "hashtags": [],
    "createdOn": 1693380838,
    "lastUpdated": 1705077463,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1693380838,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1693380881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693380881,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1693381428,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73632/ : SUCCESS"
        },
        {
            "timestamp": 1693400739,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1693413384,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1693457831,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693457880,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693457880,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1693458062,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1693458435,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73663/ : SUCCESS"
        },
        {
            "timestamp": 1693495344,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1693502803,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693502836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693502836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1693502844,
            "reviewer": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "message": "Patch Set 3:\n\n(6 comments)"
        },
        {
            "timestamp": 1693503377,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73679/ : SUCCESS"
        },
        {
            "timestamp": 1693503790,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1693505203,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1693509987,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1693581211,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693581234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693581234,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1693581894,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73698/ : SUCCESS"
        },
        {
            "timestamp": 1693937499,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 5.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1693937533,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1693937533,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1693938066,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/73749/ : SUCCESS"
        },
        {
            "timestamp": 1694668980,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1694669075,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged"
        },
        {
            "timestamp": 1705077463,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Topic set to bmc-health-metrics"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "1ccdaa3af00522e517c743587d6fca4a2ac27da9",
            "parents": [
                "d3eca0e66aa3ff06281d5a3b91466777735d0fbd"
            ],
            "ref": "refs/changes/64/66364/1",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1693380838,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "lowercase for titles.\n\nThe title is a bit deceptive because you're not actually adding this support.  Suggest starting with 'docs:'.  You're documenting a proposed format for the dbus-paths and service name."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, fixed the title and added more details."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "why?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d .  Need some description of what is being accomplished."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Done, added more details."
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 254,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think that we have full paths and path segments.\n\nFor example in your metric design you have:\n\n```\nMetricNamespace = \"/xyz/openbmc_project/metric\" (full-path)\nResetCount = \"reset_count\" (path-segment)\nMemoryAvailable = \"memory/available\" (path-segment)\n```\n\n(I don't know what, if anything you do about the `bmc-X` in your proposal, but maybe nothing.)\n\nWe should handle both of these *and* have something in the YAML that identifies which is which, so that we can ensure that the format is correct for both."
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 254,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Sure, updated the proposal based on namespace and segment.\n\nAbout adding support format for bmc-X will be something needed for multi host design and i don't think it will be straightforward as we would need some platform info in code generator. Let's say if platformX has 3 BMCs, then bmc-{BMCNum} in yaml path specification can be replaced with those numbers from platform config. But i think that will require generating platform specific code in different directories too. My suggestion is to skip this for later for multi host convergence."
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 254,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think the `bmc-<number>` part belongs in the YAML anyhow.  No one should be asking the question \"how do I find bmc-3's memory usage\" and if they are, they should do it by associations.  There shouldn't be any hard-coded search for the \"bmc-3\" part of the segment.  \"memory/usage\" _is_ important though because that is the only thing we have to identify the purpose of the metric (in your proposal)."
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 269,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Generally, I'm not sure we need N service_names, but I'm fine with having this ability.  Anytime there is more than one service_name, I would expect that Mapper is used.  That doesn't mean that the YAML can't allow it though.\n\nI think the more typical case is that we have a `default: <value>` for interfaces which are expected to be singletons (like mapper itself).  I'd like a simple way to identify default service names, like this."
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 269,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "I have made the change to keep default option only."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "docs/yaml/interface.md",
                    "type": "MODIFIED",
                    "insertions": 42,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "43a7088c61a1b78bee98c80feac7e3a9ddee3e76",
            "parents": [
                "d3eca0e66aa3ff06281d5a3b91466777735d0fbd"
            ],
            "ref": "refs/changes/64/66364/2",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1693457831,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: spelling and line-wrap."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed your comments. Thanks"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: service_names?"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 246,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\ud83d\udc4d .  Not what I would have come up with, but seems reasonable and it works."
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 246,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 281,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "nit: xyz"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 281,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 282,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think we had a slight misunderstanding.  To me there are two different service-names.\n\n1) A service name which represents the singleton host for an interface.  I would suggest doing this as:\n\n```\nservice_names:\n    - default: xyz.openbmc_project.Deck\n```\n\n2) A service name with an additional purpose:\n\n```\nservice_names:\n    - name: BlackJack\n    - value: xyz.openbmc_project.BlackJack\n```\n\nThe first would generate something like:\n\n```\n    static constexpr auto default_service_name = \"xyz.openbmc_project.Deck\";\n```\n \nThe second would generate something like:\n\n```\n   static constexpr auto black_jack_service_name = \"xyz.openbmc_project.BlackJack\";\n```"
                },
                {
                    "file": "docs/yaml/interface.md",
                    "line": 282,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "haha Sure. I first added both of them and then re-read your comment and re-interpreted that you are asking for just default. Good we are in sync with my initial understanding.\n\nUpdated it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "docs/yaml/interface.md",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 62,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "cec02b5c2c8b73b11f914abc05d58a4e68937788",
            "parents": [
                "d3eca0e66aa3ff06281d5a3b91466777735d0fbd"
            ],
            "ref": "refs/changes/64/66364/3",
            "uploader": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "createdOn": 1693502803,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jagpal S Gill",
                        "email": "paligill@gmail.com",
                        "username": "jagpalgill"
                    },
                    "message": "Addressed your comments."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "@Matt, are your comments addressed?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Was there a design doc or something that says how this is going to be used that I missed?  If not, to satisfy my curiousity, can you comment with some pseudocode examples of how this would be used? Especially when there are for example multiple possible service names how would you specify one of them?\n\nAnd, are we going to have to go into every existing interface.yaml file out there and add this information?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ideally we start adding them, where appropriate, to existing interfaces, yes.  Any time there is a description that says something about object_paths we probably should document it this way instead.  (We still need to write the code after this that adds it to the common.hpp as constants but that is pretty trivial).\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/64917/3/designs/bmc-health-monitor-updates.md#68 is the design doc that instigated this."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "docs/yaml/interface.md",
                    "type": "MODIFIED",
                    "insertions": 68,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 85,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "96777f42a3cdc8756aedf6871d8ee399e8a2b270",
            "parents": [
                "43fcd1cebdab4c650536a01e314312e46ae2adbb"
            ],
            "ref": "refs/changes/64/66364/4",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1693581211,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "docs/yaml/interface.md",
                    "type": "MODIFIED",
                    "insertions": 83,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 101,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "b50817c1f4449e3c9f8ff15cee4705e5c9b40048",
            "parents": [
                "43fcd1cebdab4c650536a01e314312e46ae2adbb"
            ],
            "ref": "refs/changes/64/66364/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1693937499,
            "author": {
                "name": "Jagpal S Gill",
                "email": "paligill@gmail.com",
                "username": "jagpalgill"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "docs/yaml/interface.md",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 104,
            "sizeDeletions": 0
        }
    ]
}