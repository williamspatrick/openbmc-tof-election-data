{
    "project": "openbmc/libpldm",
    "branch": "main",
    "id": "Id4ac34f03311dbc7633e7fd6db7f772cfd811a2d",
    "number": 69353,
    "subject": "pdr: Add contained entity to an association PDR",
    "owner": {
        "name": "Varsha Kaverappa",
        "email": "vkaverap@in.ibm.com",
        "username": "vkaverap"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/libpldm/+/69353",
    "hashtags": [],
    "createdOn": 1707736039,
    "lastUpdated": 1717044463,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1707736039,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1707736064,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707736064,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1707736119,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79093/ : FAILURE"
        },
        {
            "timestamp": 1707736511,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 2: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707736523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707736523,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1707736582,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79094/ : FAILURE"
        },
        {
            "timestamp": 1707736906,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707736944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707736944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1707736998,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79096/ : FAILURE"
        },
        {
            "timestamp": 1707737245,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 4: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707737259,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707737259,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1707737314,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79098/ : FAILURE"
        },
        {
            "timestamp": 1707737686,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 5: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707737719,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707737720,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1707737783,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79100/ : FAILURE"
        },
        {
            "timestamp": 1707816820,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 6.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707816844,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707816844,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1707816901,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79162/ : FAILURE"
        },
        {
            "timestamp": 1707817426,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 7: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707817464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707817464,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1707817528,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79165/ : FAILURE"
        },
        {
            "timestamp": 1707817610,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 8: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707817629,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707817630,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1707817689,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79166/ : FAILURE"
        },
        {
            "timestamp": 1707818268,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 9: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1707818295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1707818295,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1707818527,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/79169/ : SUCCESS"
        },
        {
            "timestamp": 1707869954,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 9: Code-Review-1\n\n(21 comments)"
        },
        {
            "timestamp": 1707978905,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1708062601,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1708066944,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 10.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708066969,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708066969,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1708066984,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79369/ : FAILURE"
        },
        {
            "timestamp": 1708685834,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 11.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708685873,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708685873,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1708685891,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79724/ : FAILURE"
        },
        {
            "timestamp": 1708686116,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 12.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708686132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708686132,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1708686146,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79725/ : FAILURE"
        },
        {
            "timestamp": 1708686355,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 13.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1708686392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1708686392,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1708686406,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/79726/ : FAILURE"
        },
        {
            "timestamp": 1709113803,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 13:\n\n(3 comments)"
        },
        {
            "timestamp": 1710998174,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 14.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1710998207,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 14:\n\n(21 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1710998212,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1710998212,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1710998233,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/81055/ : FAILURE"
        },
        {
            "timestamp": 1710998449,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 15: Commit message was updated.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1710998497,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1710998497,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1710998563,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/81056/ : FAILURE"
        },
        {
            "timestamp": 1710999176,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1710999202,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1710999202,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1710999483,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/81057/ : FAILURE"
        },
        {
            "timestamp": 1711001455,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711001465,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1711001492,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711001492,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1711001732,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81063/ : SUCCESS"
        },
        {
            "timestamp": 1711002402,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 17:\n\n(2 comments)"
        },
        {
            "timestamp": 1711010577,
            "reviewer": {
                "name": "Patel-Kamalkumar",
                "email": "kamalkumar.patel@ibm.com",
                "username": "Patel-Kamalkumar"
            },
            "message": "Patch Set 17:\n\n(6 comments)"
        },
        {
            "timestamp": 1711012599,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithrabarithaya07@gmail.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 17:\n\n(8 comments)"
        },
        {
            "timestamp": 1711013021,
            "reviewer": {
                "name": "Pavithra Barithaya",
                "email": "pavithrabarithaya07@gmail.com",
                "username": "Pavithrab7"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1711013245,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1711013637,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 17:\n\n(3 comments)"
        },
        {
            "timestamp": 1711020953,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 17:\n\n(12 comments)"
        },
        {
            "timestamp": 1711021748,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711021774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711021774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1711021775,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 17:\n\n(3 comments)"
        },
        {
            "timestamp": 1711022005,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81076/ : SUCCESS"
        },
        {
            "timestamp": 1711073975,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 18: Code-Review-1\n\n(11 comments)"
        },
        {
            "timestamp": 1711096613,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 18:\n\n(14 comments)"
        },
        {
            "timestamp": 1711096680,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 18:\n\n(1 comment)"
        },
        {
            "timestamp": 1711486083,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 18:\n\n(23 comments)"
        },
        {
            "timestamp": 1711486100,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 19.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1711486116,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711486116,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1711486199,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 20."
        },
        {
            "timestamp": 1711486220,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1711486221,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1711486223,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/81305/ : ABORTED"
        },
        {
            "timestamp": 1711486451,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/81307/ : SUCCESS"
        },
        {
            "timestamp": 1711486682,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1711584927,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 20:\n\n(5 comments)"
        },
        {
            "timestamp": 1711585545,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 20: Code-Review-1\n\n(7 comments)"
        },
        {
            "timestamp": 1711641055,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1711641112,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1712061688,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 20:\n\n(9 comments)"
        },
        {
            "timestamp": 1712121147,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1712125282,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1712900304,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 21.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1712900365,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1712900365,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1712900400,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 21:\n\n(16 comments)"
        },
        {
            "timestamp": 1712900574,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/82513/ : FAILURE"
        },
        {
            "timestamp": 1712917288,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Set Work In Progress"
        },
        {
            "timestamp": 1713250179,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 22.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713250187,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 21:\n\n(2 comments)\n\nThis change is ready for review."
        },
        {
            "timestamp": 1713250187,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Set Ready For Review"
        },
        {
            "timestamp": 1713250205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713250205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1713250434,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/82804/ : SUCCESS"
        },
        {
            "timestamp": 1713250486,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 23.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1713250540,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1713250540,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1713250767,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/82805/ : SUCCESS"
        },
        {
            "timestamp": 1713256234,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 23:\n\n(1 comment)"
        },
        {
            "timestamp": 1713342463,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 23: Code-Review-1\n\n(19 comments)"
        },
        {
            "timestamp": 1714446578,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 23:\n\n(17 comments)"
        },
        {
            "timestamp": 1714446906,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 24.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1714446953,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1714446953,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1714447181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/83623/ : SUCCESS"
        },
        {
            "timestamp": 1714451132,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 24: Code-Review-1\n\n(32 comments)"
        },
        {
            "timestamp": 1714626986,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        },
        {
            "timestamp": 1714709124,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        },
        {
            "timestamp": 1715135106,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 24:\n\n(8 comments)"
        },
        {
            "timestamp": 1715135232,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 25.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715135247,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715135247,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1715135659,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/83959/ : SUCCESS"
        },
        {
            "timestamp": 1715138469,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 26.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715138497,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715138497,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: -Ok-To-Test"
        },
        {
            "timestamp": 1715138525,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 26:\n\n(1 comment)"
        },
        {
            "timestamp": 1715138739,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 26: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/83963/ : SUCCESS"
        },
        {
            "timestamp": 1715143366,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 26:\n\n(28 comments)"
        },
        {
            "timestamp": 1715143375,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 26: Code-Review-1"
        },
        {
            "timestamp": 1715226075,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 26:\n\n(23 comments)"
        },
        {
            "timestamp": 1715226109,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 27.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715226154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715226154,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: -Ok-To-Test"
        },
        {
            "timestamp": 1715226167,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 27: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84053/ : FAILURE"
        },
        {
            "timestamp": 1715230892,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 27: Code-Review-1\n\n(23 comments)"
        },
        {
            "timestamp": 1715231146,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 27:\n\n(2 comments)"
        },
        {
            "timestamp": 1715231381,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 27:\n\n(6 comments)"
        },
        {
            "timestamp": 1715237884,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 27:\n\n(17 comments)"
        },
        {
            "timestamp": 1715238083,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 28.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715238105,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715238110,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: -Ok-To-Test"
        },
        {
            "timestamp": 1715238346,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 28: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84064/ : SUCCESS"
        },
        {
            "timestamp": 1715240536,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 28: Code-Review-1\n\n(22 comments)"
        },
        {
            "timestamp": 1715250088,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 28:\n\n(1 comment)"
        },
        {
            "timestamp": 1715253012,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 28:\n\n(4 comments)"
        },
        {
            "timestamp": 1715253052,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 29.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715253086,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715253086,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: -Ok-To-Test"
        },
        {
            "timestamp": 1715253335,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 29: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84073/ : SUCCESS"
        },
        {
            "timestamp": 1715305539,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 29: Code-Review-1\n\n(8 comments)"
        },
        {
            "timestamp": 1715324528,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 29:\n\n(5 comments)"
        },
        {
            "timestamp": 1715324809,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 30: Patch Set 29 was rebased.\n\nCopied Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR **changekind:TRIVIAL_REBASE** OR is:MIN\")\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715324835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715324835,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: -Ok-To-Test"
        },
        {
            "timestamp": 1715325088,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 30: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84101/ : SUCCESS"
        },
        {
            "timestamp": 1715336694,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 31.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715336737,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715336738,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: -Ok-To-Test"
        },
        {
            "timestamp": 1715337008,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 31: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84129/ : SUCCESS"
        },
        {
            "timestamp": 1715561072,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 31: Code-Review-1\n\n(13 comments)"
        },
        {
            "timestamp": 1715574022,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 31:\n\n(4 comments)"
        },
        {
            "timestamp": 1715601568,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 31:\n\n(2 comments)"
        },
        {
            "timestamp": 1715765048,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 31:\n\n(14 comments)"
        },
        {
            "timestamp": 1715765357,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 32.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715765390,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715765390,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: -Ok-To-Test"
        },
        {
            "timestamp": 1715765522,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 33."
        },
        {
            "timestamp": 1715765549,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715765550,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: -Ok-To-Test"
        },
        {
            "timestamp": 1715765552,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84411/ : ABORTED"
        },
        {
            "timestamp": 1715765799,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 33: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84412/ : SUCCESS"
        },
        {
            "timestamp": 1715765969,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 32: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84413/ : SUCCESS"
        },
        {
            "timestamp": 1715819656,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 33: Code-Review-1\n\n(11 comments)"
        },
        {
            "timestamp": 1715848055,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 33:\n\n(11 comments)"
        },
        {
            "timestamp": 1715848060,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 34.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715848080,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715848080,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: -Ok-To-Test"
        },
        {
            "timestamp": 1715848322,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 34: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84472/ : SUCCESS"
        },
        {
            "timestamp": 1715848786,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 35.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715848810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715848810,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: -Ok-To-Test"
        },
        {
            "timestamp": 1715849058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 35: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84473/ : SUCCESS"
        },
        {
            "timestamp": 1715872253,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 36.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1715872272,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1715872272,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: -Ok-To-Test"
        },
        {
            "timestamp": 1715872516,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 36: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84479/ : SUCCESS"
        },
        {
            "timestamp": 1715905190,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 36: Code-Review-1\n\n(10 comments)"
        },
        {
            "timestamp": 1715905301,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 36:\n\n(1 comment)"
        },
        {
            "timestamp": 1716181860,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 36:\n\n(9 comments)"
        },
        {
            "timestamp": 1716181940,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 36:\n\n(6 comments)"
        },
        {
            "timestamp": 1716182001,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 37.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716182032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716182032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: -Ok-To-Test"
        },
        {
            "timestamp": 1716182275,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 37: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84597/ : SUCCESS"
        },
        {
            "timestamp": 1716182794,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1716182861,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 37:\n\n(1 comment)"
        },
        {
            "timestamp": 1716183064,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 38: Patch Set 37 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716183102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716183102,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: -Ok-To-Test"
        },
        {
            "timestamp": 1716183350,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 38: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84600/ : SUCCESS"
        },
        {
            "timestamp": 1716188630,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 38: Code-Review-1\n\n(3 comments)"
        },
        {
            "timestamp": 1716192013,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 38:\n\n(1 comment)"
        },
        {
            "timestamp": 1716209425,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 38:\n\n(2 comments)"
        },
        {
            "timestamp": 1716209453,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 39.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716209504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716209504,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: -Ok-To-Test"
        },
        {
            "timestamp": 1716209842,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 39: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84640/ : SUCCESS"
        },
        {
            "timestamp": 1716249689,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 39:\n\n(1 comment)"
        },
        {
            "timestamp": 1716254650,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 39:\n\n(2 comments)"
        },
        {
            "timestamp": 1716277903,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 39:\n\n(10 comments)"
        },
        {
            "timestamp": 1716290479,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 39:\n\n(8 comments)"
        },
        {
            "timestamp": 1716290490,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 40.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716290555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716290555,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: -Ok-To-Test"
        },
        {
            "timestamp": 1716290809,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 40: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84721/ : SUCCESS"
        },
        {
            "timestamp": 1716295674,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 40:\n\n(4 comments)"
        },
        {
            "timestamp": 1716295723,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 40:\n\n(2 comments)"
        },
        {
            "timestamp": 1716295783,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 40:\n\n(1 comment)"
        },
        {
            "timestamp": 1716343309,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 40:\n\n(4 comments)"
        },
        {
            "timestamp": 1716350881,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 41.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716350887,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 40:\n\n(3 comments)"
        },
        {
            "timestamp": 1716350926,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716350926,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: -Ok-To-Test"
        },
        {
            "timestamp": 1716351178,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 41: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84745/ : SUCCESS"
        },
        {
            "timestamp": 1716469683,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 42.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716469722,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716469722,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: -Ok-To-Test"
        },
        {
            "timestamp": 1716469923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 42: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84804/ : FAILURE"
        },
        {
            "timestamp": 1716470492,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 43: Patch Set 42 was rebased.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716470517,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716470517,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: -Ok-To-Test"
        },
        {
            "timestamp": 1716470728,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 43: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84809/ : FAILURE"
        },
        {
            "timestamp": 1716531936,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 44.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716531966,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716531966,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: -Ok-To-Test"
        },
        {
            "timestamp": 1716532221,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 44: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84841/ : SUCCESS"
        },
        {
            "timestamp": 1716532324,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 44:\n\n(1 comment)"
        },
        {
            "timestamp": 1716533456,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 44:\n\n(2 comments)"
        },
        {
            "timestamp": 1716735058,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 44:\n\n(3 comments)"
        },
        {
            "timestamp": 1716787623,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Uploaded patch set 45: Patch Set 44 was rebased.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716787651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716787651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: -Ok-To-Test"
        },
        {
            "timestamp": 1716787719,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 45:\n\n(1 comment)"
        },
        {
            "timestamp": 1716787899,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 45: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84885/ : SUCCESS"
        },
        {
            "timestamp": 1716789482,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 45:\n\n(1 comment)"
        },
        {
            "timestamp": 1716870438,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 45:\n\n(3 comments)"
        },
        {
            "timestamp": 1716870684,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 46: New patch set was added with same tree, parent tree, and commit message as Patch Set 45.\n\nCopied Votes:\n* Verified+1 (copy condition: \"**changekind:NO_CHANGE**\")\n"
        },
        {
            "timestamp": 1716870738,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716870743,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: -Ok-To-Test"
        },
        {
            "timestamp": 1716870786,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 47.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716870843,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716870843,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: -Ok-To-Test"
        },
        {
            "timestamp": 1716870845,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 46: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/84977/ : ABORTED"
        },
        {
            "timestamp": 1716871103,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 47: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/84978/ : SUCCESS"
        },
        {
            "timestamp": 1716958578,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 47:\n\n(2 comments)"
        },
        {
            "timestamp": 1716959755,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 47: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1716960426,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 47:\n\n(3 comments)"
        },
        {
            "timestamp": 1716962737,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 47:\n\n(3 comments)"
        },
        {
            "timestamp": 1716962752,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 48.\n\nOutdated Votes:\n* Code-Review+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716962789,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716962789,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: -Ok-To-Test"
        },
        {
            "timestamp": 1716963044,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 48: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/85049/ : SUCCESS"
        },
        {
            "timestamp": 1716963672,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 48:\n\n(1 comment)"
        },
        {
            "timestamp": 1716982546,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Uploaded patch set 49.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1716982557,
            "reviewer": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "message": "Patch Set 48:\n\n(1 comment)"
        },
        {
            "timestamp": 1716982576,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1716982577,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: -Ok-To-Test"
        },
        {
            "timestamp": 1716982836,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 49: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/85064/ : SUCCESS"
        },
        {
            "timestamp": 1717033398,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 49: Code-Review+1\n\n(2 comments)"
        },
        {
            "timestamp": 1717043208,
            "reviewer": {
                "name": "ManojKiran Eda",
                "email": "manojkiran.eda@gmail.com",
                "username": "manojkiraneda"
            },
            "message": "Patch Set 49: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1717044454,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Patch Set 49: Code-Review+2"
        },
        {
            "timestamp": 1717044463,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "message": "Change has been successfully rebased and submitted as 37552b998a8b58773a67f4c3e7ee128688237162"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "d674281ff8e14b61a769397bacb99e2d2e63ee56",
            "parents": [
                "88060a264e1f1c792b612882309bf98c920df1f8"
            ],
            "ref": "refs/changes/53/69353/1",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707736039,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 257,
            "sizeDeletions": 11
        },
        {
            "number": 2,
            "revision": "2a15446ee2658e29998db73fbaaa4c12f83f065d",
            "parents": [
                "88060a264e1f1c792b612882309bf98c920df1f8"
            ],
            "ref": "refs/changes/53/69353/2",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707736511,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 257,
            "sizeDeletions": 11
        },
        {
            "number": 3,
            "revision": "b7a1ef8d49a1f9be539cdb6dacaabb791c42a13d",
            "parents": [
                "88060a264e1f1c792b612882309bf98c920df1f8"
            ],
            "ref": "refs/changes/53/69353/3",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707736906,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 257,
            "sizeDeletions": 11
        },
        {
            "number": 4,
            "revision": "8da6b9584b4d32afd360075676b1e336fe57be71",
            "parents": [
                "88060a264e1f1c792b612882309bf98c920df1f8"
            ],
            "ref": "refs/changes/53/69353/4",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707737245,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 258,
            "sizeDeletions": 11
        },
        {
            "number": 5,
            "revision": "700266b9beaef3850d2a8bb6eb08b45f01ea5273",
            "parents": [
                "88060a264e1f1c792b612882309bf98c920df1f8"
            ],
            "ref": "refs/changes/53/69353/5",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707737686,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 258,
            "sizeDeletions": 11
        },
        {
            "number": 6,
            "revision": "e5192201e9a441ce44e731ff0ab07fb80aec3048",
            "parents": [
                "0a2e6fe40efd19abe670e20b506e8996aaf61759"
            ],
            "ref": "refs/changes/53/69353/6",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707816820,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 11
        },
        {
            "number": 7,
            "revision": "11c5864a65b5c0216b33f95400bbf9a8b88ff9a5",
            "parents": [
                "0a2e6fe40efd19abe670e20b506e8996aaf61759"
            ],
            "ref": "refs/changes/53/69353/7",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707817426,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 11
        },
        {
            "number": 8,
            "revision": "6a5876459ebd8ab2c0dc496aa1348b4d2d4f62c8",
            "parents": [
                "0a2e6fe40efd19abe670e20b506e8996aaf61759"
            ],
            "ref": "refs/changes/53/69353/8",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707817610,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 11
        },
        {
            "number": 9,
            "revision": "97391e0779b93346c5beccb74647afab4e9036bd",
            "parents": [
                "0a2e6fe40efd19abe670e20b506e8996aaf61759"
            ],
            "ref": "refs/changes/53/69353/9",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1707818268,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please prefix the commit subject with the affected subsystem. Perhaps this should be `platform: `?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please discuss what orphan entries are and the motivation for including them. I don't find the language in e.g. the platform spec."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "orphan entities are IBM specific , removed it and explained the commit in a different way"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "EDIT: Orphan entities will be changed in the next patch set."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "not done."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "i see this done , apologies."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please line wrap the commit message body at 72 characters."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please remove this phrase."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please reference the relevant section of the relevant specification document so I can easily follow along in the review?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "DSP0248_1.2.0 - SECTION 28.17 AND TABLE 94 - format of entity association PDR format. This spec explains the meaning of entity association PDR, contained entity and container entity"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Seeing \"also\" in a commit message peaks my interest, because it suggests that it probably should be split into separate, isolated changes."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "was this added as part of a different commit ? marking it done does not give an idea on how this is fixed in the commit."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "removed and split to differnt commit which got abandoned because that change did not agree with SPEC"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha. Unfortunately there's quite a bit here that needs improvement. I've left comments throughout. Some of them ask that you identify further instances of the problems yourself."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "thanks for the comment Andrew. I will clean up this commit"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why are we now exposing this struct in the library's API? This should be avoided if possible, but if it can't be avoided then it needs justification, at least in the commit message.\n\nFurther, the doxygen comment is now incorrect if this change is necessary."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 28,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "removed this ."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 472,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "How does this function indicate failure to the caller? I suspect it's not a function that has no possibility of failure.\n\nYou must not handle failures via `assert()`."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 472,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 475,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why are these being passed by value?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 475,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "changed to pass by reference"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please do not pass enum types as `uint8_t`. Also, this is documented as an \"in\" parameter. Why is it a pointer?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This enum is not required here as an input parameter so removed it"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "EDIT: This enum is required to keep track of change in BMC event operation, so it is an in-out parameter and needs to be a pointer. Also i am unable to change this from uint8_t to enum type pldm_pdr_repository_chg_event_change_record_event_data_operation because -\n1. enum pldm_pdr_repository_chg_event_change_record_event_data_operation is defined inside platform.h\n2. platform.h is included in pdr.c and not in pdr.h\n3. pdr.h is included in platform.h\n\nI did not find any example of something similar done inside libpldm, please suggest what we can do here? should we move the enum definition of pldm_pdr_repository_chg_event_change_record_event_data_operation to pldr.h instead of platform.h?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "is this still a concern @arj ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yes this is still a concern. We shouldn't lose type information like this. We should untangle the definitions in the headers. It sounds like their content isn't split appropriately.\n\n@Varsha please don't mark discussion threads as resolved until there is consensus on how to proceed. Making a unilateral choice isn't consensus."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "As per discussions done earlier, we will remove bmc_event_data_op as an input parameter here and handle its updated enum inside PLDM code as per the updated record handle or by checking the parent entity of the entity that is added to the entity association PDR"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 476,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 273,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm not a fan of this symbol name, or the inconsistency we have going here. I'd prefer we do a backwards-compatible cleanup patch first so we can give these a consistent naming scheme."
                },
                {
                    "file": "include/libpldm/platform.h",
                    "line": 273,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 18,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, moving this out to the public library API needs to be justified."
                },
                {
                    "file": "src/pdr.c",
                    "line": 18,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1295,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Adding functions straight to the stable ABI is forbidden.\n\nPlease take a few minutes to review the following:\n\nhttps://github.com/openbmc/libpldm/?tab=readme-ov-file#working-with-libpldm"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1295,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please do not submit patches for review that contain commented out code.\n\nPlease audit the patch and remove all instances."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1310,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I find this comment quite hard to understand. Please use full-stops."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1310,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1322,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The body of this loop is practically impossible to make sense of due to the level of indentation and heavy wrapping.\n\nPlease extract relevant pieces to static functions so it has the possibility of being readable."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1322,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "+1, cannot make sense of whats happening in this function. This seems like its doing multiple things all in just one function.. should be split into various functions which would perform single operation."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1322,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1330,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why is this cast valid? Please justify it in a comment and via asserts.\n\nPlease audit the patch and address this issue throughout."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1330,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1339,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "libpldm is not just used under Linux. malloc() can fail. You must handle the failure with appropriate resource cleanups and return value."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1339,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1344,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is the data directly sent out on the wire? Why are we doing endian conversions?\n\nPlease address this in the commit message with some design discussion."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1344,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "The PDR is obtained from the host and after the PDR is updated once the contained entity is included, its record handle is once accessed by the host so we need to make sure we store the record handle in the correct endian format"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1505,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Delete this."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1505,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 214,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 259,
            "sizeDeletions": 11
        },
        {
            "number": 10,
            "revision": "763071b50765c0b1cbd5ca36bd9baf64d92e01cb",
            "parents": [
                "0f04f01f9ce050fcd5f9711f8fbf1312d8c67995"
            ],
            "ref": "refs/changes/53/69353/10",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1708066944,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/platform.h",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 223,
                    "deletions": -9
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 25,
                    "deletions": -1
                }
            ],
            "sizeInsertions": 268,
            "sizeDeletions": 11
        },
        {
            "number": 11,
            "revision": "893911f4083f3839790d852e1c283979a40ee85f",
            "parents": [
                "f95eca367c70affb7ddaae0dc07063ba8eb0ea4f"
            ],
            "ref": "refs/changes/53/69353/11",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1708685834,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 200,
                    "deletions": -7
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 234,
            "sizeDeletions": 7
        },
        {
            "number": 12,
            "revision": "00631a185f16bd10c44fc5e28b68e83d398f58ba",
            "parents": [
                "f95eca367c70affb7ddaae0dc07063ba8eb0ea4f"
            ],
            "ref": "refs/changes/53/69353/12",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1708686116,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 200,
                    "deletions": -7
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 234,
            "sizeDeletions": 7
        },
        {
            "number": 13,
            "revision": "178e43b86f9f147d1476078e2472f83665727605",
            "parents": [
                "f95eca367c70affb7ddaae0dc07063ba8eb0ea4f"
            ],
            "ref": "refs/changes/53/69353/13",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1708686355,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "please push the next set of patches including the unit tests for the function that is being added."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1421,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "whats with the is_remote here ? can you add more details in the commit message to accurate capture what is being done in this commit."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1421,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 200,
                    "deletions": -7
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 234,
            "sizeDeletions": 7
        },
        {
            "number": 14,
            "revision": "24eb0acf6b83bffb5a14a9da8cdcd6781f72b98d",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/14",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1710998174,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 209,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 330,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "e3424d63f842213f9511a7a3c715d1844cf05699",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/15",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1710998449,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 209,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 327,
            "sizeDeletions": 0
        },
        {
            "number": 16,
            "revision": "7198b4427773793f158472f672b910a457a2b9bc",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/16",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1710999176,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 209,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 327,
            "sizeDeletions": 0
        },
        {
            "number": 17,
            "revision": "cb254dd1eddf60d53a0179a403b1285667d8fe7f",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/17",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1711001455,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "pdr:"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "Can you mention the spec that talks about this use case of adding the entity?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Patel-Kamalkumar",
                        "email": "kamalkumar.patel@ibm.com",
                        "username": "Patel-Kamalkumar"
                    },
                    "message": "Could you please add what use-cases, did you tested as part of this change?\nyou can use this changes and plugin with existing API in pldm and test the use-case."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 13,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "Hi Varsha, can you please add associated abi dumps? - https://amboar.github.io/notes/2023/06/26/managing-the-libpldm-abi-reference-dumps.html\n\nAlso an entry in CHANGELOG.md in the ADDED section."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "I also believe we didn't incorporate all of the review comments from @arj in the patchset 9.\nI still see the same issues throughout the commit."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "please elaborate @pavithra, what issue?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 480,
                    "reviewer": {
                        "name": "Patel-Kamalkumar",
                        "email": "kamalkumar.patel@ibm.com",
                        "username": "Patel-Kamalkumar"
                    },
                    "message": "Extra line"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 480,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1303,
                    "reviewer": {
                        "name": "Patel-Kamalkumar",
                        "email": "kamalkumar.patel@ibm.com",
                        "username": "Patel-Kamalkumar"
                    },
                    "message": "since this function is for local use, so please add proper doxygen comments to understand function better.\nplease mention remote_pdr means also."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1303,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1333,
                    "reviewer": {
                        "name": "Patel-Kamalkumar",
                        "email": "kamalkumar.patel@ibm.com",
                        "username": "Patel-Kamalkumar"
                    },
                    "message": "copying existing pdr data into new pdr is common code from line number 1333 to 1342 and \n1433 to 1454, this could be moved new copy function."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1333,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "It is not the same. We are updating the same same structure fields but the values given to the structure fields and its size different. So I cannot call the same function for this section of code in both places."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1354,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "typo"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1354,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1387,
                    "reviewer": {
                        "name": "Patel-Kamalkumar",
                        "email": "kamalkumar.patel@ibm.com",
                        "username": "Patel-Kamalkumar"
                    },
                    "message": "since this function is for local use, so please add proper doxygen comments to understand function better."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1387,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1465,
                    "reviewer": {
                        "name": "Patel-Kamalkumar",
                        "email": "kamalkumar.patel@ibm.com",
                        "username": "Patel-Kamalkumar"
                    },
                    "message": "This needs to be LIBPLDM_ABI_TESTING"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1465,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "+1\nThe API should be marked STABLE only after we imply we are not breaking any of the functions.\nhttps://amboar.github.io/notes/2023/06/26/managing-the-libpldm-abi-reference-dumps.html"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1465,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1471,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "need to change this PLDM_PDR_RECORDS_MODIFIED"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1471,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1506,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "need to change this to PLDM_PDR_RECORDS_ADDED"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1506,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 1933,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "can you explain this test case a bit? I am confused on what we tried here."
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 1933,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "we are creating a test association PDR and adding/modifying its PDRs.\nCASE 1: Association PDR is modified by including a new child to an aexisting parent PDR\nCASE 2: PDR is added to the association PDRs by sending the parent and its child as input. The position where the new parent-child should be added is decided by the bmc_record_handle sent with the function. \n\nPlease review src/pdr.c to verify above explanation"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 2002,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "How is this valid? the record handle sent as part of the function looks to be 11 and expected record handle is 2?"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 2002,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "please review src/pdr.c. For your reference Line No:1327"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 2002,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 2010,
                    "reviewer": {
                        "name": "Pavithra Barithaya",
                        "email": "pavithrabarithaya07@gmail.com",
                        "username": "Pavithrab7"
                    },
                    "message": "even here ?"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 2010,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "please review src/pdr.c. For your reference Line No :1422"
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "line": 2010,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 210,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 17,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 328,
            "sizeDeletions": 0
        },
        {
            "number": 18,
            "revision": "46ab6ee42ef69161f60ad4422ffcb8813ef12929",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/18",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1711021748,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "is it tree or PDR ? both of those words seem to be used interchangeably in this commit. are they same or different ? could we use one for consistency ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "could you explain what's a remote PDR and primary PDR in the commit message? are these words coming from the specification ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, thanks for the rework. This seems cleaner than previous iterations. I have fewer comments than before, but still some of high concern around the implementation. Some ask for further discussion."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 457,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "nit : contained entity id ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 457,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 458,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "nit: container entity id ? \n\nuse of words container & contained entity id's would make much sense here since they are documented in the spec ? \n\ndo you think otherwise ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 458,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "agree"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "what is the significance of this word `bmc` here ? are there any other handles that we generate out of this stack ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I have changed it to pdr_record_handle. bmc_record_handle is a common variable name for record handle throughout this file"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "yeah we should change those as well , probably in a different commit."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "so this assumes that there is already a PDR with the same container entity in the repository ? and we are merely modifying it ? or does it work if we dont have any PDR with the container entity at all ? if so we need to add a little more detail into the @brief section to make things more clear."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This works when there is no PDR with the container entity also. In such a case we add the contained entity passed in this API to the association PDR and attach the container entity to it and we will return the event data operation as PDR_ADDED instead of PDR_MODIFIED."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "so this here is inaccurate right ?\n\n>  uint32_t the updated PDR record handle\n\nits not always updated record handle, it can be newly created record handle as well ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "do u prefer updated record handle or modified record handle? I dont think we should use new record handle because when we find the container entity inside the entity association PDR the record handle of the contained entity = record handle of the container entity which is not new."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "no i was not mention about the variable name. just add a little more detail that its not always updated record handle..in some cases it is newly added record handle as well in so and so cases."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "changed the name of variable and its descriptin. Agreed keeping the word updated in name does not make sense for both cases"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 464,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please wrap all comments at the usual column limit.\n\nAlso, please put a space after `/*` and before `*/`. Multi-line `/* */` comments should\n\n```\n/*\n * Look like this\n */\n```\n\nPlease audit the rest of the patch and fix all other instances of the problem."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "does the record handle change after this function is called ? if so what happens to the older record ? is that deleted or stays in the system ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "not sure what this really means, can you elaborate in the comment description itself."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "By older record handle do you mean the record handle of the PDR already present in the association PDR? If yes, in line no 1309, the record handle of the PDR parent which matched the parent entity sent will be added as the updated record handle. So in this case record handle present in the system is the handle of new PDR added. No record handle is deleted."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1304,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Given this is a static function, please add assertions that all these pointers are not `NULL`. In the callers, please add (early-return) conditions that ensure the assertions are upheld prior to invoking this function.\n\nPlease audit the rest of the patch for this concern and fix all other instances."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1309,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "it looks like updated_record_handle is initialized with that ever was passed to this function, but that never really is modified, but sent back as return in 1385 ?what is the purpose of it ? did i miss it changing some where else ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1309,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "yes updated record handle whatever passed into the function. This can also be added in the calling function and not necessarily here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The implementation here contains no checks or assertions that the formed pointer is valid. That must be fixed.\n\nPlease audit the rest of the patch for this concern and fix all other instances.\n\nFurther, can you please discuss whether there's an opportunity to use the `msgbuf` APIs throughout to help provide correctness? They provide correct buffer bounds management, alignment and endianness conversions that generate efficient code."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Cannot add msgbuf in this case because we need to extract data of type pldm_entity from the msgbuf to get the address of child entity. \nstruct pldm_entity *child = (struct pldm_entity *)(&pdr->children[0])\nAbove line needs pdr defined. with msgbuf i cannot get the child pldm_entity"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As requested above, please don't mark discussion threads as resolved until we have consensus on a direction. As the original commenter, I don't feel like consensus has been achieved.\n\n> Cannot add msgbuf in this case because we need to extract data of type pldm_entity from the msgbuf to get the address of child entity.\n> struct pldm_entity child = (struct pldm_entity )(&pdr->children[0])\n> Above line needs pdr defined. with msgbuf i cannot get the child pldm_entity\n\nThe `msgbuf` APIs provide a generic and ergonomic means for packing and unpacking serialised message types, with correct handling of buffer bounds and value endianness with reasonable performance. If you need access to the child data it too can be unpacked. Other uses of `msgbuf` already demonstrate unpacking of nested data, for example:\n\nhttps://github.com/openbmc/libpldm/blob/main/src/platform.c#L253-L292\n\nUsing this one concern to dismiss using `msgbuf` everywhere doesn't sit well with me.\n\nUnless there's exceptional justification to the contrary, I'm going to require use of `msgbuf` for any new code touching data encoded in the PLDM wire format."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You're returning a negative value here, but the return type is `uint32_t`. That invokes clause 2 of 6.3.1.3 in the C23 (draft) spec (to pick one):\n\n> 6.3.1.3 Signed and unsigned integers\n> 1. When a value with integer type is converted to another integer type other than bool, if the value can be represented by the new type, it is unchanged.\n>\n> 2. Otherwise, if the new type is unsigned, the value is converted by repeatedly adding or subtracting one more than the maximum value that can be represented in the new type until the value is in the range of the new type.64)\n\nWe have:\n\n```\n$ errno -l | grep ENOMEM\nENOMEM 12 Cannot allocate memory\n```\n\nSo perhaps you're returning `-12` here. By the spec statements above, that yields e.g. `(-12 + UINT32_MAX + 1)`, which is not a number that anyone will expect.\n\nPlease fix the return type so that it can cope with error values. Either use a larger signed value representation, or just use `int` to indicate success or failure, and take the record handle as an out-parameter to the function.\n\nPlease audit the rest of hte patch for the concern and fix all other instances."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Using assert has taken care of this issue. we no longer return ENOMEM or EINVAL for this change"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You must not use `assert()` for error handling. If you're doing dynamic memory allocation with `malloc()` then you must handle the `NULL` case as an error."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This feedback is taken care of when we change the return type of the function from unt32_t to int. We return error codes for error handling now"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Thanks. So far the implementation is looking a _lot_ better \ud83d\ude0a"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Which endianness is this size member? On line 1329 we're setting a size member to LE32, and now I'm worried.\n\nFurther, what evidence do we have that this won't overflow? There are no checks or assertions."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "1. since the record->size is the size of a record already present in the entity association PDR, it is already in the correct endianness format. Because new_record->size is the size of a new record being added we need to take of care that it has the correct endianness.\n\n2. I have used assert to check for overflows and memory allocation issues throughout the changes made by me for this commit. Assert has been used to validate input parameters and malloc"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You're using a value specifically encoded as LE32 in a calculation executed in host-endianness. What happens if libpldm is used on a big-endian system?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This still needs to be addressed."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "can we discuss how we can approach this?- can we add #ifdef or #define IS_BIG_ENDIAN to make sure this part is error free on both little endian or big endian systems?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, so the point is that on line 1373 you have:\n\n```\nnew_record->size = htole32(...);\n```\n\nThis asserts that the size member should be little-endian. Is that actually the case? If so, to use the size member value here in the calculation for `malloc()` we need:\n\n```\nnew_record->data = malloc(le32toh(record->size) + sizeof(pldm_entity));\n```\n\nAnd you need to do similar on line 1373.\n\nYou also need to ensure the addition does not overflow."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Thank you. I have corrected the endian conversion of record->size."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1332,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "wrapping needed here as well."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1332,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is this an operation we do elsewhere? Can we extract it to its own function if so?\n\nPlease discuss whether there other opportunities for this strategy as well with respect to the code that follows."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "how many max children that can be added in an entity association PDR ? as per the spec ? without a check for that adding more children here could result in a spec violation right ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "yes it should be a violation. I have not come across the maximum value but the num of children is of type uint8 so I think we cannot have more than 255 children. Adding a check here needs further discussion because -\n1. just doing if(children<max_children) here or in the calling function is not enough, we need to return an error back to PLDM\n2. This API return uint32_t so how can we return error back to PLDM to indicate that the new entity is not added and the association PDR is not modified?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "please dont mark things as resolved without getting consensus.\n\nusing uint32_t as return type was your design choice right ? its not a hard and fast rule to just have uint32_t as return type. Yes, the API needs to be changed, so that it can return an ERROR back to the consumers stating that (cannot assume that this API always works right ? since there could be a spec violation)"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I can address this now because we have decided to change the return type of the function. So now we will return PLDM_ERROR error trace if the number of children is more than 255."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1473,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You must add tests to validate all caller-provided values. There is an opportunity for a trivial NULL deref, for instance, as there's no test for the validity of `event_data_op`.\n\nPlease audit the other parameters for the same problem."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1473,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I am checking event_data_op and other parameters with an assert and early return for NULL cases. Also added a check for the value of event_data_op in the unit tests"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1480,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why do we know this cast is valid? What assurance do we have that the type is in-bounds of the buffer pointed-to by the `data` member?\n\nAn error must be returned if this is not a valid construction.\n\nPlease audit the rest of the patch for this concern and fix all other instances."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1480,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "used pldm_platform_pdr_hdr_validate to check if the header will be in-bound. I did not see this function used inside pdr.c anywhere else, but I thought this meets the use case."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1491,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please extract this condition to a static function that returns `bool` to improve readability."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1491,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This needs error handling."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "if the PDR is not added to the existing entity association PDR then the updated record will be returned as 0. If the called PLDM function see that updated record handle is 0 we can log an error there. I feel we dont need to do any error handling for this section inside LIBPLDM"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You were doing a dynamic memory allocation in `pldm_entity_association_pdr_add_contained_entity_to_remote_pdr()`, which may fail."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "this is removed with the latest patchset"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 212,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 334,
            "sizeDeletions": 0
        },
        {
            "number": 19,
            "revision": "bf9a25ede9d4f0109f0c25261b98276491afd2fc",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/19",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1711486100,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 271,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 400,
            "sizeDeletions": 0
        },
        {
            "number": 20,
            "revision": "80ff032190e46fa83a5d5464f1ae9f1909141c2c",
            "parents": [
                "21594726765b538343dd3d5a26de554c2a15da91"
            ],
            "ref": "refs/changes/53/69353/20",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1711486199,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "could you please wrap this to 72 characters ? this seems like its wrapped to even less than 50 characters in some lines."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 21,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Unfortunately I have many of the same concerns as I did on PS7.\n\nPlease discuss the comments if you're unsure and avoid proceeding with changes until we have consensus on direction in each case."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@arj We discussed the concerns you had and following are possible solutions -\n\n1. Replace assert for error handling - I will change the return type of this API as int instead of uint32 so that we can return error cases . Record handle will be added as an in-out parameter for the API. We will also modify the calling function in PLDM to handle the errors correctly.\n\n2. event_data_op should be of enum type and not uint8* - We have found a way to not include this parameter as an input in this API. It will be modified in the calling function inside PLDM itself. So we dont need to address this concern at all.\n\n3. Msgbuf - I will include a generic case for the function pldm_msgbuf_extract that handles pldm_entity data type. This will allow me to use msgbuf to extract the contents of PDR. This will be a separate commit on top of this commit.\n\nPlease let me know if you have any further concerns on above suggestions. As mentioned by you,  I will add the changes to the commit after we agree on solutions for all concerns."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This was marked resolved by mistake"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "> Replace assert for error handling - I will change the return type of this API as > int instead of uint32 so that we can return error cases . Record handle will be\n> added as an in-out parameter for the API. We will also modify the calling \n> function in PLDM to handle the errors correctly.\n\nsounds like this could work.\n\n> event_data_op should be of enum type and not uint8* - We have found a way to not > include this parameter as an input in this API. It will be modified in the              > calling function inside PLDM itself. So we dont need to address this concern at  > all.\n\n> Msgbuf - I will include a generic case for the function pldm_msgbuf_extract that > handles pldm_entity data type. This will allow me to use msgbuf to extract the      > contents of PDR. This will be a separate commit on top of this commit.\n\nShouldn't this be below this commit and shouldn't your commit be using that infrastructure ?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@manoj\n\nyes we dont need to address the concern on event_data_op from @arj at all if we follow the suggestion.\nyes msgbuf generic case for pldm_entity data type commit should be below this commit."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Sorry, I lost track of this change somewhere.\n\n> Replace assert for error handling - I will change the return type of this API as int instead of uint32 so that we can return error cases . Record handle will be added as an in-out parameter for the API. We will also modify the calling function in PLDM to handle the errors correctly.\n\nOkay, thanks. That sounds like a good way forward.\n\n> event_data_op should be of enum type and not uint8* - We have found a way to not include this parameter as an input in this API. It will be modified in the calling function inside PLDM itself. So we dont need to address this concern at all.\n\nOkay. I guess I'll wait and see how that turns out \ud83d\ude0a\n\n> Msgbuf - I will include a generic case for the function pldm_msgbuf_extract that handles pldm_entity data type. This will allow me to use msgbuf to extract the contents of PDR. This will be a separate commit on top of this commit.\n\nI'm not following what you're proposing here. I haven't yet seen a need to _add_ to the `msgbuf` API behaviours - the point was you should implement the PDR manipulation in terms of what it already supports. Adding _any_ behaviour to `msgbuf` is something that needs to be done with a lot of care, precisely because it provides the abstractions that make parsing and packing buffers safe."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I think I have addressed all the concerns from PS7. Will mark this as resolved"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 40,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "could this be split into another commit with its own unit test ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 40,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "yes we can but this is a static function also it is defined in platform.c . I cannot call that function so I added it in pdr.c as well. This was a requirement from @arj saying we need to validate the headers. Do we need to convert it into a non static function and add its own unit test ?\n\nTEST(HeaderValidate, testPdrHdrValidate)\n{\n    struct pldm_msgbuf _ctx;\n    struct pldm_msgbuf* ctx = &_ctx;\n\n    ASSERT_EQ(pldm_platform_pdr_hdr_validate(ctx, 0, 0),\n              PLDM_ERROR_INVALID_LENGTH);\n    ASSERT_EQ(pldm_platform_pdr_hdr_validate(ctx, 10, 0),\n              PLDM_ERROR_INVALID_LENGTH);\n    ASSERT_EQ(pldm_platform_pdr_hdr_validate(ctx, 0, 10), PLDM_SUCCESS);\n}"
                },
                {
                    "file": "src/pdr.c",
                    "line": 40,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This is removed and not required with the latest change"
                },
                {
                    "file": "src/pdr.c",
                    "line": 40,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "doxygen for parameters missing."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "removed this API"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1321,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1326,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "match seems like a redundant variable. Implicitly sending true or false is better. Again this also seems like something that could be seperated into its own commit with its own unit tests."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1326,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1326,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1351,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "this API does not feel like something that should be separated, as most of the things seems to be hard coded within the function (like the PDR type as entity association), i don't foresee this being consumed by any other API in the future."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1351,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This was a review comment from @arj, can we discuss and then address this?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1351,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Mmm, I may have been wrong about it, or we may have changed the code to the point where it is more obviously unnecessary. I'm not convinced I asked you to do the right thing there \ud83d\ude0a"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1351,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Removed this , since both parties agreed it is not required"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1351,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1368,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "No. You must not use assert for error handling. `malloc()` can fail and return `NULL` in contexts that are not Linux, for instance hostboot and skiboot. You must handle these gracefully by returning an error to the caller."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1368,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1368,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1442,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "All of this should be implemented in terms of the `msgbuf` APIs."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1442,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1442,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1447,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The return type must accommodate the possibility of errors."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1447,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1447,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1474,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "No. You must not handle errors using `assert()`. You need to return the error to the caller."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1474,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1474,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1520,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, I think much of this should be implemented with `msgbuf`."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1520,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1520,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1524,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The return type must accommodate the possibility of errors, and error conditions must be returned to the caller."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1524,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1524,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1566,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "typo , will be corrected"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1566,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1566,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 271,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 400,
            "sizeDeletions": 0
        },
        {
            "number": 21,
            "revision": "381cd2b01ff78502d89374619d9cfa798775e993",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/53/69353/21",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1712900304,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 307,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 148,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 505,
            "sizeDeletions": 0
        },
        {
            "number": 22,
            "revision": "25a4c947eb52eb5901865e24231bc932f4e1a584",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/53/69353/22",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1713250179,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 294,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 149,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 493,
            "sizeDeletions": 0
        },
        {
            "number": 23,
            "revision": "e59b67ece1411849dbf3f8a9a49b1ce685386935",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/53/69353/23",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1713250486,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@arj we have modified the API design by adding some functionality to PLDM. \nWe will now check if the parent entity is present in the entity association PDR inside PLDM and call pldm_entity_association_pdr_add_contained_entity_to_remote_pdr if the parent entity is present. If it is not present we call pldm_entity_association_pdr_create_new and add both parent and child entity to the association PDR.\n\nEarlier pldm_entity_association_pdr_add_contained_entity_to_remote_pdr  and pldm_entity_association_pdr_create_new were static function , with this new change they are not."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha,\n\nFirstly, this is so much more readable than previous patchsets, thank you for continuing to rework it!\n\nThat said, I still have a number of concerns. See my comments inline."
                },
                {
                    "file": "src/pdr.c",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What assurance do we have that the addition can't overflow?\n\nDo you need an additional check for the overflow condition?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 31,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This API is not required with the latest change"
                },
                {
                    "file": "src/pdr.c",
                    "line": 31,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "My preferred style for libpldm is not to mix code and variable declarations. Please declare the variables at the top of the function before any further statements (i.e. not like how you have done here, or might do in C++)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1352,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Searching over the records for a specific handle seems like something we should lift out though, mainly to start building a vocabulary over the implementation. `pldm_pdr_find_record_by_handle()`? Make it static for now."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1352,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I found it hard implementing this comment because inside the static function prev will always be set but not used or initialized but bot used or set but never read.\nPlease suggest"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1352,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You need to show me what your implementation was in order for me to make any sensible feedback. Please paste the code in a markdown code-block."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1352,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "static bool pldm_pdr_find_record_by_handle(pldm_pdr_record *record,\n                                           pldm_pdr_record *prev,\n                                           uint32_t record_handle)\n{\n        if (!record || !prev) {\n                return false;\n        }\n        while (record != NULL) {\n                if (record->record_handle == record_handle) {\n                        return true;\n                }\n                prev = record;\n                record = record->next;\n        }\n        return false;\n}\n\nAdding a function like above makes prev unused inside this API. We do need prev in the caller function so we cannot remove the variable. Compiler complains of \"set but never read\". I was not sure how to best resolve this issue so I added a check on prev inside the while loop. If this is not ok, can you please suggest how to overcome the compile failure or if I can override the check during compilation?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1352,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If you need prev in the caller then you need to pass a pointer-to-pointer right?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1352,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "yes, thank you"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1362,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, some alarm bells here. The processor _has_ to do arithmetic in its own (host, `h`) endianness by definition, therefore this should be `le16toh()` right? `htole16()` and `le16toh()` are _not_ the same as `bswap()`.\n\nMore broadly, this sets off alarm-bells for the whole implementation of the PDR data structures - we should not be storing them in the wire format. However, fixing that is a _much_ bigger change than what you're trying to achieve with this patch.\n\nPlease read this for some context on my opinions: [Representations and Design Boundaries with Endianness](https://amboar.github.io/notes/2023/06/19/representations-and-design-boundaries-with-endianness.html)"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1362,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "To fix this bug I have remove the endian conversion at malloc and covert it only when the value needs to be added to the new record directly"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1362,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1364,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, so this is not a particularly interesting case, but things start to get more complex below as we acquire more resources.\n\nPlease use `goto` for resource cleanup; this will reduce the chance of leaks as much as possible given the constraints of C.\n\nIf you're after an example of what I'm suggesting, check the use of `goto`s in this patch:\n\nhttps://github.com/amboar/culvert/commit/502ba2008e642fb3188d74f1b57cef41685b46bc"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1364,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Adding a goto to free this resource is causing malloc failure. Not sure why adding a goto can be problem , any suggestions?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1364,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can you please add more details about what you mean by that? How did you determine that gotos were the cause of a malloc failure? Please paste all evidence somewhere we can reason about it (test cases, log output, the actual patch you wrote to implement the goto approach, anything else relevant)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1364,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I figured out the issue with my implementation. Added a goto."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1364,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1371,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You've done an endian conversion on `record->size` on line 1362, but not here. Regardless of which is correct (and whatever the case, the endian conversion on 1362 is wrong), there is a bug due to the inconsistency.\n\nThis is why I'd rather that all wire-format accesses be done via the `msgbuf` APIs. Admittedly, we would need to make them more ergonomic (add new APIs) for this specific case."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1371,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@arj one of your review comments suggest that I should be using the pldm_msg_buf for the record->data starting from the header. I did that and also used pldm_msgbuf_insert to insert the data to new_record. Therefore, we dont need to worry about incorrect endian conversion."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1371,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm not convinced by the reasoning here yet, however I'm marking this as done as the context is lost in the most recent patchset. I'll make further comments on endian correctness as I see fit."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1376,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why is this cast valid? What assurance do we have that the object pointed-to by `data` is of the appropriate size and doesn't represent another type?\n\nPlease add necessary runtime checks for errors and assertions for invariants to support your case"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1376,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This line is not present with the latest change"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1376,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1387,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I expect this is incorrect wrt endianness as well."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1387,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "new change does not contain this conversion"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1387,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1388,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "As is this? Is it in host endianness or LE? I feel this is all quite confused."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1388,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "new change does not contain this conversion"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1388,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1392,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, together with the endianness issues above this starts to build the case for implement PDR header handling in the `msgbuf` APIs, as helpers.\n\nLet's discuss how this might look. Currently I think the buffer should encapsulate the entire encoded message size, and the `msgbuf` helper for the PDR header should encode it into that buffer. That way you can continue to use the same `struct pldm_msgbuf` instance to continue encoding the rest of the entry."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1392,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "took this suggestion and used msgbuf on the entire record including the header"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1392,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1397,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Please create a `#define` for the size and implement it in terms of a literal value. That way we avoid open-coding a `sizeof()` and can eventually drop the `__attribute__((packed))` without impact here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1397,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "The new change does not require this to be addressed"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1397,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1417,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why are we bounce-buffering these through `val_uint{8,16}` if we're not using `pldm_msgbuf_insert()`? Also if you're not using a corresponding `pldm_msgbuf_insert()` then the endianness incoherent, so that must be fixed.\n\nTogether this suggests we might need something like `pldm_msgbuf_memcpy()` (where we would avoid endian conversion but continue to enforce buffer limits)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1417,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Used pldm_msgbuf_insert"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1417,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1422,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is this limit called out in the spec? I assume it is, or is implied by some specific section?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1422,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "num_children is of type uint8. Added a check here so we don't have undefined behaviour when we call this API to add another child if the number of children is already 255. This is not checked anywhere else. The SPEC only specifies that the type is uint8"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1422,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1438,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You _must_ test the return value of this function. The return value determines whether what you've done is coherent. If it's not then there's no sensible way forward and you must return the error (and do appropriate resource cleanup).\n\nPlease audit the rest of the patch for the issue."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1438,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1438,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1443,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is there a reason not to reuse the variables we've already declared?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1443,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "reused the variable with new change."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1443,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1481,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'm going to hold off reviewing this one, as I suspect contains many of the issues identified above."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1481,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Same again."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1481,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1481,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, Some of the commentary above applies to this function also."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1481,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Took care of it"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1481,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 294,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 149,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 498,
            "sizeDeletions": 0
        },
        {
            "number": 24,
            "revision": "53628667f5ed23c6215a3ce2e998dc6bd8da495f",
            "parents": [
                "64764fd6debc749fd2025f2ea6e7c98c6758ccdd"
            ],
            "ref": "refs/changes/53/69353/24",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1714446906,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, this continues to look better. Certainly there are fewer endianness concerns where the `msgbuf` API is now used (however others still linger).\n\nI can't help but suggest add to the `msgbuf` API to try improve its ergonomics for what you're trying to achieve here. I think we can further improve the readability of the code.\n\nI've marked many previous comments as resolved because their context isn't relevant in the latest implementation."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The endian conversion is still inconsistent, both with itself and with line 1343."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1353,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "discussion above"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "To be self-consistent, and assuming `new_record->size` must be LE-encoded, this line must be:\n\n```\nnew_record->size = htole32(le32toh(record->size) + sizeof(struct pldm_entity)));\n```\n\nYou must also ensure that the addition doesn't overflow."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1353,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1353,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1369,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You can invoke `pldm_msgbuf_init()` for the `record->data` buffer before the allocation of the `new_record` resources so that you don't have to do the `new_record` resource cleanup here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1369,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1369,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1381,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is in terms of the `new_record->data` resource and so we can't do the same thing as suggested above (hopefully that's obvious)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1381,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1381,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1385,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So this is the pattern I expected (and is correct), however I think you'll agree it's not super ergonomic. We should fix that by adding a new function to the `msgbuf` APIs, e.g.\n\n```\n#define pldm_msgbuf_copy(dst, src, type, name) \\\n    pldm__msgbuf_copy(dst, src, sizeof(type), #name)\nint pldm__msgbuf_copy(struct pldm_msgbuf *dst, struct pldm_msgbuf *src, size_t size, const char *description)\n{\n    /* A bunch of necessary checks */\n    \n    memcpy(dst, src, size);\n}\n```\n\nThat way all of this bouncing between `pldm_msgbuf_extract()` and `pldm_msgbuf_insert()` becomes e.g.:\n\n```\npldm_msgbuf_copy(buf1, buf, uint32_t, record_handle);\n```\n\nAre you happy to tackle such a patch (introduce the new `msgbuf` API in a patch prior to this one)?\n\nIf not I'm happy to, but I will be stoked if you're up for it.\n\nRelated (and either way we go above), this patch should be rebased on another we have in motion at the moment:\n\n[msgbuf: Enable pldm_msgbuf_extract() into packed members](https://gerrit.openbmc.org/c/openbmc/libpldm/+/71064)"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1385,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@arj Will work on the pldm_msgbuf_copy API and add this commit on top of new commit for pldm_msgbuf_copy. both these commits will be rebased on top of https://gerrit.openbmc.org/c/openbmc/libpldm/+/71064"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1385,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Great! Thanks \ud83d\ude0a"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1385,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1385,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 369,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 545,
            "sizeDeletions": 0
        },
        {
            "number": 25,
            "revision": "3b66e681943e5c946788493131bdbed325de8e24",
            "parents": [
                "bff45de691635aec0c39ce4f5c5f322cdda447c4"
            ],
            "ref": "refs/changes/53/69353/25",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715135232,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 302,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 478,
            "sizeDeletions": 0
        },
        {
            "number": 26,
            "revision": "c9ee2255e5fde6ff130c1769b0e9dcc2a8fb7dd3",
            "parents": [
                "9fc88ea4e9d1c0c5eefab585312739b2d58f29c3"
            ],
            "ref": "refs/changes/53/69353/26",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715138469,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@arj I had to rebase this commit with the msgbuf copy AI correctly so I pushed another patchset , apologies"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, hopefully my comments help clarify the endianness issue(s). I have some others also. I think the new `pldm_msgbuf_copy()` API makes the process feel less tedious \ud83d\ude0a"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1308,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "These should both be pointer-to-pointer, right?\n\n```\nstatic bool pldm_pdr_find_record_by_handle(pldm_pdr_record **record,\n                                           pldm_pdr_record **prev,\n                                           uint32_t record_handle)\n```\n\nThat way they act as in-out parameters."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1308,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1339,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we please use relevant names?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1339,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we give these relevant names? Like `src` and `dst` or something?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1343,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`&prev`"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1345,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`&record`"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1345,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1345,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1349,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I suggest we drop the `end` label and instead immediately return here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1349,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1357,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, just return rather than use goto."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1357,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1363,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Return again."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1363,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You must check the return value of `pldm_msgbuf_extract()` in this case because you are using the extracted value below."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I have checked the return value of extract everywhere. Do we also need to check the same for pldm_msgbuf_insert?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "No, because we don't use the value subsequently. Whether an error has occurred for `pldm_msgbuf_insert()` will be caught by the eventual `pldm_msgbuf_destroy*()` call for the buffer into which we inserted the value."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1403,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This needs a return value check also."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1403,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1453,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So rather than goto here, just return. It's fine to have labels (like `cleanup_new_record` below) beyond a return statement \ud83d\ude0a"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1453,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1485,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'd like these to have relevant names also."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1485,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1492,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think it would be cleaner to return early here, so:\n\n```\nif (!pdr_added) {\n    return 0;\n}\n```\n\n(Not sure if `return 0;` is what we want though?)\n\nWith that, you can un-indent all the code below."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1492,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1496,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "A comment explaining the arithmetic here would be very helpful."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1496,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1516,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Do we need to deal with endianness?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1516,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "yes because we save the value in new_record so we need to make sure it is in little endian"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1516,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1531,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What endianness is the size member?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1531,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1531,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1564,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Use `pldm_msgbuf_span_require()` to extract the pointer to a field of a specific length. You must also check the return value."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1564,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1578,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You're using the value below on line 1580 so you must check the return value here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1578,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "This can be changed to pldm_msgbuf_copy(...). Using the new API we can use copy for child container ID. No need to extract and insert"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1578,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1580,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Need to fix up the endianness, right? Also, you need to be very careful about alignment. I think this may need to be:\n\n```\nval_uint16 = htole16(val_uint16);\nmemcpy(ptr, &val_uint16, sizeof(val_uint16));\n```\n\nOr we could come up with another `msgbuf` API that is less error-prone"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1580,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I want to add a new API pldm_msgbuf_copy_data(...) to address this.\n\n\nstatic inline int pldm_msgbuf_copy_data(struct pldm_msgbuf *src, size_t size, void **cursor)\n{\n        if (!src || !src->cursor || !cursor || *cursor || size == 0) {\n                return PLDM_ERROR_INVALID_DATA;\n        }\n\n        if (size > SSIZE_MAX) {\n                return PLDM_ERROR_INVALID_LENGTH;\n        }\n\n        if ((SSIZE_MIN + (ssize_t)size) > src->remaining) {\n                return PLDM_ERROR_INVALID_LENGTH;\n        }\n\n        memcpy(*cursor, src->cursor, size);\n\n        return PLDM_SUCCESS;\n}"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1580,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I'd prefer not. Use of this API puts on the onus on the caller for endian-correctness, and they're just not going to get that correct all of the time. We need the endian-correctness invariant upheld by the `msgbuf` API itself."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 301,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 477,
            "sizeDeletions": 0
        },
        {
            "number": 27,
            "revision": "028381c849cf16293dbf91e2971cc032415540e8",
            "parents": [
                "9fc88ea4e9d1c0c5eefab585312739b2d58f29c3"
            ],
            "ref": "refs/changes/53/69353/27",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715226109,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, the patch continues to improve. I still have some (different) endianness and overflow concerns. I'll also ask Manoj to respond regarding the question of the PDR repository datastructure design."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Nit: Trailing whitespace.\n\nPlease audit the rest of the patch for other instances."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 455,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 457,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This shouldn't mention host, right?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 457,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 457,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Updated how? What does it mean?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Typo: `contained`"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 462,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 477,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Typo: contained"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 477,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1348,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The `undef` probably needs to come after its use \ud83d\ude0a\n\nBut why not just leave it defined? Is this not a reasonable definition?\n\nIf we can leave it defined, just define it after the includes near the top of the file?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1348,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1348,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1360,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "What if `size_t` is 32-bit?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1360,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1360,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This doesn't look right. What tells us `record->record_handle` is in host-endianness, and why should it be inconsistent between `record` and `new_record`?\n\nFurther, we're not using it in any calculation, so there's no reason to care, right? Shouldn't this just be\n\n```\nnew_record->record_handle = record->record_handle;\n```\n\n?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "corrected it"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1370,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If we're storing pointers in the struct why are we encoding non-pointer values into something that's not host-endianness? You can't (sensibly) put pointers on the wire, and mixing wire data with local data is just a recipe for confusion.\n\nThis comment is unfortunately a bit broader than your patch, but needs to be resolved."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Can we address this after this commit?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Well, we need to understand that it's correct first! If it's not we need to fix the expression, but if the expression is correct in the context of the current design, we can certainly defer fixing the design until later."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "I think we need to make sure that when pldm call into the libpldm API's we give it data in host-endianness format, so that we could avoid complicated conversions in libpldm. \n\n@andrew in this case, looks to me like the `record` is basically coming from `repo` which is created by PLDM at https://github.com/openbmc/pldm/blob/ba741d5fd0e0f0f245e74d40caa159581a45479c/libpldmresponder/pdr_utils.cpp#L31 , its created in little endian because its created by the BMC app..and if we convert that to host endian before passing it to the libpldm API we would not have these conversions in libpldm. is that the right way to fix things ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> I think we need to make sure that when pldm call into the libpldm API's we give it data in host-endianness format, so that we could avoid complicated conversions in libpldm. \n\nHmm, hang on a moment; libpldm is _precisely_ the place that we should put _all_ the endianness conversions, in the functions where we encoding-to and decoding-from the wire format. There should be no endian conversions anywhere else.\n\n> its created in little endian because its created by the BMC app..and if we convert that to host endian before passing it to the libpldm API we would not have these conversions in libpldm. is that the right way to fix things ?\n\nAlright, hold onto your hats, because I think there might be a source of confusion here around the word 'host'. Let me try to lay a few things out.\n\n1. OpenBMC is a project born from a design philosophy that divides a computer into (at least) two sub-computers. The functions to manage the computer are moved into one of the sub-computers which we often call the BMC, while the workload is run on the other sub-computer which we often call the host.\n\n2. Endianness is a problem born from two concerns:\n\n   2.1 Consensus on computer memory being addressable in 8-bit quantities (a byte), and\n   2.2 That we also need to work with numbers large enough to exceed 8 bits.\n   \n   So endianness is the problem of how we arrange in memory the ordering of the byte quantities that together represent the multi-byte value. There are two prevalent approaches:\n   \n   2.2. Little-endian, where the value's least-significant byte appears at the lowest memory address\n   2.3 Big-endian, where the values most-significant byte appears at the lowest memory address\n   \n   I've drawn a nice diagram of this [here](https://amboar.github.io/notes/2023/06/19/representations-and-design-boundaries-with-endianness.html)\n   \n   The history of handling endianness has lead to its own terminology, with some back-story in how software is built and the language of cross-compilation. Diverting briefly through the [automake documentation](https://www.gnu.org/software/automake/manual/html_node/Cross_002dCompilation.html) we find the following definitions for the command line switches of `configure` from autotools:\n   \n   2.4 `--build=`: The system on which the package is built.\n   2.5 `--host=`: The system where built programs and libraries will run.\n   2.6 `--target=`: (we're going to ignore this one, as it's both confusing and irrelevant for this discussion)\n   \n   To make this concrete, consider the case of OpenBMC. Typically it runs on 32-bit ARM systems, e.g. a Cortex-A7 in the AST2600, which implements the ARMv7-A ISA. However, I tend to build OpenBMC on my laptop, which is an x86-64 machine. In the context of the autotools vocabulary above, when building OpenBMC on my laptop, when running a `configure` script `bitbake` sets something that is approximately `--build=x86_64-linux-gnu` and `--host=arm-linux-gnueabihf`.\n   \n---\n\nThe point here is that in this discussion, 'host' takes multiple definitions which together may cause a lot of confusion:\n\n1. In the context of OpenBMC, the 'host' is the thing that's _not_ the BMC\n2. In the context of endianness, the 'host' is the thing on which the software is _running_, which in OpenBMC could be _either_ the 'host' (in the 'not the BMC' sense), or the BMC itself.\n\nSo now an extract of the `endian` manpage:\n\n> DESCRIPTION         top\n> \n> These functions convert the byte encoding of integer values from\n> the byte order that the current CPU (the \"host\") uses, to and\n> from little-endian and big-endian byte order.\n\nhttps://man7.org/linux/man-pages/man3/endian.3.html#DESCRIPTION\n\nSo in the context of endianness and software running on the BMC, the 'host' is the 'current CPU', which is the BMC's CPU. Concretely:\n\n- `le32toh()` converts a 32-bit value from little-endian to the endianness of the BMC's CPU\n- `htole32()` converts a 32-bit value from the endianness of the BMC's CPU to little-endian\n\nTo try to drive the point home, none of the behaviour of the endian-conversion functions involve anything to do with the 'host' in the not-the-BMC sense. There is no concept of this in their definition.\n\nThe remaining point is that the endian conversion functions uphold their post-condition regardless of _what_ endianness the current CPU is operating in. Which endianness the current CPU is operating in is a matter of how the hardware is implemented and how the ABI for the entire software stack is defined. For Linux on ARM and hence OpenBMC, we use little-endian. By way of contrast, IBM's Power CPUs are traditionally big-endian (and their firmware operates in big-endian).\n\nTo try to drive _that_ point home, the implementation of the endianness macros discussed above is instructive:\n\n```\n# if __BYTE_ORDER == __LITTLE_ENDIAN\n...\n#  define htole32(x) __uint32_identity (x)\n#  define le32toh(x) __uint32_identity (x)\n...\n# else\n...\n#  define htole32(x) __bswap_32 (x)\n#  define le32toh(x) __bswap_32 (x)\n#endif\n```\n\nhttps://sourceware.org/git/?p=glibc.git;a=blob;f=string/endian.h;h=fd20a2b1985de01e0472d826f2621839bb8e3032;hb=HEAD\n\nThat is, if the current CPU (again, 'host' - the BMC's CPU in the case of OpenBMC) is little-endian, then they are defined to [return the argument value unchanged](https://sourceware.org/git/?p=glibc.git;a=blob;f=bits/uintn-identity.h;h=8104070583c7b1ef2b596420c4f2725b238e1b97;hb=HEAD), otherwise (when the current CPU is running as big-endian) they are defined to swap the bytes.\n\n---\n\nWith that all in mind, can we re-examine whether some of these endian-conversions are required? Essentially:\n\n1. Anything that is in the PLDM wire-format must be little-endian.\n2. Anything _not_ in the PLDM wire-format _really should_ be host-endian, where 'host' is meant in the 'CPU on which the software is currently executing' sense\n\nSubstantiating 1, from DSP0240 v1.1.0, Section 5.3 Byte ordering:\n\n> Unless otherwise specified, for all PLDM specifications byte ordering of multibyte numeric fields or multibyte bit fields is \"Little Endian\" (that is, the lowest byte offset holds the least significant byte, and higher offsets hold the more significant bytes)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "> 2. Anything not in the PLDM wire-format really should be host-endian, where 'host' is meant in the 'CPU on which the software is currently executing' sense\n\nIf:\n\n1. The statement in 2. above was actually always the intent, and\n2. The statement about the members being little-endian was made with the additional context of libpldm running on the BMC\n\nThen:\n\n- We need to remove all endian conversion calls touching the `pldm_pdr_record` members.\n\nThe current patch is not self-consistent with how endianness is handled for `pldm_pdr_record`. It needs to be audited, any problems fixed (endian conversions removed) for all accesses, and not only in places where I've left a comment."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Thanks @arj for the explanation."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "removed endianess conversion for all members of pldm_pdr_record"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1373,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Needs a check for overflow."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1394,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This can be `pldm_msgbuf_insert(dst, header_length);`, right?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1394,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1394,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1406,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "It would feel to me like less of a contortion to do:\n\n```\nif (num_children == UINT8_MAX) {\n    rc = -EOVERFLOW;\n    goto cleanup_new_record;\n}\n```\n\nIt seems more obvious that we're hit the last one?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1406,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1406,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1411,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Again, just `pldm_msgbuf_insert()` should be enough?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1411,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1411,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1420,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "If you're going to reuse `src` here, you first need to:\n\n```\nrc = pldm_msgbuf_destroy(src);\nif (rc) {\n    goto cleanup_new_record;\n}\n```\n\nOtherwise we're going to lose any overflow detection for the original buffer associated with `src`."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1420,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1420,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1448,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Isn't this little-endian?\n\nWhat endianness is `repo->size`?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1448,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1448,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1449,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Same here?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1449,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1449,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1461,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Oh, so rather than a conditional here, I prefer we add another label, so:\n\n```\ncleanup_new_record_data:\n    free(new_record->data);\n\ncleanup_new_record:\n    free(new_record);\n    \n    return rc;\n```\n\nAnd then adjust the `goto`s above."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1461,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1461,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is it not declared packed? Why are we manually adding field lengths below?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1498,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1516,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "You must do the overflow check before the addition, otherwise the compiler will just delete the check."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1516,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1516,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1527,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Endianness"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1527,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1527,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1541,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`pldm_msgbuf_insert()`? The type information is encoded in the variable declaration."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1541,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1541,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1605,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Use the `cleanup_new_record_data` label approach discussed above here as well."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1605,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1605,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 306,
                    "deletions": 0
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 482,
            "sizeDeletions": 0
        },
        {
            "number": 28,
            "revision": "5a4530d2e6f63265e43a4f80e4b469ff5131b82e",
            "parents": [
                "9fc88ea4e9d1c0c5eefab585312739b2d58f29c3"
            ],
            "ref": "refs/changes/53/69353/28",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715238083,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, thanks for resolving many of the issues. I have just a few left."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1357,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Unsigned arithmetic is defined to overflow (unlike signed arithmetic, where any such behaviour is explicitly undefined). The test isn't correct as overflow is not the same as saturation (which is effectively what you're testing here). This should be:\n\n```\nif ((size_t)(le32toh(record->size)) > (SIZE_MAX - sizeof(pldm_entity)) {\n```\n\nThe `==` trick worked below on line 1408 because subsequently we add only the constant `1` to the value. Here' we're adding another (sort-of) arbitrary value and so we need a different strategy."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1357,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Adding the same check is throwing an error \ncomparison is always false due to limited range of data type [-Werror=type-limits]\n 1357 |         if ((size_t)(le32toh(record->size)) >\n \n So i fixed the line differently."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1357,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1391,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "So this is fine, because by \"the usual arithmetic conversions\" (N2176, C17 draft standard, section 6.3.1.8) we have:\n\n> Otherwise, the integer promotions are performed on both operands. Then the following rules\nare applied to the promoted operands:\n> - If both operands have the same type, then no further conversion is needed.\n> - Otherwise, if both operands have signed integer types or both have unsigned integer\ntypes, the operand with the type of lesser integer conversion rank is converted to the type of the operand with greater rank.\n\nThe `sizeof` operator yields a `size_t`, which will cause `header_length` to be promoted to `size_t` from the underlying type for `uint16_t`.\n\nWe could add\n\n```\nstatic_assert(UINT16_MAX < (SIZE_MAX - sizeof(pldm_entity)), \"Fix the following bounds check\");\n```\n\nabove line 1391 to be completely safe."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1391,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I have added the static assert. But I have a question , isnt it safer to free resources and error out with a -EOVERFLOW ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1391,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "`static_assert()` requires its expression to evaluate true at _compile_ time. That's different to regular `assert()`, which requires the expression to evaluate true at _run_ time.\n\nhttps://man7.org/linux/man-pages/man3/static_assert.3.html"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1391,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1454,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Do we need to check for underflow?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1454,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1454,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done, but I've left a comment above regarding the expression used for the check."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Right; you can see why storing these values in the wire-format endianness is tedious and error-prone..."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Overflow check?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 310,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 486,
            "sizeDeletions": 4
        },
        {
            "number": 29,
            "revision": "8a74c79d1bec03eecf807dc72bb7413d83da0fba",
            "parents": [
                "9fc88ea4e9d1c0c5eefab585312739b2d58f29c3"
            ],
            "ref": "refs/changes/53/69353/29",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715253052,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, Manoj - I've taken the time to try to make sure we're on the same page regarding endianness. Any confusion on anyone's part is only going to yield more confusion and bugs, so we need to straighten that out. Besides that I have some comments on the overflow tests."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1358,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I apologise for not testing the expression I suggested, but this cast is not the right way to deal with the problem either. The cast will truncate the value[^1] on some platforms, which is not what we want. For instance, on x86-64:\n\n```\nIn file included from <source>:1:\n<source>: In function 'main':\n<source>:8:5: error: static assertion failed: \"Truncation\"\n    8 |     static_assert(UINT32_MAX >= SIZE_MAX, \"Truncation\");\n      |     ^~~~~~~~~~~~~\nCompiler returned: 1\n```\n\nAn approach that works for multiple platforms is to perform the addition and then check for overflow (this is defined behaviour as we're working with unsigned types):\n\n```\nif (le32toh(record->size) + sizeof(pldm_entity) < sizeof(pldm_entity))\n```\n\nYou can see this in action for both (32-bit) ARM and x86-64 here:\n\nhttps://godbolt.org/z/dxGPefeKW\n\n[^1]: From N2176 (C17 draft specification), 6.5.4 Cast operators:\n\n> If the value of the expression is represented with greater range or precision than required by the type named by the cast (6.3.1.8), then the cast specifies a conversion even if the type of the expression is the same as the named type and **removes any extra range and precision**."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1358,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1358,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We needed _both_ the `static_assert()` _and_ the `if (...)` check you had previously (the latter being the \"following bounds check\" referred to by the message in the `static_assert()`). The `static_assert()` is not enough on its own. Please put the `if (...)` check back."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1393,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1453,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we reflect on the endian conversions here in the context of the endian discussion above?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1453,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1453,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1458,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Can we reflect on the endian conversions here in the context of the endian discussion above?\n\nTesting for equality is not enough here. You must check for the overflow. Assuming we don't require the endianness conversions:\n\n```\nif (repo->size + new_record->size < new_record_size) {\n```"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1458,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1458,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1540,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "The comparison doesn't make sense here as the addition will overflow around to a near-zero value. This should be (again, discarding the endianness conversion thing for the moment):\n\n```\nif (repo->size + new_record->size < new_record->size) {\n```"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1540,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1540,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 321,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 497,
            "sizeDeletions": 4
        },
        {
            "number": 30,
            "revision": "20cd43ad90b48ffbae62623493577e2b94227363",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/30",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715324809,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 321,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 497,
            "sizeDeletions": 4
        },
        {
            "number": 31,
            "revision": "02bdaf77796f74d2e24a9d98ecceb25ac8635162",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/31",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715336694,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, there's still some confusion regarding endianness, and one of the underflow checks is no-longer correct. I've left comments inline."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why did you change the condition expression? I don't think this makes sense anymore. Underflow of unsigned types yields a relatively large result (as opposed to overflow, which yields a relatively small result). Did you try the math yourself?\n\nRegardless, the expression you had previuosly (`repo->size < record->size`) correctly determines the possibility of underflow. We shouldn't need anything more complex (unlike for addition)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1455,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "marking this as resolved"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1600,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I think this endian conversion is necessary"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1600,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Yep!"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 323,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 499,
            "sizeDeletions": 4
        },
        {
            "number": 32,
            "revision": "c2eabe20aecb858b662295d820dfe54f539af6c8",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/32",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715765357,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 321,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 499,
            "sizeDeletions": 4
        },
        {
            "number": 33,
            "revision": "3f0f3639b03dd8f6d0bc9beb36a89f629cca7583",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/33",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715765522,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, I'm glad we've cleared up the endianness concerns, hopefully that's a weight off of everyone's shoulders. Now that we've cleaned things up further a few more concerns have become visible, none of them are quite at the scale of the endianness problem, thought there is a memory-corruption concern. I've left comments inline."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1358,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We can do this overflow test prior to the `malloc()` on line 1350, and save ourselves the resource cleanup.\n\nWhat are your feelings about the trade-offs of that idea vs the proximity to the actual use below on line 1359?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1358,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "It should be fine if it can avoid resource cleanup, but I will add a comment there to explain the overflow check for better understanding. Hope that's ok"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1358,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1367,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I removed this , because this gets assigned with the right value when pldm_pdr_replace_record is called."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1367,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1390,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, I did ask the `if (...)` to be put back, but the condition needs some work. I think it should be:\n\n```\nif (header_length + sizeof(pldm_entity) > UINT16_MAX) {\n```\n\nMark as resolved if this makes sense and you've applied the change."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1390,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1462,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Perhaps we can pull this out to a static function? `pldm_pdr_replace_record()`?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1462,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1464,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We already did this on line 1368."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1464,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1513,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Is this not `PDR_MIN_SIZE`?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1513,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1530,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I moved it to the beginning so that we can avoid resource cleanup here as well. This is an input parameter so I think it makes sense to do this check in the beginning of the function."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1530,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1539,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I think this must be done only after we've completed any actions that have the possibility of failing. That is, it should be almost the last thing we do. Otherwise you're going to leave a dangling pointer e.g. if the repo size update would overflow on lines 1540-1543 (as an example)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1539,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Assigning values to pldm_pdr_record members such as is_remote, and next should be done in the end because these come after data in the structure definition. \ntypedef struct pldm_pdr_record {\n        uint32_t record_handle;\n        uint32_t size;\n        uint8_t *data;\n        struct pldm_pdr_record *next;\n        bool is_remote;\n        ...\n\nSo I have rearranged the same in both functions"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1539,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "this is address / modifies"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1545,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Overflow check."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1545,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1545,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1567,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This should at least be `sizeof(*parent)` (for maintenance purposes)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1567,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "made the actual size for both msgbuf_init as sizeof(*parent) and sizeof(*entity) but kept the minimum size as sizeof(struct pldm_entity)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1567,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 321,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 499,
            "sizeDeletions": 4
        },
        {
            "number": 34,
            "revision": "f4cab81b7bb4dc8b85ceaf77301cb2d96083adb2",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/34",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715848060,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 337,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 515,
            "sizeDeletions": 4
        },
        {
            "number": 35,
            "revision": "b284882760a1f35e32b200699b825b260f48ef79",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/35",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715848786,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 340,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 518,
            "sizeDeletions": 4
        },
        {
            "number": 36,
            "revision": "c44b93ec1f602eb8898af9f850ad672a8be7ed98",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/36",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1715872253,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Comment removed by: Andrew Jeffery; Reason: Poor writing"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha, the extraction of `pldm_pdr_replace_record()` made me look more closely at its implementation, and I've found a few concerns. I've left comments inline."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1310,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Are any of these actually out-parameters? Surely this can be re-written with them as in-only, removing the tedium and risk from the implementation?\n\nLet me try (also accounting for the following comments below):\n\n```\nstatic int pldm_pdr_replace_record(pldm_pdr *repo, pldm_pdr_record *record, pldm_pdr_record *prev, pldm_pdr_record *new_record) {\n    if (repo->size < record->size) {\n        return -EOVERFLOW;\n    }\n    \n    if (repo->size + new_record->size < new_record->size) {\n        return -EOVERFLOW;\n    }\n    \n    if (repo->first == record) {\n        repo->first = new_record;\n    } else {\n        prev->next = new_record;\n    }\n    \n    new_record->next = record->next;\n    \n    if (repo->last == record) {\n        repo->last = new_record;\n    }\n    \n    repo->size -= record->size;\n    repo->size += new_record->size;\n    \n    return 0;\n}\n```"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1310,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This is done in both branches, and so shouldn't be conditional."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1319,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1324,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We must do this test before we manipulate any pointers, otherwise we're going to get list corruption."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1324,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1325,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Missing `return rc;`"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1325,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why `-ERANGE` here and `-EOVERFLOW` below? It should be consistent. `-EOVERFLOW` seems best?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1325,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1325,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1328,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Same here - this test must be done before any pointer manipulation."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1328,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1477,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Why here on line 1477, and not somewhere around 1397? I think that putting it here violates the [principle of least surprise](https://en.wikipedia.org/wiki/Principle_of_least_astonishment), and would prefer it be moved."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1477,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1629,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Sorry, I should have suggested you extract this too. This is `static int pldm_pdr_insert_record()`, right?\n\nPlease pay attention to all the comments I made on `pldm_pdr_replace_record()`, as they apply to this section of code as well."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1629,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1631,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "See comment on line 1477"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1631,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 341,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 519,
            "sizeDeletions": 4
        },
        {
            "number": 37,
            "revision": "1ed767bd05864a333617008e47813655e0ee3e54",
            "parents": [
                "50c234dcf55885d232ecd0df1d33ac2fe535c431"
            ],
            "ref": "refs/changes/53/69353/37",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716182001,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "@arj - \n\nThe review comments from last review - \n1. create a new static API pldm_pdr_insert_record\n2. make the parameters in both pldm_pdr_insert_record and pldm_pdr_replace_record as in-only parameters\n3. Test overflow and underflow cases before we modify or change postilion of new record added to repo\n4. the line new_record->next = record->next; move this outside if-else and make it common\n5.new_record->is_remote = record->is_remote; this should be done in 1397 , same for both APIs\n\nI have marked the review comments as resolved this time since they wont require further discussion"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "uresolved"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Super, thanks!"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1556,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We can delete the comment now, right? Using the macro should explain it."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1556,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 357,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 535,
            "sizeDeletions": 4
        },
        {
            "number": 38,
            "revision": "bd139462f92e430d3b324633e19344371d31d606",
            "parents": [
                "25afd2bed7a86854a5bb5cd40e922a554b60413b"
            ],
            "ref": "refs/changes/53/69353/38",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1716183064,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Okay, I think I'm nearly satisfied with this. I'd like input from others on the API and the actual behaviour now."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1313,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "In PS36 you marked my comment regarding `ERANGE` as done, but it's still present here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1313,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "apologies, I missed updating the commit pushed for review (because of discontinuity on my end), addressed it this time"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1313,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1500,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Ah, so I was looking at the ARM disassembly of this function and it made clear to me that by doing this we're mixing up how we're returning error values from the API.\n\n```\n    d2b4:       e001            b.n     d2ba <pldm_entity_association_pdr_add_contained_entity_to_remote_pdr+0x25e>\n    d2b6:       f06f 0415       mvn.w   r4, #21\n    d2ba:       4620            mov     r0, r4\n    d2bc:       b009            add     sp, #36 @ 0x24\n    d2be:       e8bd 8ff0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}\n    d2c2:       2403            movs    r4, #3\n    d2c4:       4620            mov     r0, r4\n    d2c6:       b009            add     sp, #36 @ 0x24\n    d2c8:       e8bd 8ff0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}\n    d2cc:       2402            movs    r4, #2\n    d2ce:       4620            mov     r0, r4\n    d2d0:       b009            add     sp, #36 @ 0x24\n    d2d2:       e8bd 8ff0       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}\n```\n\nthe instruction associated with the `#21` constant is `mvn.w`, while the instructions associated with the `#3` and `#2` constants are `movs`. Essentially some are negative errno codes, and some are positive PLDM protocol error codes. The positive PLDM protocol error codes come from the history of the `msgbuf` API being tied into the decoding of the wire format, and the history of libpldm.\n\nWe need to choose a consistent approach here (probably negative errnos, as I'd like to get away from using PLDM protocol error code values in the library API). From there, we need to make it ergonomic to choose how we make that consistent.\n\nA broader problem is making error handling consistent across the whole library (that's not something we should solve here)."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1500,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Agreed to this, that its a broader problem which should be solved but not necessarily here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1500,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I've got a WIP patch to deal with the return values for the functions in this commit, but currently it's breaking the ABI compliance checker \ud83d\ude04 I'm trying to sort that out."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1500,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 357,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 535,
            "sizeDeletions": 4
        },
        {
            "number": 39,
            "revision": "c75db9ee92eb5169f9605317d64bd895e2b43f05",
            "parents": [
                "05df5052fff66dc05c3b5fa7c85957b9249742eb"
            ],
            "ref": "refs/changes/53/69353/39",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716209453,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "nit: it can be added"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "this is still not resolved ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "apologies, will address now"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "We still need to solve the error code issue. I think I need to rework msgbuf a bit for that, so leaving this unscored for now."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 472,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "as per the spec, an entity association PDR will have a parent & one or multiple children under that parent right ?\n\nthis overview does not make sense in that respect, we are creating a new entity association PDR now ? as per the function naming? then there is no existing PDR again ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 472,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "agreed. removed the word existing from the description"
                },
                {
                    "file": "src/pdr.c",
                    "line": 12,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "shouldn't this be PDR_ENTITY_ASSICIATION_MIN_SIZE ? instead ? as its very specific"
                },
                {
                    "file": "src/pdr.c",
                    "line": 12,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1322,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "we have this in 1322, 1325 and also at 1327 ..seems double assignment here seems to be un-necessary ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1322,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done, this was a review comment from andrew that I missed thanks!"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1324,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "what if prev is null ? shouldn't we check it ? if it is not the first record, then prev should not be null right ? may be return -EINVAL in that case ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1324,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "prev == NULL can never happen. \n\nPDR1---PDR2---prev---record---NULL\n\nlets say entity association PDR has above arrangement. In this case prev can never NOT have a valid PDR because using pldm_pdr_find_record_by_handle(...) we traversed through the association PDRs to find the record which matched the record handle we wanted and we found it before record became NULL.. That means prev was not NULL\n\nAm I correct?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1324,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "yeah,looks like you are right. I was confused with all the double pointers initialization.thanks for checking."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1338,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "The function adds a newrecord right after the record, and that record could be anywhere, so we need to update the documentation to match this."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1338,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1341,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "do we need the prev pointer here ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1341,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "No it is not required. I have removed prev in this function. But it is also not required in pldm_entity_association_pdr_create_new(...). But since pldm_pdr_find_record_by_handle(..) is a common function to both APIs we are just using prev in pldm_entity_association_pdr_create_new(...) to call pldm_pdr_find_record_by_handle(..). Thats all. I checked and I dont think I can remove prev in pldm_entity_association_pdr_create_new(...)"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1341,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1355,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "this should be changed to `record`"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1355,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1367,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "need to check if prev is needed as well here."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1367,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "yes prev is required here because in pldm_entity_association_pdr_add_contained_entity_to_remote_pdr(...) we use prev to store the address of the PDR that is previous to record. This is important because in order to remove record we need to make sure new_record is coming after prev and before record->next."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1367,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 354,
                    "deletions": -4
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 532,
            "sizeDeletions": 4
        },
        {
            "number": 40,
            "revision": "029eb38f6968b3c3c59d2e96403e0f9f571f4b7c",
            "parents": [
                "909bf7c2ec77099a1c1436d55a823438dae40677"
            ],
            "ref": "refs/changes/53/69353/40",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716290490,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Varsha, Thanks for the rework. Just a couple of small comments, but rest everything looks okay to me."
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 472,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "`Creates a new entity association PDR with contained entity & its parent` this seems like a better way ?"
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "line": 472,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 12,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "typo: Should be `ASSOCIATION`"
                },
                {
                    "file": "src/pdr.c",
                    "line": 12,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 354,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 532,
            "sizeDeletions": 5
        },
        {
            "number": 41,
            "revision": "063ae5fe580690eea7725e99d7f9b4cdb216fa69",
            "parents": [
                "909bf7c2ec77099a1c1436d55a823438dae40677"
            ],
            "ref": "refs/changes/53/69353/41",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716350881,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 354,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 532,
            "sizeDeletions": 5
        },
        {
            "number": 42,
            "revision": "86ce02b162747fcf7d01636214c1b955c5d8430e",
            "parents": [
                "1af66d4718791610b52718a27ae518303e22b3eb"
            ],
            "ref": "refs/changes/53/69353/42",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1716469683,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 354,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 532,
            "sizeDeletions": 5
        },
        {
            "number": 43,
            "revision": "189f36bab5c0b679ecab6054680a9046bbb79d71",
            "parents": [
                "87485baef873d1f88dba24c881c1b9c5df171497"
            ],
            "ref": "refs/changes/53/69353/43",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1716470492,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 354,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 532,
            "sizeDeletions": 5
        },
        {
            "number": 44,
            "revision": "9458f8054ef0adc532f7cb2d5618cfdd90bffe04",
            "parents": [
                "9db81a922a663dd4ef6bc4bd7839c57b5a54fd89"
            ],
            "ref": "refs/changes/53/69353/44",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1716531936,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Hi Varsha. I found one minor remaining problem"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Hey Varsha & Andrew - just couple of nitpicks, but code wise it looks good."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "nit : Document Assumptions: It\u2019s good practice to document assumptions and preconditions (e.g., record is assumed to be part of repo, prev correctly points to a valid previous record, etc.).\n\nBecause any one looking at this function often gets confused on why there werent null checks - and its often time consuming to figure out the caller and look for cases where the passed value/pointer points to valid value. Rather a small documentation could help in cases like this. \n\nThis comment applies for the changes in this file."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "I guess to extend on this, IMO the most effective way to document pre- and post- conditions for static functions is using `assert()`, as that way they go out of date less easily. This might be a helpful example:\n\nhttps://gerrit.openbmc.org/c/openbmc/libpldm/+/71597/3/src/msgbuf.h#83\n\nHowever! For non-static functions (i.e. public functions of the library, exposed in the library ABI), you must _not_ use assert and instead document the pre- and post- conditions in the function's doxygen comment, _and_ test the conditions hold in the functions implementation, returning an error to the caller if they don't.\n\nActually, I decided I needed to write this stuff down, so now we have:\n\n[docs: checklists: Explore errors vs invariants](https://gerrit.openbmc.org/c/openbmc/libpldm/+/71627)"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "got it. Thanks for clarifying it down in the checklist."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "As per the above comments I have added assert to the static functions in this commit to check for invariant violation. The if-checks are taking care of post conditions"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1307,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1332,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "nit: could be combined together into one single line for clarity as it indicates that the repo size is being updated to new size."
                },
                {
                    "file": "src/pdr.c",
                    "line": 1332,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1507,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "There's no need to guard the call to `free()` this way. From the manpage:\n\n> The free() function frees the memory space pointed to by ptr,\n> which must have been returned by a previous call to malloc() or\n> related functions.  Otherwise, or if ptr has already been freed,\n> undefined behavior occurs.  **If ptr is NULL, no operation is\n> performed.**\n\n(emphasis mine)\n\nhttps://man7.org/linux/man-pages/man3/free.3.html"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1507,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1507,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 356,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 534,
            "sizeDeletions": 5
        },
        {
            "number": 45,
            "revision": "5ed19c2bf439073d1a5524422f0fa5daa2d6361a",
            "parents": [
                "ee6fb1aed42b6923d5f400565e5cd033183b71df"
            ],
            "ref": "refs/changes/53/69353/45",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1716787623,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 356,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 534,
            "sizeDeletions": 5
        },
        {
            "number": 46,
            "revision": "06db6171fe01cf5436e5c655d316c1b683949532",
            "parents": [
                "ee6fb1aed42b6923d5f400565e5cd033183b71df"
            ],
            "ref": "refs/changes/53/69353/46",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716870684,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 356,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 534,
            "sizeDeletions": 5
        },
        {
            "number": 47,
            "revision": "4f2f9ce9d08836a40a6d7abad773036a4f846ffb",
            "parents": [
                "ee6fb1aed42b6923d5f400565e5cd033183b71df"
            ],
            "ref": "refs/changes/53/69353/47",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716870786,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "shouldn't we have an assert for new_record pointer as well ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1315,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "missed it"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1335,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "nit :I don't personally have any preference, although compiler might optimize and generate the same code with and without brackets, are brackets really needed ? do we need any priority to subtract first vs the add ? and does that really matter in this case?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1335,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "I thought of it this way - remove old PDR record and add new one.\nIt does not matter , but looks better and readable thats all"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1335,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1335,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1376,
                    "reviewer": {
                        "name": "ManojKiran Eda",
                        "email": "manojkiran.eda@gmail.com",
                        "username": "manojkiraneda"
                    },
                    "message": "as record and prev are double pointers here, instead of making sure that record points to a valid address, shouldn't we also check if the pointed address has a valid value ?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1376,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 364,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 542,
            "sizeDeletions": 5
        },
        {
            "number": 48,
            "revision": "7767d986b2f769c72764c2f8e05e176b43c88a38",
            "parents": [
                "ee6fb1aed42b6923d5f400565e5cd033183b71df"
            ],
            "ref": "refs/changes/53/69353/48",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716962752,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/pdr.c",
                    "line": 1381,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "This suggests `*record` can be `NULL`. Why have we specified an invariant that it's not `NULL` (1377)? I don't think it's desirable that the caller needs to check?\n\nAlso is the list circular? Or can `*prev` be NULL on the first record?"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1381,
                    "reviewer": {
                        "name": "Varsha Kaverappa",
                        "email": "vkaverap@in.ibm.com",
                        "username": "vkaverap"
                    },
                    "message": "*prev can never be NULL. And there is no need to check *record == NULL. corrected both"
                },
                {
                    "file": "src/pdr.c",
                    "line": 1381,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@codeconstruct.com.au",
                        "username": "amboar"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 367,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 545,
            "sizeDeletions": 5
        },
        {
            "number": 49,
            "revision": "5e7a22cbea53d92ae4cf60944c9449fdde47a845",
            "parents": [
                "ee6fb1aed42b6923d5f400565e5cd033183b71df"
            ],
            "ref": "refs/changes/53/69353/49",
            "uploader": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "createdOn": 1716982546,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 365,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 543,
            "sizeDeletions": 5
        },
        {
            "number": 50,
            "revision": "37552b998a8b58773a67f4c3e7ee128688237162",
            "parents": [
                "8979bf35ab6356fe0b1dcb9ac249bce2126e3bc4"
            ],
            "ref": "refs/changes/53/69353/50",
            "uploader": {
                "name": "Andrew Jeffery",
                "email": "andrew@codeconstruct.com.au",
                "username": "amboar"
            },
            "createdOn": 1717044463,
            "author": {
                "name": "Varsha Kaverappa",
                "email": "vkaverap@in.ibm.com",
                "username": "vkaverap"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 21,
                    "deletions": 0
                },
                {
                    "file": "src/pdr.c",
                    "type": "MODIFIED",
                    "insertions": 365,
                    "deletions": -5
                },
                {
                    "file": "include/libpldm/pdr.h",
                    "type": "MODIFIED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/libpldm_pdr_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 121,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 543,
            "sizeDeletions": 5
        }
    ]
}