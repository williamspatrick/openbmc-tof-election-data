{
    "project": "openbmc/openbmc",
    "branch": "master",
    "id": "I4b0251bce114ddad38706b5cd93aef31aa7e8e12",
    "number": 68996,
    "subject": "meta-phosphor: static-norootfs: check for uboot env to mount ubifs as tmpfs",
    "owner": {
        "name": "Ciaran Concannon",
        "email": "cjcon90@pm.me",
        "username": "cjcon90"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/openbmc/+/68996",
    "hashtags": [],
    "createdOn": 1706026604,
    "lastUpdated": 1709176218,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1706026604,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1706026666,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1706028625,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706031555,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706031650,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1706031650,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Ok-To-Test"
        },
        {
            "timestamp": 1706031660,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/21374/"
        },
        {
            "timestamp": 1706032028,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706032264,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/21374/ : SUCCESS"
        },
        {
            "timestamp": 1706032276,
            "reviewer": {
                "name": "Jenkins OpenBMC Google",
                "email": "haojenkinsg00gle@gmail.com",
                "username": "jenkins-openbmc-g00gle"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nGoogle Internal CI : Google internal tests successfully started"
        },
        {
            "timestamp": 1706033617,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1706038809,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(2 comments)"
        },
        {
            "timestamp": 1706060207,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706060284,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706060676,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706061779,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706069230,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1706112173,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Uploaded patch set 2.\n\nOutdated Votes:\n* Code-Review-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE OR changekind:TRIVIAL_REBASE OR is:MIN\")\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1706112244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1706112244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: -Ok-To-Test"
        },
        {
            "timestamp": 1706112250,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/21392/"
        },
        {
            "timestamp": 1706112856,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/21392/ : FAILURE"
        },
        {
            "timestamp": 1706113029,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1706113469,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1706114226,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1706121225,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1706128950,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1706129646,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1709129468,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Uploaded patch set 3.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709129525,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709129525,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: -Ok-To-Test"
        },
        {
            "timestamp": 1709129535,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/21934/"
        },
        {
            "timestamp": 1709129823,
            "reviewer": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709130100,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/21934/ : SUCCESS"
        },
        {
            "timestamp": 1709130108,
            "reviewer": {
                "name": "Jenkins OpenBMC Google",
                "email": "haojenkinsg00gle@gmail.com",
                "username": "jenkins-openbmc-g00gle"
            },
            "message": "Patch Set 3:\n\nBuild Successful \n\nGoogle Internal CI : Google internal tests successfully started"
        },
        {
            "timestamp": 1709131067,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 3:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1709156325,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709158187,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1709160001,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1709160009,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 4.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709160083,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709160083,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1709160093,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/21946/"
        },
        {
            "timestamp": 1709160445,
            "reviewer": {
                "name": "Zev Weiss",
                "email": "zev@bewilderbeest.net",
                "username": "zevweiss"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1709160948,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/21946/ : SUCCESS"
        },
        {
            "timestamp": 1709160961,
            "reviewer": {
                "name": "Jenkins OpenBMC Google",
                "email": "haojenkinsg00gle@gmail.com",
                "username": "jenkins-openbmc-g00gle"
            },
            "message": "Patch Set 4:\n\nBuild Successful \n\nGoogle Internal CI : Google internal tests successfully started"
        },
        {
            "timestamp": 1709161897,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 4:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1709176213,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Code-Review+2"
        },
        {
            "timestamp": 1709176218,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully merged"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "7def788f28e9878800a76fbde5a5d1690c3c9873",
            "parents": [
                "b2c71e9c79db59567e5e040e2a3104ea18da811c"
            ],
            "ref": "refs/changes/96/68996/1",
            "uploader": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "createdOn": 1706026604,
            "author": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Nit: `s/system/filesystem/` (in two places)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Ciaran Concannon",
                        "email": "cjcon90@pm.me",
                        "username": "cjcon90"
                    },
                    "message": "Done"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'll get Ciaran added to the Meta CLA / CLA-group today and retrigger Jenkins."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ciaran was already in our CLA doc, so I added him to the CI group."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I wonder if we need to mount these as tmpfs instead then?  I'll be quite surprised if the system overall works with a completely read-only file system.  I bet there are programs that are expecting to be able to write to /var in order to maintain their state."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "The simple `grep` here is susceptible to false-positive matches; consider for example:\n\n```\n$ fw_printenv\nfoo_overlay_auto_mount=no\n```\n\nLuckily, `fw_printenv` can take a variable name as an argument and print just that variable (if it's set), which should solve the problem more neatly without needing `grep`.\n\n**However...**\n\nMost existing early-init configuration is done via kernel command-line arguments; is there a particular reason this one needs to be a u-boot environment variable instead?"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there an easy way to modify the kernel command line without having access to the u-boot console?"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Features like factory reset seem to already be handled with uboot environment, I think for this reason:\n\n```\nrecipes-phosphor/initrdscripts/phosphor-static-norootfs-init/21-factory-reset\n10:# Check uboot keys for 'factory-reset'\n11:if /sbin/fw_printenv openbmcinit openbmconce | grep -q factory-reset ; then\n12:    echo \"factory-reset\" >> /run/format-persist\n```"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "I'm not sure if there if there are other mechanisms in use elsewhere, but on the platforms I'm familiar with at least the kernel command-line arguments come from a u-boot variable (`bootargs`), so a `fw_setenv bootargs ...` from a linux shell should suffice I'd think?  (So, still a u-boot variable, but using the one that's sort of designated as the handoff point for information passed from u-boot to linux.)"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Since there are other features in the u-boot environment, including features like factory-reset, I'm not sure I really want to recommend we modify the kernel command line for this one.  Is there a strong preference in your mind for one or the other?  Kernel command line to me feels more \"dangerous\".\n\nI guess we could also argue if this should be a stand-alone environment variable or added to the existing variables used elsewhere in the initscripts: openbmcinit and openbmconce.  I suspect we should treat this exactly like factory reset and rely on those two variables.  The SOP should probably be to add it to openbmconce so that the auto-mount is disabled just for one boot."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "> Is there a strong preference in your mind for one or the other?\n\nNot a hill I'm going to die on as it were, just a general inclination to prefer continued use of existing (reasonably general) mechanisms over adding new ones -- I hadn't been aware of obmcinit/obmconce already using u-boot variables (though it appears they were introduced well before I started working on openbmc).\n\nHmm, though looking at how they're handled (at least [here](https://github.com/openbmc/openbmc/blob/a396c57aeda90eebbb75a3acc9d0248040be3d1f/meta-phosphor/recipes-phosphor/initrdscripts/files/obmc-init.sh#L209-L211)), it looks like they're basically just treated as auxiliary sources of the same arguments recognized in the kernel command-line?  Or am I misunderstanding something...\n\n> Kernel command line to me feels more \"dangerous\".\n\nJust in terms of it being a command-line argument that alters persistent state in a potentially destructive way?  It looks like we're already set up to accept `clean-rwfs-filesystem` and `factory-reset` from the command line, FWIW."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Ciaran Concannon",
                        "email": "cjcon90@pm.me",
                        "username": "cjcon90"
                    },
                    "message": "@zev re review points: good shout, have made the check more explicit\n\nThis fw_setenv approach is keeping in line with processes for our existing non-LF systems, but also don't feel extremely strong in terms of how this is achieved one way or the other.\n\nWasn't aware of openbmconce but it does make sense for this to be a one-time operation, can look into adding that as a minimum"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Ciaran Concannon",
                        "email": "cjcon90@pm.me",
                        "username": "cjcon90"
                    },
                    "message": "> I bet there are programs that are expecting to be able to write to /var in order to maintain their state\n\nHmm... anything particularly crucial in mind? Generally we disable running services at this stage anyway, but in terms of basic operation of the system we just need to be able to log in and run the script to wipe the flash & emmc"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do we intend to disable running services?  I'm not sure how we would do that.\n\nThere are lots of repositories that have daemons that write to /var.  My concern is especially something like this:\n\n1. Process has a \"restart maximum\" in their service file.\n2. Process can't write to an area of /var they expect to and just blindly throw an exception.\n3. Systemd restarts the process N times and then restarts the whole BMC.\n\nThen, you're either going to lose the \"once\" non-mount, or you're going to repeat this cycle again."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Ciaran Concannon",
                        "email": "cjcon90@pm.me",
                        "username": "cjcon90"
                    },
                    "message": "I would have thought the same as for existing platforms; we already disable any running daemons on the BMC which may attempt to write data or potentially interfere with the process; restapi, sensord, rackmond for rsws etc. - we just kill them via whatever is the relevant init system for that platform before the wipe script starts"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> we already disable any running daemons on the BMC which may attempt to write data or potentially interfere with the process; restapi, sensord, rackmond for rsws etc. - we just kill them via whatever is the relevant init system for that platform before the wipe script starts\n \nWon't you have to do that after the un-mounted reboot comes back up and lets you SSH in though?  By that point it might be too late because the services can already abort-due-to-read-only-root.\n\nI think the big difference here is that openbmc/openbmc has a read-only root while facebook/openbmc by default has an writable root (that goes to the in-memory initramfs)."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 19,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "c3dbec3e0bd1d95c315d50bec1f789736646b5ed",
            "parents": [
                "b2c71e9c79db59567e5e040e2a3104ea18da811c"
            ],
            "ref": "refs/changes/96/68996/2",
            "uploader": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "createdOn": 1706112173,
            "author": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "line": 9,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Sounds like we may be heading toward a slightly different mechanism anyway (so it may not be worth changing here now), but just for reference note that there's an `-n` flag that suppresses duplicating the variable name in the output, so this would be slightly cleaner as\n\n```\nif [ $(fw_printenv -n overlay_auto_mount 2>&1) = \"no\" ]; then\n```"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/50-mount-persistent",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 19,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "11d44bcc4c50c5ba228edd78996d5c1030ebf335",
            "parents": [
                "7fc39b2e676c7dc3cefcb3dff8801fa6b20e2c97"
            ],
            "ref": "refs/changes/96/68996/3",
            "uploader": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "createdOn": 1709129468,
            "author": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ciaran Concannon",
                        "email": "cjcon90@pm.me",
                        "username": "cjcon90"
                    },
                    "message": "Following discussions with Patrick, rather than looking to not mount the overlays at all, I've altered this diff to simply mount `/run/mnt-persist` as tmpfs rather than ubifs\n\nThis provides what we should need from a data sanitization point of view, whilst also maintaining the expected overlay structure for /etc, /var, /home/root"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/30-ubiattach-or-format",
                    "line": 7,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Existing usage of `openbmconce` (`meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/21-factory-reset`) suggests it's intended to be able to hold multiple \"flag\" substrings, so we might want to `grep` this instead of doing a straight equality check.  Though to be a little more strict with the matching, `grep -q -w` would probably be a better bet than just `grep -q` as in that file."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/30-ubiattach-or-format",
                    "line": 7,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/30-ubiattach-or-format",
                    "line": 11,
                    "reviewer": {
                        "name": "Zev Weiss",
                        "email": "zev@bewilderbeest.net",
                        "username": "zevweiss"
                    },
                    "message": "Also, a minor quibble: IMO a plain `exit` here would be slightly better than explicitly passing zero.  With no argument the exit status of the script is implicitly taken from `$?` (the exit status of the last command), so if the `mount` fails for some reason the script's exit status will reflect that (instead of silently squashing the error as happens with `exit 0`)."
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/30-ubiattach-or-format",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/30-ubiattach-or-format",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 31,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "2e1c7b17fc238d773f056b7825b227354a4f0d0d",
            "parents": [
                "2731f2b86c39abc8cdefd5fae0d5119ce3d7b841"
            ],
            "ref": "refs/changes/96/68996/4",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1709160009,
            "author": {
                "name": "Ciaran Concannon",
                "email": "cjcon90@pm.me",
                "username": "cjcon90"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "meta-phosphor/recipes-phosphor/initrdscripts/phosphor-static-norootfs-init/30-ubiattach-or-format",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 57,
            "sizeDeletions": 0
        }
    ]
}