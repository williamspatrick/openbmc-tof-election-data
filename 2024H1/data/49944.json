{
    "project": "openbmc/jsnbd",
    "branch": "master",
    "id": "Ic4578c5863dc196628cdcfa9e453803c4d749751",
    "number": 49944,
    "subject": "Replace old base - new service added",
    "owner": {
        "name": "Przemyslaw Czarnowski",
        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
        "username": "phawryle"
    },
    "url": "https://gerrit.openbmc.org/c/openbmc/jsnbd/+/49944",
    "hashtags": [],
    "createdOn": 1640221074,
    "lastUpdated": 1711352182,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1640221074,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1640353288,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(34 comments)"
        },
        {
            "timestamp": 1640358560,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1641382688,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1641384315,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 2:\n\n(36 comments)"
        },
        {
            "timestamp": 1641801630,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1641802393,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641870496,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1641887198,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641887769,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641890640,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641890806,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641893302,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1641894212,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1642170470,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1642233546,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1643382588,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1643382881,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1643665191,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1644077225,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1665134534,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1667950882,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1667950923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1667950923,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1667950944,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/55056/ : FAILURE"
        },
        {
            "timestamp": 1667952465,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1668411733,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1668425308,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1670846309,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1670846331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670846331,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: -Ok-To-Test"
        },
        {
            "timestamp": 1670846404,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57496/ : FAILURE"
        },
        {
            "timestamp": 1670849148,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1670934664,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1670934683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670934683,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: -Ok-To-Test"
        },
        {
            "timestamp": 1670934702,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57602/ : FAILURE"
        },
        {
            "timestamp": 1670937118,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1670937138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670937138,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: -Ok-To-Test"
        },
        {
            "timestamp": 1670937205,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57615/ : FAILURE"
        },
        {
            "timestamp": 1670939788,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1670939813,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670939814,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: -Ok-To-Test"
        },
        {
            "timestamp": 1670939889,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57618/ : FAILURE"
        },
        {
            "timestamp": 1670940671,
            "reviewer": {
                "name": "Igor Kononenko",
                "email": "i.kononenko@yadro.com",
                "username": "ikmsk10"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1670941721,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1670941744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670941744,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: -Ok-To-Test"
        },
        {
            "timestamp": 1670941837,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57624/ : FAILURE"
        },
        {
            "timestamp": 1670942998,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1670943024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670943024,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: -Ok-To-Test"
        },
        {
            "timestamp": 1670943173,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57629/ : FAILURE"
        },
        {
            "timestamp": 1670943989,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 10:\n\n(2 comments)"
        },
        {
            "timestamp": 1670946721,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1670946749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1670946749,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: -Ok-To-Test"
        },
        {
            "timestamp": 1670946848,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57642/ : FAILURE"
        },
        {
            "timestamp": 1671198847,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1671198879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671198879,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: -Ok-To-Test"
        },
        {
            "timestamp": 1671199002,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57951/ : FAILURE"
        },
        {
            "timestamp": 1671200282,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1671200294,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671200294,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1671200414,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57966/ : FAILURE"
        },
        {
            "timestamp": 1671202654,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1671202690,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671202690,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: -Ok-To-Test"
        },
        {
            "timestamp": 1671202806,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/57971/ : FAILURE"
        },
        {
            "timestamp": 1671729014,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 15: Commit message was updated."
        },
        {
            "timestamp": 1671729025,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1"
        },
        {
            "timestamp": 1671729032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1671729032,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: -Ok-To-Test"
        },
        {
            "timestamp": 1671729382,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/58238/ : SUCCESS"
        },
        {
            "timestamp": 1674049717,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 16.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674049742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674049742,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: -Ok-To-Test"
        },
        {
            "timestamp": 1674049759,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59295/ : FAILURE"
        },
        {
            "timestamp": 1674053314,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 17.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674053347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674053347,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: -Ok-To-Test"
        },
        {
            "timestamp": 1674053366,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/59304/ : FAILURE"
        },
        {
            "timestamp": 1674053646,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 18.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674053672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674053672,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: -Ok-To-Test"
        },
        {
            "timestamp": 1674053791,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59305/ : SUCCESS"
        },
        {
            "timestamp": 1674137496,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 19.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1674137522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1674137522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: -Ok-To-Test"
        },
        {
            "timestamp": 1674137666,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 19: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59400/ : SUCCESS"
        },
        {
            "timestamp": 1675093660,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1675145913,
            "reviewer": {
                "name": "Jeremy Kerr",
                "email": "jk@ozlabs.org",
                "username": "jk-ozlabs"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1675175593,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Uploaded patch set 20.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1675175612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1675175612,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: -Ok-To-Test"
        },
        {
            "timestamp": 1675175656,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 19:\n\n(1 comment)"
        },
        {
            "timestamp": 1675175750,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1675175774,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 20: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/59906/ : SUCCESS"
        },
        {
            "timestamp": 1675204463,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1675270691,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 20:\n\n(2 comments)"
        },
        {
            "timestamp": 1675271697,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1676483861,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1676483900,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1676541790,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 20:\n\n(1 comment)"
        },
        {
            "timestamp": 1701956562,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 21.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1701956584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1701956584,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: -Ok-To-Test"
        },
        {
            "timestamp": 1701956693,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 21: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/76895/ : SUCCESS"
        },
        {
            "timestamp": 1701958577,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 21:\n\n(1 comment)"
        },
        {
            "timestamp": 1703154637,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 22.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE OR changekind:NO_CODE_CHANGE\")\n"
        },
        {
            "timestamp": 1703154651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1703154651,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1703154713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/77271/ : FAILURE"
        },
        {
            "timestamp": 1704473999,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 22:\n\n(37 comments)"
        },
        {
            "timestamp": 1704477181,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1704726045,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 22:\n\n(37 comments)"
        },
        {
            "timestamp": 1704741194,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1704741195,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22: -Ok-To-Test"
        },
        {
            "timestamp": 1704741281,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 22:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/77694/ : FAILURE"
        },
        {
            "timestamp": 1704793723,
            "reviewer": {
                "name": "i-kononenko",
                "email": "i.kononenko.e@gmail.com",
                "username": "i-kononenko"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1705003168,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1705653938,
            "reviewer": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "message": "Patch Set 22:\n\n(1 comment)"
        },
        {
            "timestamp": 1705938060,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 23.\n\nOutdated Votes:\n* Verified-1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1705938097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1705938097,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: -Ok-To-Test"
        },
        {
            "timestamp": 1705938328,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 23: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78278/ : SUCCESS"
        },
        {
            "timestamp": 1706003042,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 24.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1706003077,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1706003077,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: -Ok-To-Test"
        },
        {
            "timestamp": 1706003304,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 24: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/78315/ : SUCCESS"
        },
        {
            "timestamp": 1706009124,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 24:\n\n(32 comments)"
        },
        {
            "timestamp": 1707512333,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(23 comments)"
        },
        {
            "timestamp": 1707512589,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(3 comments)"
        },
        {
            "timestamp": 1707513463,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        },
        {
            "timestamp": 1707531017,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        },
        {
            "timestamp": 1707531080,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        },
        {
            "timestamp": 1707772687,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(1 comment)"
        },
        {
            "timestamp": 1707835715,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 24:\n\n(23 comments)"
        },
        {
            "timestamp": 1707849000,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 24:\n\n(11 comments)"
        },
        {
            "timestamp": 1707923216,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 24:\n\n(2 comments)"
        },
        {
            "timestamp": 1709121217,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Uploaded patch set 25.\n\nOutdated Votes:\n* Verified+1 (copy condition: \"changekind:NO_CHANGE\")\n"
        },
        {
            "timestamp": 1709121254,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1709121254,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: -Ok-To-Test"
        },
        {
            "timestamp": 1709121358,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 25: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/79958/ : SUCCESS"
        },
        {
            "timestamp": 1709122803,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 25:\n\n(17 comments)"
        },
        {
            "timestamp": 1711352182,
            "reviewer": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "message": "Patch Set 25:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "1c9a6f9bc9eb4d9cacfaa585f3135f816c1603d7",
            "parents": [
                "7b7c29369cfeb267efa7f45b271aca6910687461"
            ],
            "ref": "refs/changes/44/49944/1",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1640221074,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "CMakeLists.txt",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we do Meson please?  New code is expected to be in meson."
                },
                {
                    "file": "CMakeLists.txt",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Meson will be added in the next patchset."
                },
                {
                    "file": "OWNERS",
                    "line": 36,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I would prefer we do this as a separate commit at the end, once the review of this new feature is complete.  I don't want this repository to simply turn into another playground without review."
                },
                {
                    "file": "OWNERS",
                    "line": 36,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ok, sounds reasonable."
                },
                {
                    "file": "OWNERS",
                    "line": 36,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "(and at that point, feel free to remove me from owners; this will be almost all your code :) )"
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "I guess if the `jsnbd` feature is totally removed the appropriate capability should be also removed from webui-vue and bmcweb together.\nAdditionally, I guess there are manufactures that are still using nbd-proxy and I don't understand why this feature is removing.\nIf nbd-proxy is totally removing, then the repository name was confusing and brings implicit meaning. I guess after the current patch the repository will nether provide `jsnbd` and seems to me will be better to have a new separate repository like 'virtual-media' and the current repository might be removed when the nbp-proxy will be marked as obsolete and each manufacturer will give up of that feature."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This one has been discussed in the group conversation. The main reason is that:\n- this repo alrady exist\n- some of the code will remain\n- repo is already configured (CI).\n\nI don't like it, but I am not the one to decide."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "> - some of the code will remain\n\nDid you plan to save the nbd-proxy feature by the next-time patchsets? I still don't understand how new feature that introduced by current patchset is concerned with the jsnbd(nbd-proxy) feature.\nI totally preferred to have a new separate repository for the virtual media, or we should include nbd-proxy in the current implementation (perhaps it should be built by a configure compile flag)"
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Now I saw the conversation on the maillist. \nOk, if the community remained of that view, I don't give any questions. But it seems to me that several manufacturers will be very surprised when they can't find the nbd-proxy feature."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Just to clarify my input on the mailing list: I have no preference on whether we keep using this repository or replace it with a different one. If it makes more sense to completely replace the 'jsnbd' name with your new server code, that's totally fine with me.\n\nMy main point is that we don't just add a whole new virtual media implementation *alongside* the exiting one - we want a complete replacement.\n\nIn terms of your \"some of the code will remain\" reference, I understand that to be just the javascript parts, which is a very small amount of code; if you copy that into a new repo and lose the history, that's fine by me too.\n\nIgor: there's no real \"proxy\" feature that will be missing by this change; the nbd-proxy.c file is just named for the service that proxies data between the websocket and the nbd device - it is not related to the proxy VM feature mentioned elsewhere, but implements the entire js-websocket-to-nbd channel."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Jeremy,\nThanks for the explanation. \n\nYes, I understand that current changes are implemented the approved new VM-design that includes Proxying nbd-server from the browser(that is brought up to the bmcweb by the websocket) to the nbd device endpoint. \nMy point is the new implementation has a new API in relation to bmcweb, which is directly called the `nbd-proxy` application with specific flags. \nThe incoming implementation also has the described feature, but it works on the unix-sockets, which will be served by a stand-alone dbus-service. That is incompatible with the bmcweb VM-WebSocket feature."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Yep, that just means we'll need to synchronise these changes with the other components (like bmcweb) that consume the modified interfaces. That's a fairly standard approach in OpenBMC though."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Don't take me the wrong way, the current case is required a little bit more than simple synchronization. \nCurrently, bmcweb has a two ways to communicate with NBD-endpoints:\n* By the nbd-proxy application(old-base jsnbd), in the bmcweb terms that is called vm-weboscket which is provided `/vm/0/X` ws-resource\n* By the vm-nbdproxy (works on the unix-sockets), which is provided `/nbd/X` ws resource.\n\nIf jsnbd old-base will be removed that does mean the bmcweb vm-websocket feature never be worked and all appropriate frontend WebUI application can't be used/vm/0/X resource. \n\nI guess a lot of WebUI implementations are still based on the old-base VM-feature and the total rejection of old-base implementation will incapacitate virtual-media on a frontend. My opinion here is that it might be more gradual, by introducing a new virtual-media implementation and after markin old-base implementation as obsolete, the jsnbd(nbd-proxy) might be subsequently removed."
                },
                {
                    "file": "nbd-proxy.c",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Actually that was my intention creating new repository and what I mentioned in the last post in the group - now, as new service is submitted we will lost the old one. \nThat means all upper layers has to be switched shortly.\n\nIf we want to stick to keep both services for transition period, new VM could go to branch so they won't collide."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't see anything here that uses boost/chrono.  Did I miss something?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 8,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "nice catch. Will use <chrono>."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "You could make this simply:\n\nreturn { \"-t\", timeout, \"-u\", ... };\n\nDRY it up by avoiding repeating yourself on the return type and more likely for the compiler to use RVO to avoid a copy."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "ok"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want this or std::optional<const MountPoint&>?  Having to deal with the nullptr is more error prone than something which is obviously nullable."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 58,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we just use std::map or std::unordered_map?  I really don't think there is as much advantage of using boost::..::flat_map as often as people attempt to use it."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 72,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This it just the pattern we use. This could be changed to unordered_map."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you want to simply catch all exceptions?  Why these two specifically?  Seems error prone in maintenance. \n\nShouldn't you log e.what() somewhere?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 103,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This can be changed to catch generic exception and print reason added to current message."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you simplify all this with:\n\nauto value = nbdDeviceIter->get_ref<const std::string&>();\n\n1. Prefer references over pointers.\n2. The typename of value is obvious from get_ref, so DRY."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 128,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This is the easiest and exceptionless getting of json values of given type.\nPointer in this case could be validated in opposite to reference. In case of type mismatch, get_ref<>() will throw nlohmann::type_error exception, so we must use try/catch block; get_ptr<>() will just return null pointer then. \n\nWe use this pattern very often in bmcweb while parsing redfish input."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't think this is possible, is it?\n\nOr, should you be checking nbdDeviceIter->is_string() somewhere?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 130,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "see above"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why are you having the constructor take a C-string if the only caller of it has a 'const std::string&'?  Defer conversion to C-strings as late as possible in C++ code."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is fairly non-obvious to me.  Having a struct cast to bool to indicate \"invalid parsing\"."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 132,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Added dedicated method on the object"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 144,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I really dislike this nested logic pattern.  There is simply too much logic in this code and it will only get worse as people add new configuration parameters.  Can you, at a minimum, decrease the nesting on all of these using something like:\n\n  if (!value)\n  {\n      LogMsg(...);\n      continue;\n  }\n\n  // real logic."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 144,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 145,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It looks like you have this pattern a LOT in the configuration.  Can you simplify with a function to do it?\n\ntemplate<typename T, bool required = true>\nbool getConfig(const std::string_view key, T& value);\n\nif (!getConfig(\"UnixSocket\", mp.unixSocket))\n{\n   LogMsg(...);\n   continue;\n}"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 162,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Made a getConfig wrapper but left required/not required to the code flow. \nIt looks better now."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "switch-case?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 233,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "mountPoints.emplace(mountpoint.key(), std::move(mp));"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 248,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "ok"
                },
                {
                    "file": "src/logger.hpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please use phosphor-logging::lg2 and not make up your own logger."
                },
                {
                    "file": "src/logger.hpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Is this really necessary? I consider phosphor logging heavy and not easy in use (with limitations)."
                },
                {
                    "file": "src/logger.hpp",
                    "line": 1,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "The stdout way to write log entries has a big issue that is the level of their. All lines that you are writing by the current engine will be included into journald with INFO level, that are independent of your specified  level. It seems to me this will bring to excess entries in the journald and mixing logs with different levels"
                },
                {
                    "file": "src/main.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "In what contexts is this used?  I would have guessed test cases, but this is main.cpp."
                },
                {
                    "file": "src/main.cpp",
                    "line": 15,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "It is a part to simplify debugging. Removed."
                },
                {
                    "file": "src/main.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "server::manager_t"
                },
                {
                    "file": "src/main.cpp",
                    "line": 30,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "ok"
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I prefer /etc/virtual-media/config.json instead of more files cluttering the root."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Why virtual-media.conf stored in the /etc that is rwfs? Does we desire the VM-endpoints might be configured at runtime on the field mode? I'd prefer to store that config at the /usr/share/virtual-media/"
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "I would prefer to make it configurable on the fly. Modification of eg. timeout could be beneficial for some use cases."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "seems reasonable."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "I believe for the described case the config should be split into modifiable fields and persistent configuration. Changing a set of the virtual-media endpoints that is used to attach usb-gadget might incapacitate the rest features, e.g. kvm-hid devices(virtual keyboard and mouse)."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Generally OpenBMC store \"on the fly configurations\" in phosphor-settings, why you decide to bring your own mechanism? How is it supposed to change configuration, stored in json config??"
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "By \"on the fly\" I mean the situations where you want to change eg. inactivity timeout for, let's say, debugging an issue on the platform.\nI thin it is not worth making it setting for such purposes."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "This kind of debugging is a part of developing and, IMHO, can be done by changing parameter in the image and reflashing BMC. Alternatively for testing on live machine you can mount ramfs overlay on top of /usr/share and temporary change parameters you want.\nIt is definitely not worth to break configuration on two files in different locations just because of this.\nAlso you can make this path configurable with meson build options."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ok, /usr/share/virtual-media seems reasonable, and yes breaking it down seems too much complication."
                },
                {
                    "file": "src/main.cpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/main.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This doesn't seem obviously connected to virtual-media.  Someone's just going to see a random /tmp/sock directory?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "+1. \nI'd prefer to store the virtual-media-specific stuff at the (/var)/run/virtual-media/ directory."
                },
                {
                    "file": "src/main.cpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Yes, this has been changed recently. Will backport that."
                },
                {
                    "file": "src/main.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "In what contexts is this used?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "The use case is by running it on x86 platform natively (for debugging eg.) but with dbus tunneled to bmc platform.\nI will remove it in favor of DBUS_STARTER_BUS_TYPE=\"x\" and DBUS_STARTER_ADDRESS=\"unix:abstract=/tmp/socket\" what does the same, actually."
                },
                {
                    "file": "src/main.cpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Any reason you're not using the sdbusplus code here?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This is just for making remote dbus possible. Not needed anymore."
                },
                {
                    "file": "src/system.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "\"I want to type less\" is kind of a lousy reason to avoid C++ features."
                },
                {
                    "file": "src/system.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Removed according to another suggestion"
                },
                {
                    "file": "src/system.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It isn't obvious to me when a static (compile-time) reference to a particular nbd name is useful.  Can you elaborate?  It seems like this class should always take a string-like and check it against /dev for presence.  Why should we need to modify anything if we wanted to support more or less nbd channels?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This class has been prepared to handler different nbd nodes on request. There was a problem with kernel implementation when device sometimes (rather rarely) couldn't be reused for some reason. We end up with this ready for future expansions when the problem will occur more often. In the end, the bug hasn't recurred (for >1year).\n\nThe mitigation for the problem was when requesting for some node it could return the other one that is free at the moment (that's why \"isReady\" function exists but is not used). This will be easier to manage with internal enum representation.\n\nI would recommend to leave some of this functionality (may be used), but indeed I will probably resign from using enum inside as it seems redundant at this moment."
                },
                {
                    "file": "src/system.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "As mentioned above, it isn't obvious to me why we want to do this search operation."
                },
                {
                    "file": "src/system.hpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "see above"
                },
                {
                    "file": "src/system.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Prefer to use range-find whenever possible now.\n\nstd::range:find(nameMatching, nbdName);"
                },
                {
                    "file": "src/system.hpp",
                    "line": 44,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/system.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "std::end(nameMatching) \n\n(or cend if you really prefer, but generally the compiler will simply do the right thing anyhow)"
                },
                {
                    "file": "src/system.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please use spaceship operator."
                },
                {
                    "file": "src/system.hpp",
                    "line": 69,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This sounds expensive.  Can we simply check for dev node presence?  Maybe we're doing it infrequently enough that it doesn't matter."
                },
                {
                    "file": "src/system.hpp",
                    "line": 75,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "For the reason I mentioned above, this could help determine if device could be used."
                },
                {
                    "file": "src/system.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is all the more reason why I don't understand why you want to store as an enum and do this conversion back and forth all the time."
                },
                {
                    "file": "src/system.hpp",
                    "line": 115,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Changed the internal representation to std::string."
                },
                {
                    "file": "src/system.hpp",
                    "line": 137,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "If you're going to have this it should probably be a 'static constexpr std::array'?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 137,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Ack"
                },
                {
                    "file": "virtual-media.json",
                    "line": 8,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems kind of silly.  Can we DRY up this configuration?  You've had to repeat yourself 4 times for a \"default\" configuration: Slot_0, /nbd/0, nbd0, nbd0.sock."
                },
                {
                    "file": "virtual-media.json",
                    "line": 8,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Those names are chosen arbitrarily this way to show how to define such configs. They could (and should) be replaced to something more meaningful. \n\nI don't see anything wrong to have everything customizable."
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "line": 6,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "We've been moving a lot of executables we don't intend users to run into /usr/libexec.  See https://github.com/openbmc/docs/blob/master/anti-patterns.md#incorrect-placement-of-executables-in-sbin-usrsbin-or-bin-usrbin"
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "line": 6,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "configure.ac",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -21
                },
                {
                    "file": "m4/ax_append_compile_flags.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -67
                },
                {
                    "file": "m4/pkg.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -275
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -11
                },
                {
                    "file": "m4/ax_append_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -71
                },
                {
                    "file": "virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "cmake/Findudev.cmake",
                    "type": "ADDED",
                    "insertions": 77,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 254,
                    "deletions": 0
                },
                {
                    "file": "CMakeLists.txt",
                    "type": "ADDED",
                    "insertions": 145,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "m4/ax_require_defined.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -37
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -882
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "config.sample.json",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -17
                },
                {
                    "file": "m4/ax_check_compile_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -74
                },
                {
                    "file": "README",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -65
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "OWNERS",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 140,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1107,
            "sizeDeletions": 1520
        },
        {
            "number": 2,
            "revision": "cfef539f8bdbb267f1e18070c95e72806045e99b",
            "parents": [
                "7b7c29369cfeb267efa7f45b271aca6910687461"
            ],
            "ref": "refs/changes/44/49944/2",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1641382688,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "I'm more on the kernel interface side of things here, I'll leave the service implementation reviews to others.\n\nLooks decent, and nice work on the change to meson. A couple of comments inline, mostly around the configuration structure. Like some of the other reviews, +1 on the structure of having most of the configuration can be fixed, and we can store any dynamic configuration in existing infrastructure.\n\nOne overall thing though: you make several mentions to \"mount point\" in this (and subsequent) changes; this term has a specific meaning of where a device is attached to the local filesystem.\n\nHowever, I assume you're not actually \"mounting\" these devices into the BMC filesystem - is that correct? Could we clarify this a bit in the code?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Sorry, I missed this one previously.\nMount point here is a high level idea of an slot that could be used to connect an external resource of some kind and virtually attach it to an emulated USB device. \"Connect\" used here is exchangeable with \"mount\" as general idea is similar to local mount.\nThis slot (aka. mount point) exposed in d-bus, Redfish, and UI, is identified by name and characterized by a bunch of parameters ie. mode (legacy/proxy), device, socket etc. \n\nActually, we do mount external share only for CIFS in order to access ISO/img located there."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "What's the definition of a \"slot\" here? Could this just be an index?\n\nAnd if so, most of the keys (EndPointId, NBDDevice, UnixSocket) seem to be derived from that index, so you could imply those values rather than requiring mostly boilerplate config values."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This is propagated as name to dbus/rf/UI interface. There are four possible slots with USB Gadget, each one can have specific name."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1 to Jeremys comment.  Most of these could just be replaced by an index."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "As a proposal, something like\n```\n{\n     \"LegacyMountPoints\": 2\n     \"ProxyMountPoints\": 2\n}\n```\n\nseems like it could completely replace this file.\n\nEndpointId, NBDDevice, block sizes, and timeouts aren't something that we should be configurating on a machine by machine, slot by slot basis, especially not when this is so new."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Seems like a reasonable compromise regarding discussion about necessity of a configuration file. Will start working on that."
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\ud83d\udc4d"
                },
                {
                    "file": "config/config.json",
                    "line": 4,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Changed config format to the new one, proposed by @Ed. Configuration module needed to be changed alongside as well. The overall outcome seems to be the same as previously. What was previously present in .json is now used as mount point parameters. Mount points' count to create is determined from what we provide in the new version of .json file."
                },
                {
                    "file": "src/system.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Why does this need to be one of the fixed nbd names from nameMatching? Is there any issue with allowing arbitrary paths here?\n\nOr, given you're requiring the 'nbd' prefix in call cases, just make this an index instead?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 28,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "I have changed it, as previously enum was internal representation for this class. \nThis class may do more in the future as I wrote in this comment:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/jsnbd/+/49944/comment/f4ece81e_e25bd73b/"
                },
                {
                    "file": "src/system.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "It looks like you're just checking whether the device node exists, is that correct? if so, an `access()` would work, or a `stat()` if you want to check that it's a proper nbd device (chardev, with major NBD_MAJOR).\n\nIs there a reason this needs to be an O_EXCL, but the main open() below does not?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "This exclusive open was needed in order to check if the device is still available to use. \nThere are cases where previously used device is held by linux kernel for some reason (I haven't seen such behavior for some time) and can't be used."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -11
                },
                {
                    "file": "m4/ax_append_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -71
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -882
                },
                {
                    "file": "m4/ax_check_compile_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -74
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "configure.ac",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -21
                },
                {
                    "file": "m4/ax_append_compile_flags.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -67
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "m4/pkg.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -275
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 226,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "m4/ax_require_defined.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -37
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 63,
                    "deletions": 0
                },
                {
                    "file": "config.sample.json",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -17
                },
                {
                    "file": "README",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -65
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 248,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1396,
            "sizeDeletions": 1520
        },
        {
            "number": 3,
            "revision": "3c06849cb3e5a3725e2e3062a587c079c254fbd1",
            "parents": [
                "7b7c29369cfeb267efa7f45b271aca6910687461"
            ],
            "ref": "refs/changes/44/49944/3",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1643382588,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "UT are still on the way, pushed rebased patches."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "Is the work still in-progress?"
                },
                {
                    "file": "src/logger.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Igor Kononenko",
                        "email": "i.kononenko@yadro.com",
                        "username": "ikmsk10"
                    },
                    "message": "What is the reason for introducing a new logging way? Might we use the `phosphor-logging` instead of directly printing to the stdout? \nI guess it might be included in the current point with the appropriate log level.\nAdditionally, the logging way might be switching between phosphor-logging and stdout by meson build env-var"
                },
                {
                    "file": "src/logger.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "It has been for historical reasons. I have prepared single commit changing all logging to phosphor-logging. But due to some dependency problems in local builds it is not ready yet."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 30,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "Makefile.am",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -11
                },
                {
                    "file": "m4/ax_append_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -71
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -882
                },
                {
                    "file": "m4/ax_check_compile_flag.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -74
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "configure.ac",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -21
                },
                {
                    "file": "m4/ax_append_compile_flags.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -67
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "m4/pkg.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -275
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "m4/ax_require_defined.m4",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -37
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "config.sample.json",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -17
                },
                {
                    "file": "README",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -65
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 217,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1356,
            "sizeDeletions": 1520
        },
        {
            "number": 4,
            "revision": "28b427a4de4325f1fff2995ddc230001cd673942",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/4",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1667950882,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Hi again.\n\nAfter (rather long) break I'd like to return to upstream work.\nI have refreshed 4 patches with UT added, I will submit the rest of patches shortly.\n\nI have left old jsnbd files this time. They will be removed at the end as last commit - this will allow for an easier transition I believe, but I see adding .clang-format made CI failure on nbd-proxy.c...\n\nTODO: change logging to phosphor-logging. I have prepared separate commit adding that. \n"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Hi Przemyslaw,\n\nGiven this is a fairly comprehensive rewrite of the NBD infrastructure, I'll recuse myself from the review of the new code here: i'll assume it's working for your use case, and those with hardware to test can do so.\n\nHowever, I'm not clear on why you're doing the work in this repo; it's a complete replacement, the name 'jsnbd' no longer applies, and you don't seem to be removing the old code.\n\nMy only concern earlier was:\n\n> My main point is that we don't just add a whole new virtual media implementation \n> *alongside* the exiting one - we want a complete replacement.\n\nThat doesn't necessarily mean you need to work within this repository, just that we deprecate the existing code when adding your new implementation."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "I started the first attempt to upstream with a request to create a brand-new repository. But this has been changed as suggested by Ed and Patrick as js part of nbd server is still used \"as is\". If you don't feel good with it, please bring old VM topic alive to open the discussion again."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1907,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "89147eb0917d212bf521a609c42dcc3665d51cb8",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/5",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670846309,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "In terms of process for this - since you're replacing the existing code wholesale, I don't see any requirement for a review from me; feel free to merge as you see fit, but you'll probably want to update OWNERS to suit."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2575,
            "sizeDeletions": 615
        },
        {
            "number": 6,
            "revision": "e1c60bb428d7e842db3c06563b6e0f2aa664dbaa",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/6",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670934664,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 117,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2580,
            "sizeDeletions": 615
        },
        {
            "number": 7,
            "revision": "a137d10cd06ade8e3cf9716822364874c56c19f1",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/7",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670937118,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2581,
            "sizeDeletions": 615
        },
        {
            "number": 8,
            "revision": "688c123bb17b8cb469bcc5a019a304597e8e5f52",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/8",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670939788,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2595,
            "sizeDeletions": 615
        },
        {
            "number": 9,
            "revision": "7f97f58f175df792aba156ccc7e3bc91ecb01073",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/9",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670941721,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2595,
            "sizeDeletions": 615
        },
        {
            "number": 10,
            "revision": "980374ad37963b25644f54bcc89b04752109aa77",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/10",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670942998,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Still have a problems with unit test part of the build system...\n"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 103,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2595,
            "sizeDeletions": 615
        },
        {
            "number": 11,
            "revision": "6ed943ab80ffae240abb787ee4891273960658bd",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/11",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1670946721,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2588,
            "sizeDeletions": 615
        },
        {
            "number": 12,
            "revision": "facd3702ab75065859af8862229f0a21199bf1b8",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/12",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671198847,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "ADDED",
                    "insertions": 260,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2588,
            "sizeDeletions": 615
        },
        {
            "number": 13,
            "revision": "1ba292a221bc0ddde6b5abb239e401bdde977ead",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/13",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671200282,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2328,
            "sizeDeletions": 615
        },
        {
            "number": 14,
            "revision": "3648ba7e346f0f97806d103b92d7d42b8dfe44f9",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/14",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671202654,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2347,
            "sizeDeletions": 615
        },
        {
            "number": 15,
            "revision": "f5805cfa926bb7e2662839326de1ef22b3211b2e",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/15",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1671729014,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/logger.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 227,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 119,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 222,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2349,
            "sizeDeletions": 615
        },
        {
            "number": 16,
            "revision": "764c526744d8a83a8e1116c9159e2262d067b1db",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/16",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674049717,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2393,
            "sizeDeletions": 615
        },
        {
            "number": 17,
            "revision": "5cfe347fd42604b4a68663972644e83bf8948fbe",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/17",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674053314,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/phosphor-dbus-interfaces.wrap",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2393,
            "sizeDeletions": 615
        },
        {
            "number": 18,
            "revision": "1778179a5a49e877524de885cbc9a42e09d160b6",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/18",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674053646,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2391,
            "sizeDeletions": 615
        },
        {
            "number": 19,
            "revision": "5593ce802b5bc009ec7839530050aec8a21c76eb",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/19",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1674137496,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Hi,\nCould you please take a look at the updated patches? \n- logger switched to phosphor-logging (but with wrapper)\n- UT added"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Jeremy Kerr",
                        "email": "jk@ozlabs.org",
                        "username": "jk-ozlabs"
                    },
                    "message": "Hi Przemyslaw,\n\nThanks for the continued work on this. As I mentioned above, I'm okay with switching over to  new infrastructure, as long as you're okay with taking on maintenance.\n\nA couple of overall notes:\n\n - I'm a little confused to the references to \"legacy mode\"; why is this legacy? Users may not have the context about what is legacy and what isn't, and the existing nbd code doesn't implement it anyway (what is it a legacy from?). Perhaps something more descriptive would be useful here, like \"client mode\" vs \"browser mode\" ?\n \n - There seems to be a bit of confusion around build infrastructure: you're using meson, but the bootstrap.sh references an autotools build, and the README references a CMake build."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Sure, I will take the maintenance after those patches will be accepted. \n\nRegarding the naming scheme, those are proposed just to distinguish. Legacy means that it follows assumptions of Virtual Media schema of redfish. This could be named as URL based (or similarly). For me Legacy sounds OK, origin is also covered by the design papers. \nFor proxy, the name is self-descriptive as BMC works as proxy between nbd server provided by user and host.\n\nFor the bootstrap.sh file (and other autotool files) - for the time by all patches defining a new service will be accepted, both implementations must co-exist. That's why I left all old files. They will be removed by the last patch in the series, right after OpenBMC Yocto recipes will enable the new solution. This is a consequence of the decision to reuse jsnbd repository.\n\nAnd last (but no least) - references to CMake are leftovers from the transition to meson from CMake used initially by the project. I have removed them in the next version of patches."
                },
                {
                    "file": "meson.build",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, tabs.\n\nNon nit.  Most of these boost modules are explicitly disallowed by the coding standard due to impacts they have on the quality of the output binary.  coroutine is allowed, but there are c++ std replacements for the other ones.\n\niostreams -> use std::iostreams, or ideally avoid streams altogether.\nfilesystem -> use std::filesystem\nprogram_options -> use CLI11\nregex -> use std::regex, or replace with basic state machines\nsystem -> Set BOOST_SYSTEM_NO_DEPRECATED"
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't seem like a script we would want here?"
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "The purpose of this script is to copy different configuration files to '/tmp' for unit test purposes. If You take a look at 'configuration_test.cpp', You'll notice that tests load different configuration variants from '/tmp' directory."
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I've put up https://gerrit.openbmc.org/c/openbmc/jsnbd/+/68605/1 for what I think the fix should be.  It is simpler, and completely drops the python requirement, script, and doesn't rely on /tmp at all (which might conflict if multiple tests are run at once on the same machine)."
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I'll use this fix here, thank You!"
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "line": 13,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2391,
            "sizeDeletions": 615
        },
        {
            "number": 20,
            "revision": "86db8588074c4cb49c972316a8b4f43535baecb8",
            "parents": [
                "3ebe3dadd3f550d20080c8bb14dee113e322eb61"
            ],
            "ref": "refs/changes/44/49944/20",
            "uploader": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "createdOn": 1675175593,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "Design for reference:\nhttps://github.com/openbmc/docs/blob/master/designs/virtual-media.md"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Generalized comments here:\nThe formatting across the board is a problem.  Tabs are injected into files that should be space delimited.  Formatting changes are applied in the same commit as non-formatting changes.  At the very least those could be broken out.\n\nLots of odd design patterns.  There appears to be a subproject patch to sdbusplus that needs merged to get this on master.  There's a script to copy things to /tmp that it's not clear why it's there.\n\nThe config file needs some work.  There are things in it (like the path) that should not be configured per platform.  Most things in the config file could go away in leui of a simple \"number of slots\" setting in meson_options."
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "line": 19,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not sure why this is needed but if it is, meson uses `dependency('threads')` for it, not a direct linker argument.\n\nIn my view, I'm not using anything out of pthread directly, but rather indirectly via std, so the libstd should already link against pthread if needed.  What was the issue you were seeing without this and what version of compiler were you seeing it on?"
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "line": 26,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've added a fix for this one:\n\nremote:   https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/60564 event: add unistd header [NEW]"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 79,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "ADDED",
                    "insertions": 114,
                    "deletions": 0
                },
                {
                    "file": "bootstrap.sh",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "nbd-proxy.c",
                    "type": "MODIFIED",
                    "insertions": 667,
                    "deletions": -615
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gmock-global.wrap",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/gmock-global/meson.build",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 59,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 43,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/0001-fix-sdbusplus-compile-problems.patch",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "ADDED",
                    "insertions": 233,
                    "deletions": 0
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 53,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 2391,
            "sizeDeletions": 615
        },
        {
            "number": 21,
            "revision": "1b34963545774a64d13a5f0ec8e5991eda9fea82",
            "parents": [
                "9b322cb38172985e67d755660167befe8b650ba6"
            ],
            "ref": "refs/changes/44/49944/21",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1701956562,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I'm digging out this set of changes after a long break. So far I've rebased these on top of master branch and resolved problems raised by CI docker for all patches. Now I'll review Your previous comments and try to address them step by step.\n\nEd, Patrick, could You please take a look at those once again in the meantime? In case You had any new concerns, please write them down."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": ".clang-format",
                    "type": "MODIFIED",
                    "insertions": 45,
                    "deletions": -45
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 86,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 123,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 58,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 225,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 225,
                    "deletions": -44
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 52,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 102,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1539,
            "sizeDeletions": 95
        },
        {
            "number": 22,
            "revision": "31d76a4bff1d94dd4141f0875f5259f68de2d9e2",
            "parents": [
                "f5ad6bb376dfc326ce6a7ac49ccec47dc76838d6"
            ],
            "ref": "refs/changes/44/49944/22",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1703154637,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": ".clang-tidy-ignore",
                    "line": 3,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are we ignoring these files?"
                },
                {
                    "file": ".clang-tidy-ignore",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "These are sources from old service code and they've caused clang-tidy to fail. Since the default behavior of clang-tidy for Meson has been recently changed to scan only diffs instead of whole files, this might not be needed anymore. Will verify that."
                },
                {
                    "file": ".clang-tidy-ignore",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed file."
                },
                {
                    "file": "meson.build",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These aren't required for meson anymore.  meson supports lto directly."
                },
                {
                    "file": "meson.build",
                    "line": 35,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson.build",
                    "line": 35,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed this and added corresponding Meson options instead."
                },
                {
                    "file": "meson.build",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "These are now set in yocto.  No need to set them here."
                },
                {
                    "file": "meson.build",
                    "line": 132,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson.build",
                    "line": 132,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I see no uses of coroutine in this patch?"
                },
                {
                    "file": "meson.build",
                    "line": 149,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Code which is using coroutines is added in next patches. I can remove it for now and add that module later, if You find this more readable."
                },
                {
                    "file": "meson.build",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "note, in modern code, boost::coroutine shouldn't be used at all."
                },
                {
                    "file": "meson.build",
                    "line": 149,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "To be more specific, the code is using boost::asio::spawn. I'm aware of this function being a wrapper for boost::coroutine, but there was a need to provide a way for asynchronous code written in synchronous manner and this turned out to be the most convenient solution. Besides, from what I've seen, this function is still used within the project, for example inside sdbusplus's object_server object. I could look for different solution here, but this would require significant amount of time for additional R&D, to make sure everything works as before, which is something I'd like to avoid for now.\n\nFor now I'll remove 'coroutine' module and restore it in patch introducing first usage of spawn."
                },
                {
                    "file": "meson.build",
                    "line": 149,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> To be more specific, the code is using boost::asio::spawn. I'm aware of this function being a wrapper for boost::coroutine, but there was a need to provide a way for asynchronous code written in synchronous manner and this turned out to be the most convenient solution.\n\nc++20 coroutines are MUCH easier these days.  Lets remove the boost::coroutine callouts here, and when we add in things that need them, we can go through the process of deciding if they're better or worse than the alternatives (callbacks or c++20 coroutines)\n\n> Besides, from what I've seen, this function is still used within the project, for example inside sdbusplus's object_server object.\n\nBehind a flag that I'm trying to deprecate it by default.  Just because \"it's used in places\" doesn't mean that it should be used, or is part of the coding standard.\n\n> I could look for different solution here, but this would require significant amount of time for additional R&D, to make sure everything works as before, which is something I'd like to avoid for now.\n> \n> For now I'll remove 'coroutine' module and restore it in patch introducing first usage of spawn."
                },
                {
                    "file": "meson.build",
                    "line": 149,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 158,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "are you sure you want this?"
                },
                {
                    "file": "meson.build",
                    "line": 158,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "It's not needed anymore, will remove."
                },
                {
                    "file": "meson.build",
                    "line": 158,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 189,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "when configured this triggers warnings:\n\nmeson.build:180: WARNING: Project targets '>=1.1.1' but uses feature deprecated since '0.64.0': copy arg in configure_file. Use fs.copyfile instead\n\nthis is fixed in one of my patches.  Feel free to squash it in."
                },
                {
                    "file": "meson.build",
                    "line": 189,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will do, thanks for the effort!"
                },
                {
                    "file": "meson.build",
                    "line": 189,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What are we using tempfiles.d for?  Do we do that anywhere else?"
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will probably drop, need to test first if Your solution with `RuntimeDirectory=` in service file (https://gerrit.openbmc.org/c/openbmc/jsnbd/+/68606) doesn't break anything."
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 205,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "very strange indentation here.   PTAL."
                },
                {
                    "file": "meson.build",
                    "line": 205,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson.build",
                    "line": 205,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 218,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You don't need get supported arguments here.  -D is just ignored, as it's supported on all compilers.  Ideally you'd use add_project_arguments, but I realize the example you copied from doesn't have that."
                },
                {
                    "file": "meson.build",
                    "line": 218,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson.build",
                    "line": 218,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This is only used in one spot, should it be declared there?  I can't think of any reason for this to be configurable."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will move to local scope where it is used."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 32,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Moved to main.cpp"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "shouldn't this be initted to defaultTimeout?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This function doesn't look used."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 45,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will be used in code introduced by later patches."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Probably want to return a reference here?  Or just return a pointer with nullptr meaning not found.  No sense in doing both a pointer and optional"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 54,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Initially this was returning a pointer. Patrick suggested to change it to `std::optional<const MountPoint&>`, but I see it got finally changed to what we have here, probably because proposed type wouldn't compile."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Given you have a non stream based file abstraction, should we use that instead of ifstream?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Related with Your proposal of using boost file_posix interface. Will take a look on that."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Changed to `utils::FileObject`."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, declare the type here, otherwise people not familiar with the parse() function won't know what the variable type is.\n\n\nNon nit, by default this function throws, if you plan on handling the error immediately, you might want to set the third argument of parse() to false, then check for is_discarded()"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, inverting this check would make the code clearer by handling errors early, and save you an indent."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 102,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't need to be explicitly constructed it's already two args."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sorry, \"it's already two args.\" was meant for another line."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 125,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "this has the potential to have the nbddevice partially constructed if any of the other checks fail.  Should this be done at line 207?"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "In that case I think nbdDevice will be destroyed before moving to next `for` iteration. I don't see problem with delaying moment of object construction though, so I'll move that to line 207."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 131,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Shoudn't these be represented as strings?  Something like\n\nMode: \"proxy\""
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I agree, representing these as strings in JSON should be more readable for others in the future."
                },
                {
                    "file": "src/configuration.hpp",
                    "line": 188,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/main.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "neither of these appear to be used as shared_ptr anywhere.  Can they just be values?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will do for `objManager`. `objServer` pointer will be used though by other objects in following patches."
                },
                {
                    "file": "src/main.cpp",
                    "line": 29,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Changed `objManager` into normal object."
                },
                {
                    "file": "src/main.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wouldn't this go in /etc/virtual-media, given that it's a config file?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "/etc/virtual-media was initial location for this, but was changed after a review.\n\n@Igor, @Andrei, could You please share Your thoughts on this?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "i-kononenko",
                        "email": "i.kononenko.e@gmail.com",
                        "username": "i-kononenko"
                    },
                    "message": "@Michal Orzel, @Ed Tanous, it seems to me the `config.json` defines configuration for the virtual media endpoints that is not desire to changed at a runtime. \nThe `/etc/` is `rwfs`, but `/usr/share` is `rofs`. So, looks like the `/usr/share` is more properly place for the endpoints configurations."
                },
                {
                    "file": "src/main.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "/etc is for configuration.  /usr/share is for examples.  The fact that they're mounted in the way they are doesn't really matter.\n\nAlso, if it's not intended to be modified, why not just encode the configuration as part of the binary at configure time?  I really suspect that most of the configuration could be boiled down to two parameters, number_of_legacy_slots, and number_of_proxy_slots, and the whole config file could be dropped, which would simplify the code a ton."
                },
                {
                    "file": "src/main.cpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Przemyslaw Czarnowski",
                        "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                        "username": "phawryle"
                    },
                    "message": "> /etc is for configuration. /usr/share is for examples\n\nIn general, /usr/share is for storing architecture independent data. (see eg. https://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/usr.html).\n \n> Also, if it's not intended to be modified, why not just encode the configuration as part of the binary at configure time?  I really suspect that most of the configuration could be boiled down to two parameters, number_of_legacy_slots, and number_of_proxy_slots, and the whole config file could be dropped, which would simplify the code a ton.\n\nAgree that it would simplify the code base, but for the sake of readability and ease of configuration JSON is way better. Also, this will require considerable effort, which we want to avoid."
                },
                {
                    "file": "src/main.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why?  Presumably we should be setting this on created files at the call site, not setting a umask?  Also, where does this application create files?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Application creates socket files in locations specified by `UnixSocket` properties. It's implemented in later patches."
                },
                {
                    "file": "src/main.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't ignore error codes.  At least print them to the console.\n\nFYI, you probably want to check for operation_aborted, which will get called on shutdown."
                },
                {
                    "file": "src/main.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/main.cpp",
                    "line": 48,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are we redefining these?  Shouldn't these be pulled from nbd.h?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Could be. Will use these from `<linux/nbd.h>`"
                },
                {
                    "file": "src/system.hpp",
                    "line": 18,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Does this need to exist if it needs to be explicit?  Why wouldn't we just call isValid()?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "It's used only once in final code, where isValid() could be used as well. Will remove."
                },
                {
                    "file": "src/system.hpp",
                    "line": 55,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/system.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This seems a little extreme to have a lookup table for something that amounts to nbd + index.  I would assume we just want to parse out the slot number?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/system.hpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed. Now using regex to parse the NBD slot number insted."
                },
                {
                    "file": "src/system.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why is this here?"
                },
                {
                    "file": "src/system.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I was getting error about missing template deduction guide for `NBDDevice` when running clang-tidy. However it stopped appearing on latest docker build, so I think it might be removed now."
                },
                {
                    "file": "src/system.hpp",
                    "line": 127,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Not needed anymore after adding `-Wno-ctad-maybe-unsupported` into project arguments."
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This looks like it was copied from bmcweb.  Please take a look at the current state of bmcweb http/logging.hpp.  It has improved considerably compared to this stream/macro version.\n\nFWIW, the one this copied from originally came from crow, so it didn't follow the coding standard.  We should avoid duplicating it."
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I'm aware of that. Was planning to rework logger in a similar manner later, but I could do this now as well, since it's probably going to take some time to resolve current issues."
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "line": 73,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Instead of inventing our own file interface, could we use an existing one, like file_posix?  I suggest that one because this repo already has a dependency on boost, but stdplus also has an implementation of basically this same class.  We should avoid creating another, even if it's pretty lightweight.\n\nhttps://www.boost.org/doc/libs/1_84_0/libs/beast/doc/html/beast/ref/boost__beast__file_posix.html"
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will take a look, thanks for suggestion."
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 13,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Modified class to use `boost::beast::file_posix`"
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You probably want to just put NOLINTNEXTLINE on the calls you expect to fail, instead of exempting the entire class."
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 20,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed this and added NOLINTNEXTLINE for `ioctl`."
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit This constructor takes two arguments, there's no need to make it explicit."
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "src/utils/utils.hpp",
                    "line": 21,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "line": 4,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please use the version of this from wrapdb instead of writing your own.\n\nhttps://mesonbuild.com/Wrapdb-projects.html"
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "line": 4,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "line": 4,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "line": 8,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please just use the cmake boost variant like bmcweb does.\n\nIt's easier, and it doesn't involve mixing build commands in the configure phase, nor does it involve having to build b2, and passes compiler flags down to the build properly.\n\nhttps://github.com/openbmc/bmcweb/blob/master/subprojects/boost.wrap"
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "line": 8,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "line": 8,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please don't pin your dependencies on openbmc hosted projects anymore.  They consistently got out of date."
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "same here."
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "line": 5,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This patch isn't present in the diff, and definitely wouldn't be accepted as is.  Please submit your patches to sdbusplus directly."
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "line": 5,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "It's not needed anymore, will drop."
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "line": 5,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 83,
                    "deletions": 0
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy-ignore",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tmpfiles.d/virtual-media.conf",
                    "type": "ADDED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 127,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 69,
                    "deletions": 0
                },
                {
                    "file": "subprojects/packagefiles/boost/meson.build",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 214,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 67,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 225,
                    "deletions": -44
                },
                {
                    "file": "tests/res/copy_to_tmp.py",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 58,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 97,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1530,
            "sizeDeletions": 50
        },
        {
            "number": 23,
            "revision": "25ed4b2d777e0c3dcdc81a0d22dbc96e39cd85a6",
            "parents": [
                "f5ad6bb376dfc326ce6a7ac49ccec47dc76838d6"
            ],
            "ref": "refs/changes/44/49944/23",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1705938060,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 244,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 203,
                    "deletions": -42
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 34,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 118,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1535,
            "sizeDeletions": 49
        },
        {
            "number": 24,
            "revision": "202ea82c0f626bed1a84ff7ab042e148c0e354d3",
            "parents": [
                "f5ad6bb376dfc326ce6a7ac49ccec47dc76838d6"
            ],
            "ref": "refs/changes/44/49944/24",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1706003042,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "no longer true in the latest patch."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "seems like that wouldn't be enough to be a replacement daemon?\n\nWhich patch in the series needs approved before the series is functionally (user facing wise) equivalent to the old daemon?\n\nI suspect that that series needs to be merged all at once, so we don't break anything that exists."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "The new service should cover all functionalities of the old one after this patch: https://gerrit.openbmc.org/c/openbmc/jsnbd/+/59599/9.\n\nI agree that all should be merged at once. Once this patch is in decent shape, I'll start rebasing the remaining ones."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Changed test description a little bit for clarification."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ran out of time.  Partial review below.\n\nI don't see any code for handling launching this directly to connect to a port:\n\nhttps://github.com/openbmc/bmcweb/blob/b66551019cf3c31186877c30a91ff8622454f342/include/vm_websocket.hpp#L59\n\nam I missing that, or is this not a complete replacement for the existing proxy mode?  What is required such that we can move to this new daemon without breaking anyone?  any changes to bmcweb required?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A quick look shows webui-vue is still using /vm/0/0\n\nhttps://github.com/openbmc/webui-vue/blob/1b417cd406ce65401dcb8d695fe5424287092cb1/src/store/modules/Operations/VirtualMediaStore.js#L42\n\nIf I'm not mistaken, /vm/0/0 is compatible with /nbd/0, the only difference would be in URL, right?  Could we just register /vm/0/0 in the nbd-proxy handler AS WELL as /nbd/0, and would that keep compatibility for users of the existing url?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/69333"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Preemptively assuming this would work, I started this."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Thank You, we'll take a look on it.\n\nRegarding WebUI, I think it all comes to a `VUE_APP_VIRTUAL_MEDIA_LIST_ENABLED` knob (https://github.com/openbmc/webui-vue/blob/1b417cd406ce65401dcb8d695fe5424287092cb1/.env.intel#L8). If false, only /vm/0/0 will be used, otherwise, its OEM-dependent, in this case this will be /nbd/x."
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So, as written, if we move to this, everyones implementations break?  Why did this change the url?"
                },
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "That's definitely not our intention to break anyone's existing implementation. Studying deeper into VirtualMediaStore.js and how the flag works:\n- if false, only `/vm/0/0` endpoint will be created (https://github.com/openbmc/webui-vue/blob/master/src/store/modules/Operations/VirtualMediaStore.js#L39-L46)\n- otherwise, the list of endpoints will be created. Their names will be based on contents of collection in `/redfish/v1/Managers/bmc/VirtualMedia`, more specifically, from \"WebSocketEndpoint\" value for each item (vue: https://github.com/openbmc/webui-vue/blob/master/src/store/modules/Operations/VirtualMediaStore.js#L63, bmcweb: https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/virtual_media.hpp#L174-L176).\n\nRight now \"WebSocketEndpoint\" value is taken from mount point's \"EndpointId\" property (https://gerrit.openbmc.org/plugins/gitiles/openbmc/jsnbd/+/202ea82c0f626bed1a84ff7ab042e148c0e354d3/config/config.json#4). So, in order to maintain compatibility with previous service, this would need to be set to \"/vm/0/0\". Furthermore, since config is going to be reduced just to store number of proxy and legacy slots, we could simply hardcode this value into `/vm/0/<str>`, where <str> would be an iterator over proxy slot list. I hope this should allow us to maintain compatibility with old service."
                },
                {
                    "file": "README.md",
                    "line": 5,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Pretty sure we don't need this now that this is built into the webui?"
                },
                {
                    "file": "README.md",
                    "line": 5,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I agree, this can be removed."
                },
                {
                    "file": "README.md",
                    "line": 5,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed"
                },
                {
                    "file": "README.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we call this something other than \"legacy\"?  Calling it legacy seems to be an opinion not shared by DMTF.  If your goal is to get this mode deprecated by Redfish, please start this discussion, otherwise can we call these modes\n\nNBD_PROXY\nand\nDIRECT\n\nI'm open to other options, but the name \"legacy\" implies need to exist anymore."
                },
                {
                    "file": "README.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"I'm open to other options, but the name \"legacy\" implies the mode doesn't need to exist anymore.\""
                },
                {
                    "file": "README.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "How about \"Standard\"? \"Direct\" doesn't exactly match how it works, because established connection is not direct at all. We're specifying remote location of image to be served in accordance with Redfish schema (https://redfish.dmtf.org/schemas/v1/VirtualMedia.v1_6_3.json)."
                },
                {
                    "file": "README.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> How about \"Standard\"? \"Direct\" doesn't exactly match how it works, because established connection is not direct at all. \n\n\"Standard\" implies that there's a standard it's meeting up to.  It's better than legacy, but not terribly descriptive.  Seems reasonable.\n\nDirect was meant to describe virtual_mediad -> File share, instead of virtual_mediad -> bmcweb -> file share, but I could see how that would be confusing.\n\n> We're specifying remote location of image to be served in accordance with Redfish schema (https://redfish.dmtf.org/schemas/v1/VirtualMedia.v1_6_3.json)."
                },
                {
                    "file": "README.md",
                    "line": 19,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Ok, Your explanations make sense as well. I was looking at this from user perspective, to whom providing image file to browser seems to be more direct than specifying image HTTPS/CIFS location. Changed the name to \"Standard\" for now, however I'm still open for discussion if You come up with something new."
                },
                {
                    "file": "README.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "is it possible to fix the word wrapping on this.  It clearly goes over our limit.\n\nI suspect this could just be made a normal markdown list, rather than a table."
                },
                {
                    "file": "README.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will change this to bullet list"
                },
                {
                    "file": "README.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, this daemon doesn't expose the redfish schema, bmcweb does.  Also, can you list which schemas?"
                },
                {
                    "file": "README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Acually, on second thought, don't mention which schemas.  The exact schemas should go in Redfish.md in bmcweb."
                },
                {
                    "file": "README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "README.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Updated whole `Capabilities` section."
                },
                {
                    "file": "README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Again, THIS daemon doesn't expose a websocket, bmcweb does."
                },
                {
                    "file": "README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "README.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Updated whole `Capabilities` section."
                },
                {
                    "file": "README.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "What does this mean?  This daemon doesn't have anything to do with authentication?"
                },
                {
                    "file": "README.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Will remove"
                },
                {
                    "file": "README.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Updated whole `Capabilities` section."
                },
                {
                    "file": "README.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Remove."
                },
                {
                    "file": "README.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "README.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed"
                },
                {
                    "file": "README.md",
                    "line": 78,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "what is \"systemd devel\" ?\n\nlibsystemd?  I don't think that's used directly here, only through sdbusplus.  No need to call out systemds dependencies."
                },
                {
                    "file": "README.md",
                    "line": 78,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I think final name should be \"libsystemd-devel\". Description is wrong though, as we're using it for udev API, not DBus. Will correct."
                },
                {
                    "file": "README.md",
                    "line": 78,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think the package is \"libsystemd-dev\", but even libsystemd-devel is more descriptive."
                },
                {
                    "file": "README.md",
                    "line": 78,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Actually I was wrong: Udev API is already provided by `libudev-dev`, mentioned earlier in this section. Thus removed the `libsystemd-dev` point."
                },
                {
                    "file": "README.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Are going to result in a folder structure of jsondb/build/build, which I'm almost certain isn't intended.  It just looks like they were copied from the instructions.  I suspect they can be just removed, but if you want to keep them, the instructions would be\n\n```\nmeson build\nmeson compile -C build\n```\n\n(please double check these work, I just typed them out from memory)"
                },
                {
                    "file": "README.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "\"These are going to result...\""
                },
                {
                    "file": "README.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Ack. Some weird mixup must have happened after switching from CMake. Will correct that."
                },
                {
                    "file": "README.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson.build",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We're waiting on compiler support for c++23 + sdbusplus."
                },
                {
                    "file": "meson.build",
                    "line": 7,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Ack. Most probably it'll be resolved by the time this series is ready to merge."
                },
                {
                    "file": "meson.build",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Hard to say, but just be aware of it."
                },
                {
                    "file": "meson.build",
                    "line": 118,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I think all of this can go away?"
                },
                {
                    "file": "meson.build",
                    "line": 118,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson.build",
                    "line": 118,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed"
                },
                {
                    "file": "meson.build",
                    "line": 140,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "like we talked about, remove."
                },
                {
                    "file": "meson.build",
                    "line": 140,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson.build",
                    "line": 140,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed"
                },
                {
                    "file": "meson.build",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This was copied from bmcweb.  I'm fairly certain this doesn't use beast (the http encoding library).  Please put some thought into this.  Remove all the dependencies, and add them back one at a time as needed."
                },
                {
                    "file": "meson.build",
                    "line": 150,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "- beast is needed for file_posix object.\n- callable_traits is needed by sdbusplus::asio.\n- process is used in later patches. Will remove this for now."
                },
                {
                    "file": "meson.build",
                    "line": 150,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ack."
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This doesn't use phosphor-logging (it invents its own logger).  Why is it added as a dependency?"
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Logger serves as a wrapper for phosphor::logging::log: https://gerrit.openbmc.org/plugins/gitiles/openbmc/jsnbd/+/202ea82c0f626bed1a84ff7ab042e148c0e354d3/src/utils/log-wrapper.hpp#58"
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wait, if you're using phosphor-logging, why put anything in Logging.hpp at all?"
                },
                {
                    "file": "meson.build",
                    "line": 197,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "I think switch to phosphor-logging was made to address these comments:\nhttps://gerrit.openbmc.org/c/openbmc/jsnbd/+/49944/1..24/src/logger.hpp#b1\nhttps://gerrit.openbmc.org/c/openbmc/jsnbd/+/49944/3..24/src/logger.hpp#b77\n\nFunctions from log-wrapper.hpp provide more convenient way to log than direct calls of phosphor::logging::log. Is that approach acceptable or would You rather expect to call the function from phosphor-logging directly in our code, without any wrapping?\n\nOne thing I've noticed now is that we're using **log** instead of **lg2**, as Patrick suggested back then. Is that OK, or would You like to change it as well?"
                },
                {
                    "file": "meson.build",
                    "line": 222,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think we have to explicitly set this.  The defaults should work now?"
                },
                {
                    "file": "meson.build",
                    "line": 222,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Default install directory is set to /usr/bin, so unfortunately we need to point this explicitly."
                },
                {
                    "file": "meson.build",
                    "line": 222,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "ACK."
                },
                {
                    "file": "meson_options.txt",
                    "line": 2,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "unmatched brace.\n\nAlso, can we get some better description of \"legacy\" mode?  Presumably all uses of virtual media will be through HTTPS in bmcweb, so getting a better description of what disabling this disallows would be good.  Is it related to either of the two bmcweb options?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 2,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nvm for the second, legacy mode is described in the readme.\n\nWhat does need to go here is why someone would want to set this option?  Presumably we don't need support for this in BOTH the config file and compile time?  Unless there's a significant advantage in binary size to not having legacy mode?"
                },
                {
                    "file": "meson_options.txt",
                    "line": 2,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Initial design assumed legacy mode to be an extension for existing nbd-proxy mode. Nowadays I think that both could be available without the need to disable it in compile time. I'll compare binary sizes in our downstream implementation with and without that option. If there's no significant difference, I'll remove it.\nBesides, I think that this will be handled anyway by \"LegacyMountPoints\" value in config. One could simply set it to 0 in case of not wanting support for legacy mode."
                },
                {
                    "file": "meson_options.txt",
                    "line": 2,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Initial design assumed legacy mode to be an extension for existing nbd-proxy mode. Nowadays I think that both could be available without the need to disable it in compile time. I'll compare binary sizes in our downstream implementation with and without that option. If there's no significant difference, I'll remove it.\n\nSounds good.\n\n> Besides, I think that this will be handled anyway by \"LegacyMountPoints\" value in config. One could simply set it to 0 in case of not wanting support for legacy mode.\n\nYep, that's kinda what I meant by supporting it in both."
                },
                {
                    "file": "meson_options.txt",
                    "line": 2,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Removed the `legacy-mode` option at all. Its impact on binary size was minimal."
                },
                {
                    "file": "meson_options.txt",
                    "line": 3,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please format this so it's readable."
                },
                {
                    "file": "meson_options.txt",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Acknowledged"
                },
                {
                    "file": "meson_options.txt",
                    "line": 3,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/main.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't see any code for handling launching this directly to connect to a port:\n\nhttps://github.com/openbmc/bmcweb/blob/b66551019cf3c31186877c30a91ff8622454f342/include/vm_websocket.hpp#L59\n\nam I missing that, or is this not a complete replacement for the existing proxy mode?  What is required such that we can move to this new daemon without breaking anyone?  Changes to bmcweb requried?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "As mentioned in other comment, this is implemented in another patch."
                },
                {
                    "file": "src/main.cpp",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Closing this out, we can follow up on the other comment."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 38,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -6
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 244,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-missing-nbd.json",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 116,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd16.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 231,
                    "deletions": -41
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 109,
                    "deletions": 0
                },
                {
                    "file": "tests/res/virtual-media-nbd15.json",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 118,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1566,
            "sizeDeletions": 48
        },
        {
            "number": 25,
            "revision": "279b8f437ba6c9031dde5a4a79cd4cd4d1a27d44",
            "parents": [
                "f5ad6bb376dfc326ce6a7ac49ccec47dc76838d6"
            ],
            "ref": "refs/changes/44/49944/25",
            "uploader": {
                "name": "Michal Orzel",
                "email": "michalx.orzel@intel.com",
                "username": "morzelx"
            },
            "createdOn": 1709121217,
            "author": {
                "name": "Przemyslaw Czarnowski",
                "email": "przemyslaw.hawrylewicz.czarnowski@intel.com",
                "username": "phawryle"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/PATCHSET_LEVEL",
                    "line": 0,
                    "reviewer": {
                        "name": "Michal Orzel",
                        "email": "michalx.orzel@intel.com",
                        "username": "morzelx"
                    },
                    "message": "@Ed, @Patrick, may I ask You to take a look at this change? I don't want to proceed with later patches until this one is in state that could be potentially merge'able."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/utils_mock.hpp",
                    "type": "ADDED",
                    "insertions": 76,
                    "deletions": 0
                },
                {
                    "file": "tests/src/system_test.cpp",
                    "type": "ADDED",
                    "insertions": 78,
                    "deletions": 0
                },
                {
                    "file": "subprojects/sdbusplus.wrap",
                    "type": "ADDED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": ".clang-tidy",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/utils/log-wrapper.hpp",
                    "type": "ADDED",
                    "insertions": 94,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": -1
                },
                {
                    "file": "xyz.openbmc_project.VirtualMedia.service",
                    "type": "ADDED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "config/config.json",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/configuration.hpp",
                    "type": "ADDED",
                    "insertions": 193,
                    "deletions": 0
                },
                {
                    "file": "subprojects/nlohmann.wrap",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "subprojects/boost.wrap",
                    "type": "ADDED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "ADDED",
                    "insertions": 100,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "ADDED",
                    "insertions": 85,
                    "deletions": 0
                },
                {
                    "file": "subprojects/gtest.wrap",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "subprojects/phosphor-logging.wrap",
                    "type": "ADDED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 200,
                    "deletions": -42
                },
                {
                    "file": "src/utils/utils.hpp",
                    "type": "ADDED",
                    "insertions": 110,
                    "deletions": 0
                },
                {
                    "file": "tests/meson.build",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "tests/src/configuration_test.cpp",
                    "type": "ADDED",
                    "insertions": 139,
                    "deletions": 0
                },
                {
                    "file": "src/system.hpp",
                    "type": "ADDED",
                    "insertions": 118,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1338,
            "sizeDeletions": 44
        }
    ]
}