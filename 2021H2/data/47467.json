{
    "project": "openbmc/phosphor-fan-presence",
    "branch": "master",
    "id": "Ie3630174c8aa54911e56054e9d7c38bb7dfb3f18",
    "number": 47467,
    "subject": "control: Create FlightRecorder class",
    "owner": {
        "name": "Matt Spinler",
        "email": "spinler@us.ibm.com",
        "username": "spinler"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-fan-presence/+/47467",
    "commitMessage": "control: Create FlightRecorder class\n\nThis class provides a flight recorder feature by providing the following\ntwo interfaces:\n\n1. log(const std::string& id, const std::string& message)\n2. dump()\n\nlog() saves the passed in message in a map with the previous messages\nfor that ID along with a timestamp when log() was called.  It will\ndiscard the oldest message if necessary to keep a maximum of 20.\n\ndump() will write all messages to the file /tmp/fan_control.txt.  It\nwill sort them all based on the timestamp so messages from different IDs\nmay be interleaved together.\n\nThe ID is used in addition to the message with the idea that there could\nbe one ID per action or per action instance, so that once active part of\nfan control that logged a lot wouldn't force out messages from less\nactive parts.\n\nExample output is:\n\nOct 01 04:37:19.123923: pcie_card_cooling-0: Setting parameter to 2\nOct 01 04:37:19.129787:      mapped_floor-1: Setting new floor to 4755\n\nThe first column is the timestamp down to the microsecond, the second\ncolumn is the ID, and the third is the message.\n\nTesting on real hardware showed it took about 21 milliseconds for dump()\nto run when there were 30 IDs with 20 messages each.\n\nSigned-off-by: Matt Spinler <spinler@us.ibm.com>\nChange-Id: Ie3630174c8aa54911e56054e9d7c38bb7dfb3f18\n",
    "createdOn": 1633383405,
    "lastUpdated": 1633962059,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1633383405,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1633383417,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633383510,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27424/ : SUCCESS"
        },
        {
            "timestamp": 1633439925,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633612941,
            "reviewer": {
                "name": "Mike Capps",
                "email": "mikepcapps@gmail.com",
                "username": "mikecgithub"
            },
            "message": "Patch Set 1: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1633713980,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1633714878,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1633720805,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633720805,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1633720818,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633720924,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27955/ : SUCCESS"
        },
        {
            "timestamp": 1633721406,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1633722302,
            "reviewer": {
                "name": "Mike Capps",
                "email": "mikepcapps@gmail.com",
                "username": "mikecgithub"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1633722352,
            "reviewer": {
                "name": "Matthew Barth",
                "email": "msbarth@linux.ibm.com",
                "username": "msbarth"
            },
            "message": "Patch Set 2: Code-Review+2"
        },
        {
            "timestamp": 1633962059,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Change has been successfully rebased and submitted as 1327096789b0c7b0e16ca28bc61ad403cd2aa590 by Matt Spinler"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "beca73e4f7f420ee44b5980ab8c482d215000d9e",
            "parents": [
                "16861797f34947f1a8d5106861a37c5598303018"
            ],
            "ref": "refs/changes/67/47467/1",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1633383405,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Seems this could be shortened up to save the liner search with something like this:\n```\nauto& entry = _entries[id];\nentry.push_back(Entry{ts, message});\nif (entry.size() > maxEntriesPerID)\n{\n  entry.pop_front();\n}\n```"
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "line": 59,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Just thought of something, would it be worth adding what journal entries that may exist for the fan control service in this flight recorder dump as well? Similar to what can be obtained using `journalctl -u phosphor-fan-control@0.service --no-pager` ? Which could make this flight recorder dump file a one-stop-shop for fan control debugging info."
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Yea, that should be doable.  I'll do it with a new commit since it probably isn't trivial."
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "line": 62,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Ack"
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "A deque appears to be more efficient for frequently removing items off the front, but I'm open to whatever."
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Mike Capps",
                        "email": "mikepcapps@gmail.com",
                        "username": "mikecgithub"
                    },
                    "message": "Done"
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Matthew Barth",
                        "email": "msbarth@linux.ibm.com",
                        "username": "msbarth"
                    },
                    "message": "Is the string key the ID? Probably better to use an unordered_map to save the map sorting on insertion since we dont need the weak (< operator) ordering of the map for lookup."
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "line": 77,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "control/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "type": "ADDED",
                    "insertions": 113,
                    "deletions": 0
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 194,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "7b2e1625c9d0d377fac247e2a61fd4cbdf142a1f",
            "parents": [
                "16861797f34947f1a8d5106861a37c5598303018"
            ],
            "ref": "refs/changes/67/47467/2",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1633720805,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "control/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "1327096789b0c7b0e16ca28bc61ad403cd2aa590",
            "parents": [
                "49766182fada25945e490f23ba3f0b30e6646ea8"
            ],
            "ref": "refs/changes/67/47467/3",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1633962059,
            "author": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "control/Makefile.am",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "control/json/utils/flight_recorder.cpp",
                    "type": "ADDED",
                    "insertions": 105,
                    "deletions": 0
                },
                {
                    "file": "control/json/utils/flight_recorder.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 186,
            "sizeDeletions": 0
        }
    ]
}