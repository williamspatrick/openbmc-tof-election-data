{
    "project": "openbmc/bmcweb",
    "branch": "master",
    "id": "I3787a471d293e1d17c88a87dd1a571a64b6684fe",
    "number": 47981,
    "subject": "Add option to serve static license info",
    "owner": {
        "name": "Jason Bills",
        "email": "jason.m.bills@linux.intel.com",
        "username": "jmbills"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47981",
    "commitMessage": "Add option to serve static license info\n\nSome products have requirements for the source license info to\nbe made available to users.  This adds an option to serve the\nstatic license info stored in /usr/share/common-licenses to\nusers on the path /common-licenses.\n\nDirectory paths will show the directory contents.  File paths\nwill show the file content.  All content is displayed as plain\ntext.\n\nTested:\nNavigated to /common-licenses and common-licenses/ and confirmed\nthat the directory listing was displayed.\n\nNavigated to /common-licenses/bmcweb and common-licenses/bmcweb/\nand confirmed that the directory listing was displayed.\n\nNavigated to /common-licenses/bmcweb/LICENSE and confirmed that\nthe license text was displayed.\n\nNavigated to /common-licenses/../../network/config.json and\nit returned \"Not Found\".\n\nNavigated to /common-licenses/../ipmi-providers/channel_access.json\nand it returned \"Not Found\".\n\nChange-Id: I3787a471d293e1d17c88a87dd1a571a64b6684fe\nSigned-off-by: Jason M. Bills <jason.m.bills@linux.intel.com>\n",
    "createdOn": 1634673509,
    "lastUpdated": 1634836085,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1634673509,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1634673527,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1634673973,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/28551/ : SUCCESS"
        },
        {
            "timestamp": 1634693842,
            "reviewer": {
                "name": "Gunnar Mills",
                "email": "gmills@us.ibm.com",
                "username": "gtmills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1634694193,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\nA bit of a weird meta-question: did you consider just installing the static licenses in the /var/www folder?  That would've required a minor license change and a one line cp command in a recipe.\n\nThe webassets stuff is intentionally decoupled from that such that we can install things into the webserver from anywhere with no code, so I'd like to understand better why you chose to go down the route of adding a bunch of code.\n\n(haven't reviewed the actual patch yet)."
        },
        {
            "timestamp": 1634760931,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2: Commit message was updated."
        },
        {
            "timestamp": 1634761370,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 1:\n> \n> A bit of a weird meta-question: did you consider just installing the static licenses in the /var/www folder?  That would've required a minor license change and a one line cp command in a recipe.\n\nAlternatively, if you wanted the licenses to stay in their /usr folder, maybe symlinking /var/www/common-licenses to /usr/share/common-licenses?\n\n> \n> The webassets stuff is intentionally decoupled from that such that we can install things into the webserver from anywhere with no code, so I'd like to understand better why you chose to go down the route of adding a bunch of code.\n> \n> (haven't reviewed the actual patch yet)."
        },
        {
            "timestamp": 1634761855,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\n> Patch Set 1:\n> \n> A bit of a weird meta-question: did you consider just installing the static licenses in the /var/www folder?  That would've required a minor license change and a one line cp command in a recipe.\n> \n/usr/share/common-licenses is the default location that licenses get installed by the \"COPY_LIC_DIRS\" Yocto option.  I didn't look into what it would take to change it, but I can see if there are simple options to change the destination.\n\n> The webassets stuff is intentionally decoupled from that such that we can install things into the webserver from anywhere with no code, so I'd like to understand better why you chose to go down the route of adding a bunch of code.\n> \n\nI copied the basic code from webassets, but it required additional changes to support the directory listing capability as that was not part of webassets.  The existing code can display contents based on the index.json, but that file isn't present for common-licenses by default.\n\nI guess I chose to do it this way because I didn't think of alternatives.  My initial thought was to use the existing webassets, but it didn't work as-is for the licenses, so I added a new file to not risk messing up the existing one.  I am happy to explore alternatives."
        },
        {
            "timestamp": 1634761903,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 1:\n> > \n> > A bit of a weird meta-question: did you consider just installing the static licenses in the /var/www folder?  That would've required a minor license change and a one line cp command in a recipe.\n> \n> Alternatively, if you wanted the licenses to stay in their /usr folder, maybe symlinking /var/www/common-licenses to /usr/share/common-licenses?\n\n/var/www doesn't exist on my system.  Is it /usr/share/www?\n> \n> > \n> > The webassets stuff is intentionally decoupled from that such that we can install things into the webserver from anywhere with no code, so I'd like to understand better why you chose to go down the route of adding a bunch of code.\n> > \n> > (haven't reviewed the actual patch yet)."
        },
        {
            "timestamp": 1634762194,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> (1 comment)\n> \n> > Patch Set 1:\n> > \n> > A bit of a weird meta-question: did you consider just installing the static licenses in the /var/www folder?  That would've required a minor license change and a one line cp command in a recipe.\n> > \n> /usr/share/common-licenses is the default location that licenses get installed by the \"COPY_LIC_DIRS\" Yocto option.  I didn't look into what it would take to change it, but I can see if there are simple options to change the destination.\n> \n> > The webassets stuff is intentionally decoupled from that such that we can install things into the webserver from anywhere with no code, so I'd like to understand better why you chose to go down the route of adding a bunch of code.\n> > \n> \n> I copied the basic code from webassets, but it required additional changes to support the directory listing capability as that was not part of webassets.  The existing code can display contents based on the index.json, but that file isn't present for common-licenses by default.\n\nGotcha, that makes a little sense.  directory listing seems like something we could just do everywhere, including webassets, and share all the code, right?  Alternatively, we could just have another job that builds the index.html file for each directory at build time.\n\n> \n> I guess I chose to do it this way because I didn't think of alternatives.  My initial thought was to use the existing webassets, but it didn't work as-is for the licenses, so I added a new file to not risk messing up the existing one.  I am happy to explore alternatives.\n\nIMO, my preferred solution would be:\n1. write a layer that copies/symlinks the licenses into www\n2. At the same time that recipe would generate the index.html files for the directory listing, and put them in the www directory\n\nThat way, all the code is 100% shared between the two file hosting things, and when we get back to implementing etag caching, we won't have to deal with two different sets of code.\n\nSeem reasonable?  Any holes in my thought process here?"
        },
        {
            "timestamp": 1634762220,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > Patch Set 1:\n> > > \n> > > A bit of a weird meta-question: did you consider just installing the static licenses in the /var/www folder?  That would've required a minor license change and a one line cp command in a recipe.\n> > \n> > Alternatively, if you wanted the licenses to stay in their /usr folder, maybe symlinking /var/www/common-licenses to /usr/share/common-licenses?\n> \n> /var/www doesn't exist on my system.  Is it /usr/share/www?\n\nYes, I mistyped."
        },
        {
            "timestamp": 1634763253,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n> IMO, my preferred solution would be:\n> 1. write a layer that copies/symlinks the licenses into www\n> 2. At the same time that recipe would generate the index.html files for the directory listing, and put them in the www directory\n> \n> That way, all the code is 100% shared between the two file hosting things, and when we get back to implementing etag caching, we won't have to deal with two different sets of code.\n> \n> Seem reasonable?  Any holes in my thought process here?\n\nSeems reasonable.  The current code filters out symlinks.  Do we want to remove that check, or is copying better?  If copying is better, I'll need to figure out where to do the actual copy as I don't know when Yocto generates the common-licenses folder..."
        },
        {
            "timestamp": 1634830695,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > IMO, my preferred solution would be:\n> > 1. write a layer that copies/symlinks the licenses into www\n> > 2. At the same time that recipe would generate the index.html files for the directory listing, and put them in the www directory\n> > \n> > That way, all the code is 100% shared between the two file hosting things, and when we get back to implementing etag caching, we won't have to deal with two different sets of code.\n> > \n> > Seem reasonable?  Any holes in my thought process here?\n> \n> Seems reasonable.  The current code filters out symlinks.  Do we want to remove that check, or is copying better?  If copying is better, I'll need to figure out where to do the actual copy as I don't know when Yocto generates the common-licenses folder...\n\nI don't have a strong opinion on the symlink check, but a minor preference for the copy;  I only added the symlink check originally to remove the possibility of crashing on cycles, and because it seemed like it was something that was easy to abuse (ie, symlinking in all of /etc to be able to modify the files)\n\nBut this seems like a reasonable use, especially if it avoids special casing the license stuff.\n\nYocto has a task called \"do_populate_lic\", so I'll bet you can throw something like \"do_populate_lic:append\" in a recipe, then run whatever code you need to run."
        },
        {
            "timestamp": 1634836075,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 2:\n\n> Patch Set 2:\n> \n> > Patch Set 2:\n> > \n> > > IMO, my preferred solution would be:\n> > > 1. write a layer that copies/symlinks the licenses into www\n> > > 2. At the same time that recipe would generate the index.html files for the directory listing, and put them in the www directory\n> > > \n> > > That way, all the code is 100% shared between the two file hosting things, and when we get back to implementing etag caching, we won't have to deal with two different sets of code.\n> > > \n> > > Seem reasonable?  Any holes in my thought process here?\n> > \n> > Seems reasonable.  The current code filters out symlinks.  Do we want to remove that check, or is copying better?  If copying is better, I'll need to figure out where to do the actual copy as I don't know when Yocto generates the common-licenses folder...\n> \n> I don't have a strong opinion on the symlink check, but a minor preference for the copy;  I only added the symlink check originally to remove the possibility of crashing on cycles, and because it seemed like it was something that was easy to abuse (ie, symlinking in all of /etc to be able to modify the files)\n> \n> But this seems like a reasonable use, especially if it avoids special casing the license stuff.\n> \n> Yocto has a task called \"do_populate_lic\", so I'll bet you can throw something like \"do_populate_lic:append\" in a recipe, then run whatever code you need to run.\n\nI pushed a change here to copy the licenses and generate the index files to have the licenses served by webassets.hpp: https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/48044.\n\nI will abandon this change."
        },
        {
            "timestamp": 1634836085,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Abandoned\n\nReplaced by https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/48044."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "edbb19331d075f47a89af1de6fcad315dabc6031",
            "parents": [
                "27ea7db1c2a40bdb3402a9ffda335d2876f604fb"
            ],
            "ref": "refs/changes/81/47981/1",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1634673509,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Gunnar Mills",
                        "email": "gmills@us.ibm.com",
                        "username": "gtmills"
                    },
                    "message": "Tested things like /common-licenses/../../network/config.json ?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 27,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 29,
                    "deletions": 0
                },
                {
                    "file": "include/webassets_licenses.hpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "368db8cb17560027648ca6423dcca1f5aab6161d",
            "parents": [
                "27ea7db1c2a40bdb3402a9ffda335d2876f604fb"
            ],
            "ref": "refs/changes/81/47981/2",
            "uploader": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "createdOn": 1634760931,
            "author": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "include/webassets_licenses.hpp",
                    "type": "ADDED",
                    "insertions": 128,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/webserver_main.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 0
        }
    ]
}