{
    "project": "openbmc/intel-ipmi-oem",
    "branch": "master",
    "id": "Ic3040fc587318e4799c2e0c7b53fa8d808542365",
    "number": 45114,
    "subject": "ChassisIDCmd: Validated reserved fields in req.",
    "owner": {
        "name": "Manoj Ashok",
        "email": "amanoj@ami.com",
        "username": "manojashok-ami"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/45114",
    "commitMessage": "ChassisIDCmd: Validated reserved fields in req.\n\nThe bits [7:1] of the byte 2 of Chassis Identify Command request\nare reserved. Return InvalidFieldRequest, 0xcc, if there are\nnon-zero value in these fields.\n\nTested:\nCase 1: Chassis Identify Command without reserve fields set and\n                                    force identify bit set\nCommand: ipmitool -I lanplus -H <BMC IP> -U <user> -P <passwd> -C 17\n                                    raw 0x00 0x04 0x00 0x01\nResponse:               //Success\n\nCase 2: Chassis Identify Command with reserve field in byte 2 set and\n                                    force identify bit unset\nCommand: ipmitool -I lanplus -H <BMC IP> -U <user> -P <passwd> -C 17\n                                    raw 0x00 0x04 0x00 0x80\nResponse: Unable to send RAW command (channel=0x0 netfn=0x0 lun=0x0\n                    cmd=0x4 rsp=0xcc): Invalid data field in request\n\nCase 3: Chassis Identify Command with reserve field in byte 2 set and\n                                    force identify bit set\nCommand: ipmitool -I lanplus -H <BMC IP> -U <user> -P <passwd> -C 17\n                                    raw 0x00 0x04 0x00 0x21\nResponse: Unable to send RAW command (channel=0x0 netfn=0x0 lun=0x0\n                    cmd=0x4 rsp=0xcc): Invalid data field in request\n\nSigned-off-by: Manoj Ashok <amanoj@ami.com>\nChange-Id: Ic3040fc587318e4799c2e0c7b53fa8d808542365\n",
    "createdOn": 1626870865,
    "lastUpdated": 1634041086,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1626870865,
            "reviewer": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1626870888,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1627338669,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627489331,
            "reviewer": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1627489345,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nUser not approved, see admin, no CI"
        },
        {
            "timestamp": 1627541094,
            "reviewer": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1634041086,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "05ca68fda2ba14692cdc364c1e8e929d48ca18f3",
            "parents": [
                "440f62bfd5eb557059e76b1d5d7a107ce67ba8ed"
            ],
            "ref": "refs/changes/14/45114/1",
            "uploader": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "createdOn": 1626870865,
            "author": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/chassiscommands.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "The proper fix for this would be to make this uint8_t into a std::optional<std::tuple<bool, uint7_t>> force. Then the unpacker can extract the parts for you.\n\nThen you check that std::get<uint7_t>(force) is 0 and forceIdentify is std::get<bool>(force);"
                },
                {
                    "file": "src/chassiscommands.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Manoj Ashok",
                        "email": "amanoj@ami.com",
                        "username": "manojashok-ami"
                    },
                    "message": "Updated code to use tuple to parse the reserve fields and \nthe force identify bit."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/chassiscommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 7,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "1831ae43e17989410f5d62c4abb4874b7a02f141",
            "parents": [
                "440f62bfd5eb557059e76b1d5d7a107ce67ba8ed"
            ],
            "ref": "refs/changes/14/45114/2",
            "uploader": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "createdOn": 1627489331,
            "author": {
                "name": "Manoj Ashok",
                "email": "amanoj@ami.com",
                "username": "manojashok-ami"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/chassiscommands.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "You can add Error log before returning from here ."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 35,
                    "deletions": 0
                },
                {
                    "file": "src/chassiscommands.cpp",
                    "type": "MODIFIED",
                    "insertions": 16,
                    "deletions": -3
                }
            ],
            "sizeInsertions": 16,
            "sizeDeletions": 3
        }
    ]
}