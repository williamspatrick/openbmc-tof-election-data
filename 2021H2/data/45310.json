{
    "project": "openbmc/phosphor-logging",
    "branch": "master",
    "id": "I519756bbbf84ce024b1a117013868c3c11ebdecb",
    "number": 45310,
    "subject": "lg2: introduce motivation and API",
    "owner": {
        "name": "Patrick Williams",
        "email": "patrick@stwcx.xyz",
        "username": "williamspatrick"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-logging/+/45310",
    "commitMessage": "lg2: introduce motivation and API\n\nSigned-off-by: Patrick Williams <patrick@stwcx.xyz>\nChange-Id: I519756bbbf84ce024b1a117013868c3c11ebdecb\n",
    "createdOn": 1627416924,
    "lastUpdated": 1629983169,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1627416924,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1627416949,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627417771,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/23016/ : SUCCESS"
        },
        {
            "timestamp": 1627438791,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627439447,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627439722,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1627440529,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1627470196,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(7 comments)"
        },
        {
            "timestamp": 1627475723,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1:\n\n(2 comments)\n\nGood improvements Patrick"
        },
        {
            "timestamp": 1627486245,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1627487918,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1627488324,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627514852,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627572102,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1627658974,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627747911,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627949616,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(13 comments)"
        },
        {
            "timestamp": 1627949728,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1627949753,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627950462,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/23604/ : SUCCESS"
        },
        {
            "timestamp": 1627954384,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2: Code-Review+1\n\n(1 comment)\n\nNice work. I found a minor formatting issue, but let's not hold things up on that."
        },
        {
            "timestamp": 1627958147,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1627958160,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627958200,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1627958888,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/23620/ : SUCCESS"
        },
        {
            "timestamp": 1627960034,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1627973407,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1628010504,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1628011467,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(5 comments)"
        },
        {
            "timestamp": 1628228483,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(4 comments)\n\nIncoming patch set will attempt to provide justification for some of the design questions that have been raised recently.\n\n@Ed, I'm still not sure what to do about your Redfish comment.  I don't understand what issue you're raising."
        },
        {
            "timestamp": 1628228489,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1628228512,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1628229181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/23947/ : SUCCESS"
        },
        {
            "timestamp": 1628231672,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1628232501,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 4: Code-Review+1"
        },
        {
            "timestamp": 1628496657,
            "reviewer": {
                "name": "William A. Kennington III",
                "email": "wak@google.com",
                "username": "wak-google"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1628559084,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1628590707,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1628618800,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1629474341,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1629477521,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1629483845,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1629737193,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1629738543,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1629740980,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1629744233,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(4 comments)"
        },
        {
            "timestamp": 1629752754,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1629752823,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1629752839,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629753811,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/24837/ : SUCCESS"
        },
        {
            "timestamp": 1629784425,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1629802110,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1629811344,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 5: Code-Review+2"
        },
        {
            "timestamp": 1629983169,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Change has been successfully rebased and submitted as 87896d58b10c53f754850421560604b9dfdc45ba by Matt Spinler"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
            "parents": [
                "c4be795242613e0ccacc2100b0efe7f74f75db05"
            ],
            "ref": "refs/changes/10/45310/1",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1627416924,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/structured-logging.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "as you mention below, someone just chose to use the journal for IPC instead of dbus."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I don't see any 'structured logging' in the journal message output on my fedora install. And to me it looks like all of the important info is in the message itself, like bad return codes and IP addresses.  So I don't think this is a linux wide design point?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is a systemd design point.  Linux in general has a history of just using syslog and not being structured.  An example from systemd on my system:\n\n```\n    MESSAGE=tracker-extract.service: Scheduled restart job, restart counter is at 1.\n    N_RESTARTS=1\n```"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Could you add couple examples that will illustrate the benefit and show where structured logging have benefits against free-form."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Sure."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I think it is also worth to add to this document separate section about log levels usage."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "As in what the log levels are or how they should be used?  We haven't previously defined how they should be used, but I think the syslog man page does give a description.  I could reference or duplicate their \"meaning\" for various log levels if you like."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "I think, reference to loglevel would be enough, just to define that we use the levels according this recommendations.\nOther thing I also thought is how the log levels works under the hood, e.g. how to enable debug messages to be printed."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Anyway to put the formatted data in different parts of the string? Something like this:\n\nlg2::level(\"Error talking to\", \"TAG0\", \"value\", \"error code is\", \"TAG1\", lg2::hex, 2);"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I have no intention to support that, no.  The example you gave is nearly impossible to disambiguate at compile-time and any kind of formatting support like that would be a significant increase in code-size generated.  (The lg2 code is actually more compact than log right now, but both of them are mostly just shifting values onto a stack.  What you're proposing would require building strings in the caller-context.)\n\nI think the string you would have liked this to generate was something like:\n\n  \"Error talking to {value} error code is {0x2}\" (but without the {}'s).\n\nThe implementation that is done would transform as follows:\n\n  lg2::error(\"Error talking to entity.\", \"ENTITY\", lg2::primary, \"value\", \"ERRNO\", lg2::primary | lg2::hex, 2);\n\n  \"Error talking to entity. ENTITY=value ERRNO=0x2\"\n\nThese two contain the same information.  The second is not significantly less usable for a human, is structured, and has very little code overhead."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "This is roughly what I'm talking about in my feedback on the list. How I'd like to use this is:\n\n lg2::error(\"Error talking to {ENTITY} error code is {ERRNO}\", \"ENTITY\", value, \"ERRNO\", 2);\n\nThat is, we pass a format string to lg2::error(), and lg2::error() interpolates the structured values passed into the format string. If the format string doesn't contain specifiers for particular structured values they're simply omitted. The journal is sent the rendered string as MESSAGE, along with the structured values."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I guess it must be a personal preference, but I'm also a fan of well structured sentences in the journal like Andrew's idea would also accomplish."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 60,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "I would love to see a ton of  examples here."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "It's not clear how the flags should be used.\nDoes field8 means it will print like `%08x`?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I can try to improve the wording here.  What this does is approximately:\n\n  (hex | field8) ~= \"0x%02x\"\n  (bin | field8) ~= \"0b%08b\" (if %b were a printf format for binary)."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Yup, I figured it by checking the code. But it could be better to make it clear here."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Will do (in a future patch set).  I probably won't push up a new patch set immediately in order to gather additional feedback on this whole sequence without contributing to additional noise."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Usually one prints logs and expect all the information could be shown by default (e.g. journalctl) without extra argument (e.g. -o json-pretty)\n\nThis is an opt-in flag to indicate the metadata should be printed in the message, and is not used by default.\nIs it better to default to use this flag and add an opt-out flag to not print the meta?\nOr possibly we could just remove this flag and always make \"primary\", so that it's easier to use."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I expect this to be one area of contention that I'd like feedback on.  It would be simple, from a code perspective, to make 'primary' the default.  \n\nMy expectation is that most of the time humans don't actually need ALL of the data and I'd like developers to think a little bit about which fields are really needed rather than just duplicating everything in the message.\n\nI could be swayed with overwhelming feedback that this is not worth the effort.  On the surface it seems kind of pointless though to use the journal if we're just putting everything into a syslog-style message."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Well, most cases syslog-style message much more useful for humans. Having this we should think about what information is optional.\nTo be honest, the journalctl's UX is not so great and requesting metadata became ugly work which I want to avoid as much as possible (I mean, it is not so easy to get required log entry with `journalctl --output=verbose`)."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I'd vote this be the default and people can opt out. In pretty much every case I'm looking at the journal, I'd like to see this data."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "As someone that has screened probably hundreds of internal IBM bug reports and field issues, I also don't enjoy looking through verbose journals."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've changed things to use the {fmt}-style message generation proposed by Andrew J."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 105,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "maybe I missed this, but a key that isn't capitalized will still just silently be dropped if it is indented for that non-MESSAGE area?  I wish there would be a way to catch that in a compile."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 105,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've figured out how to make this work."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Can it be also implemented for old API?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "It could.  I don't intend to do that right now."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Just to confirm:  Will the journal output be mirrored to the TTY in the case where an application is started by systemd?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "No.  \n\nWhen an application is started by systemd, all stdout/stderr is caught by systemd and the process doesn't have a TTY.  systemd routes all this to the journal already so there is not any point in us duplicating it to stderr as well.\n\nSimilarly, there is no way for the application to get to the launching console (which may or may not still exist).  I don't think we want all logging to end up on the serial console in these cases, which maybe we could find, because it would probably slow the BMC down to a crawl and would be super frustrating for anyone actually using the console."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "I agree and was concerned that the mirroring statement implied that it would be mirrored in the systemd start-up case which we don't want.  Thanks!"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Please, add here some examples of how message with \"primary\" parameter looks like."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ack"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This format key is now removed in favor of {fmt}-style proposal."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Does this mean that the message became \"free-form\" but with metadata, which duplicates parameters?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I gave a reply to Andrew with an example but will include one in this section.\n\n  lg2::error(\"Error talking to entity.\", \"ENTITY\", lg2::primary, \"value\", \"ERRNO\", lg2::primary | lg2::hex, 2);\n\n  \"Error talking to entity. ENTITY=value ERRNO=0x2\""
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Am I right that now this \"value\" stored twice: as metadata and as part of the message? I believe this should be mentioned in description of \"primary\" option to explicitly point that this will affect log size."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Yes.  Good point.  And that's partially why ideally not everything is in `primary`.\n\nMy opinion is we want other machines to be able to use the journal-metadata, because there is no parsing and ambiguity, but we want humans to be able to use the message.  So there has to be enough in the message for what a human most-likely needs at a cursory investigation."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Once you put such statement, you also should add some recommendation on what should not be \"primary\" and why."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 134,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Removed section."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "docs/structured-logging.md",
                    "type": "ADDED",
                    "insertions": 171,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "af12d09a485c9a82aee10580e7fb3c8aa20312d5",
            "parents": [
                "8eeb4dd7bab177f6d18c010227d34b516092909f"
            ],
            "ref": "refs/changes/10/45310/2",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1627949728,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/structured-logging.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "`{fmt}`"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "docs/structured-logging.md",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 205,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "48f5e8353256e4f14b2c284028226b471ea3df82",
            "parents": [
                "8eeb4dd7bab177f6d18c010227d34b516092909f"
            ],
            "ref": "refs/changes/10/45310/3",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1627958147,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "docs/structured-logging.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This kind of feels like a design, but doesn't really use the design template.  Some things like \"other designs considered\" would be helpful from that format.  I suspect there are other things that are useful too."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Are you suggesting this should go into the 'docs' repository or just that there are elements of that template that could be useful here?  \n\nThis was intended to be more of a \"this is how the API works\" since not even the original API was documented, but I understand that there are design elements of any API proposal."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've attempted to add some of the \"other designs considered\" based on comments in this review and on Discord to a Q/A style section at the end of the doc."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "One other important reason for the existing journald code is that we're not writing the full string to the journal on every entry, which saves a significant amount of space.  I don't really see mention of how the backend of this is going to work, but we should make sure that we have an accounting for that so we don't lose the ability to store many records."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> One other important reason for the existing journald code is that we're not writing the full string to the journal on every entry\n\nI don't know what you mean by this.  We do write the entire message and all the key-value pairs to the journal today.  The only addition is that rather than using external formatting libraries people can natively append additional data into their message.  For someone using `{fmt}` already today this is no worse from a journal size perspective."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I have added a Q/A about this to the doc."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We should double check this is compatible with redfish, without having to do heroics (ie converting binary string data back into an int).  I'm not sure that hex encodings are supported in Redfish, so we should probably make sure that in the underlying data, we're writing as an int."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't know how this affects Redfish.  There were already format flags in logging.  All journald content is, by nature, a string.  If there are particular bits of data being picked out today in a particular Redfish-friendly format, I don't think there is any change, is there?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 99,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Discussed with Patrick offline.  This is for trace/printf style logging, not for eventing, so Redfish doesn't apply."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "A slightly meta question: why are we defining these ourselves?  Could we not just use what something like fmt already provides and documents?  Hopefully that means that when std::format lands, we could just switch to that entirely."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "These are separate from formatting flags on a message string (of which I've not implemented any), which is what `{fmt}` provides.  These are formatting of the keys.  If we were to attempt to leverage `{fmt}` here we'd end up N `{fmt}` calls at the call-site, rather than delegate them to the backend."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I've added more details on this design decision to the doc."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Will read."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "aren't periods allowed as well?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "No.\n\n> The variable name must be in uppercase and consist only of characters, numbers and underscores, and may not begin with an underscore. (All assignments that do not follow this syntax will be ignored.)"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "docs/structured-logging.md",
                    "type": "ADDED",
                    "insertions": 196,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 205,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "6d822098fc61dec175915e6f72ca605035c999a5",
            "parents": [
                "8eeb4dd7bab177f6d18c010227d34b516092909f"
            ],
            "ref": "refs/changes/10/45310/4",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1628228489,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Would you be willing to loosen up this language a bit until we decide on a direction there?"
                },
                {
                    "file": "README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is \"preferred\" acceptable?\n\nIf the APIs are used they end up being structured by nature of the API.  Is there any concern with that?  The new API makes it impossible to externally format non-structured strings (such as with `{fmt}`) and pass them in and I'm not really sure why you'd even want to do that."
                },
                {
                    "file": "README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "yea, preferred is fine.\n\nYou're saying that\n   std::string msg{\"hello world\"};\n   info(msg);\n   info(msg.str());\n\nwon't work?\nThat's fine, I just missed it."
                },
                {
                    "file": "README.md",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> yea, preferred is fine.\n\nDone.\n\n> You're saying that ... won't work?\n\nI was mis-remembering which parts were required to be compile-time strings.  The code examples you showed should work.\n\nI hope we don't have anyone purposefully doing that.  I've tried to make the structured logging as easy as it would be to use `strstream` or `fmt` but I guess we can leave that debate elsewhere."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "Should this just be 'report'?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think that \"issues\" is the spurious word here.  I'll fix the grammar."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Hmm, this example still doesn't seem to show the full power of what I think we can do now?\nlg2::level(\"Error talking to {TAG0}, error code is {TAG1}\", \"TAG0\", \"value\"_s, \"TAG1\", lg2::hex, 2);"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "True.  I can do a minor update here before this is merged to put {TAG0} somewhere other than at the end.  I purposefully didn't want to put TAG1 in the message to show that you can have some in and some out."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "ok makes sense showing both, if any other comments come in, please update, otherwise I'm fine."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "typo: that"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 202,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "This doesn't really explain why it's not used for structuring the entries though. I think it would be much simpler and give us more formatting flexibility to use an existing formatter like fmtlib / std::format instead of inventing our own syntax that is vaguely likey a limited iostream. It seems like it would be perfectly acceptable to have format strings per entry() and then have the upper layer that allows emplacing their values in the format string."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 202,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> This doesn't really explain why it's not used for structuring the entries though.\n\nCorrect.  I addressed that in the following Qs, didn't I?\n\n> It seems like it would be perfectly acceptable to have format strings per entry() and then have the upper layer that allows emplacing their values in the format string.\n\nMaybe.  I think I covered this by the paragraph in line 222 and 253.\n\nI think there is a fundamental disagreement with you on the ergonomics of the 'entry' syntax from before.  I've heard from many people that they absolutely hated how verbose it was and some of them said that it was one of the primary reasons they avoided using phosphor-logging.  I don't know how to reconcile all the view-points here."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 223,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "It would actually be really nice to have these things, sometimes you want specific formatting for numeric output."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "My argument is that it would be \"nice\" but unnecessary.  Can you point to cases where it is really important for our structured data to have fine-grained numerical formatting?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 223,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Also, I don't think there is anything that would preclude you from using `{fmt}` in the structured entry data itself, without me explicitly adding support for it.  Instead of `lg2::hex, 0x1` you could do `fmt::format(\"{:#x}\", 0x1)` if you prefer the utility of that, right?  I added the hex/bin formatting because I believe they cover the vast majority of the desired formatting cases.\n\nA rudimentary attempted grep/sed/sort/uniq to find all the \"entry\" formats used today yields only ones that are covered by the formatting I added:\n\n%#02x\n0x%02x\n0x%02X\n0x%04x\n0x%04X\n0x%08X\n0x%0X\n0x%hx\n0x%s\n0x%x\n0x%X\n %d\n%d\n%d_0x%x\n%d\\n\n%f\nFILE_NAME: %s\"\n%i\n%ld\n%llu\n%lu\n%lu\\n\nPERCENT:%d\"\n% PRIu32\n%PRIu64\n% PRIu8\nRETURN_CODE:%d\"\n %s\n%s\n%s\\n\n%s_%x\n%u\n%uz\n%x\n%x:%x\n%zu\n\nConversely, I looked through all the fmt calls and saw the vast majority of them are simple position indicators.  The only ones with format specifiers are:\n\n{:02X}\n{:#x}\n{:02x}\n{:04X}\n{:04x}\n\nThe code-base seems to back up my statement here: \"less consistent structured data with essentially no additional benefits.\"  Because, if there were a benefit to more detailed formatting, someone would have attempted to use it, right?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 239,
                    "reviewer": {
                        "name": "William A. Kennington III",
                        "email": "wak@google.com",
                        "username": "wak-google"
                    },
                    "message": "This doesn't really seem true, you could use a single buffer for all of the entry()'s and the overhead is mostly based on the number of entires which is similar to the proposal. fmtlib provides compile time formatting checks that you could use."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 239,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This seems like you are suggesting that we only format the unstructured message portion and not the journal metadata.  Maybe I understand you wrong.\n\nIf we want to format the journal metadata it would require N calls to `{fmt}` somewhere.  Can you point out which parts of the paragraph don't seem accurate."
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 244,
                    "reviewer": {
                        "name": "Jason Bills",
                        "email": "jason.m.bills@linux.intel.com",
                        "username": "jmbills"
                    },
                    "message": "if we do?"
                },
                {
                    "file": "docs/structured-logging.md",
                    "line": 244,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "docs/structured-logging.md",
                    "type": "ADDED",
                    "insertions": 293,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "05830826ca45f034164ee9f2eca11c273ffca53e",
            "parents": [
                "7bc3908485ddb8cb5285172ab93979d5bdbc7c6a"
            ],
            "ref": "refs/changes/10/45310/5",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1629752823,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "docs/structured-logging.md",
                    "type": "ADDED",
                    "insertions": 293,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "87896d58b10c53f754850421560604b9dfdc45ba",
            "parents": [
                "ef952af247f12a0b77a06bbfe7813b268b615f4d"
            ],
            "ref": "refs/changes/10/45310/6",
            "uploader": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "createdOn": 1629983169,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 10,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "docs/structured-logging.md",
                    "type": "ADDED",
                    "insertions": 293,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 302,
            "sizeDeletions": 0
        }
    ]
}