{
    "project": "openbmc/openbmc",
    "branch": "master",
    "id": "I05d18c2bc2c9c3c2e4b609e2d3b06d22c96427ba",
    "number": 45431,
    "subject": "meta-ethanolx: Copy 'x86-power-control' recipe",
    "owner": {
        "name": "Konstantin Aladyshev",
        "email": "aladyshev22@gmail.com",
        "username": "Kostr"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/45431",
    "commitMessage": "meta-ethanolx: Copy 'x86-power-control' recipe\n\nRecent change to the 'x86-power-control_git.bb' recipe\n\"add x86 power control service files based on host instances\"\n(9e6f034f04dba511623414d4ab1a1ad26126d5ed) have broken the build for\nthe AMD Ethanol CRB.\nApparently overriding SRCREV is no longer enough to correctly build\nthe 'x86-power-control' package.\nOverride the whole recipe to fix the build issue. Use the old recipe\nwith modifications to use new Yocto override syntax.\n\nSigned-off-by: Konstantin Aladyshev <aladyshev22@gmail.com>\nChange-Id: I05d18c2bc2c9c3c2e4b609e2d3b06d22c96427ba\n",
    "createdOn": 1627658448,
    "lastUpdated": 1631540496,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1627658448,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1627658507,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1627658516,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/5625/"
        },
        {
            "timestamp": 1627660093,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/5625/ : FAILURE"
        },
        {
            "timestamp": 1627660793,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627679953,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: -Verified\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/5652/"
        },
        {
            "timestamp": 1627680570,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/5652/ : SUCCESS"
        },
        {
            "timestamp": 1627683340,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627683410,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1627683451,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\nCCing Jason and Kwin as maintainers of x86-power-control for information."
        },
        {
            "timestamp": 1627683942,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\nFYI, I just pushed a patchset to remove this patch entirely.  Hopefully it sparks some good discussions.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/45457"
        },
        {
            "timestamp": 1627683991,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 1:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1627747127,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n> Considering that's a fork of an existing openbmc repo;  No, we should not be pointing to it in a recipe like this (see #1 here https://github.com/openbmc/docs/blob/master/meta-layer-guidelines.md)\n\nMaybe we should put together a conformance check for these items into the repository as well.  I'm seeing a number of practices in meta-layers that violate this.  The practices I'm seeing (not just in this meta-layer) that come to mind are: patching existing OpenBMC repositories, getting around development requirements by creating recipes to their own repositories, and getting around development requirements by checking in massive amounts of shell scripts.\n\n@Konstantin - I expected you to make this change locally and not submit it to Gerrit, but it seems good in that it sparked some discussion (and hopefully better future practice for this meta-layer).  I don't think this is a reasonable \"fix\" for us to accept because it means we can't easily pick up fixes for other build breaks such as those induced by a new compiler as we upgrade Yocto (a very common problem).\n\nA reasonable compromise for a time, rather than rip out this recipe/patch entirely, is to accept an update to the patch so that it applies cleanly on x86-power-control/master again.  I looked doing at it and it is non-trivial for me.  \n\nI do think we, as a project, should give a deadline for getting this completely fixed.  We shouldn't be strung along forever with \"I don't have time right now\" but we also shouldn't just rip it out without warning when there hasn't been a conformance-check in place and other meta-layers also have \"bad practices\"."
        },
        {
            "timestamp": 1627747507,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\nVia email Supreeth wrote:\n\n> Ed- Thanks for your feedback. Definitely, I will drive this to conclusion. However, I cant get to it immediately. I want to see a Factory design pattern or something similar implemented, so that any other platforms can simply override generic APIs with platform specific APIs. Not sure the way x86-power-control is headed. I would love to understand the direction, where x86-power-control is headed. I will start a thread, as soon as I get some breathing space \u2639.\n\nMy opinion, having looked briefly at the x86-power-control and the patch here, is that the majority of changes needed for AMD should be relatively straight-forward.  The major crux of this patch set is in GPIO naming schemes, and to be blunt, both of you (Intel and AMD) are in the wrong with respect to how GPIOs are suppose to work on this project.  We are suppose to have GPIOs for commonly used functions named in the device tree (or via another kernel hook) using an abstract software-oriented name and documented here: https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md .  You're not suppose to need a JSON file that maps an abstract name like \"PowerButton\" to a schematic name, but the device tree is suppose to have \"power-button\" labeled on a GPIO so userspace can find it irrespective of whatever you named it at a schematic level.  I picked \"power-button\" because it is already documented; there are a number of signals that x86-power-control appears to need that should be added to this document."
        },
        {
            "timestamp": 1627749844,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1: Code-Review-1\n> \n> > Considering that's a fork of an existing openbmc repo;  No, we should not be pointing to it in a recipe like this (see #1 here https://github.com/openbmc/docs/blob/master/meta-layer-guidelines.md)\n> \n> Maybe we should put together a conformance check for these items into the repository as well.\n\nI had this same thought on Friday;  I was going to bring it up with Andrew and see where he thought would be a good place to put a test like that.\n\n>  I'm seeing a number of practices in meta-layers that violate this.  The practices I'm seeing (not just in this meta-layer) that come to mind are: patching existing OpenBMC repositories, getting around development requirements by creating recipes to their own repositories, and getting around development requirements by checking in massive amounts of shell scripts.\n\nYep..... We've been having the same problem with this internally as well with our own developers.  It's probably time to try to slow it down a little;  At least in upstream.\n\n> \n> @Konstantin - I expected you to make this change locally and not submit it to Gerrit, but it seems good in that it sparked some discussion (and hopefully better future practice for this meta-layer).  I don't think this is a reasonable \"fix\" for us to accept because it means we can't easily pick up fixes for other build breaks such as those induced by a new compiler as we upgrade Yocto (a very common problem).\n> \n> A reasonable compromise for a time, rather than rip out this recipe/patch entirely, is to accept an update to the patch so that it applies cleanly on x86-power-control/master again.  I looked doing at it and it is non-trivial for me.  \n\nI would be fine with that, so long as it looked like appropriate progress was being worked on with the x86-power-control maintainers, but as-is, this patch was checked in months ago, and I haven't seen any effort put forth to getting this in a maintainable state.  Can someone that cares about this system functioning start by at least getting the patchset submitted to x86-power-control?\n\n> \n> I do think we, as a project, should give a deadline for getting this completely fixed.  We shouldn't be strung along forever with \"I don't have time right now\" but we also shouldn't just rip it out without warning when there hasn't been a conformance-check in place and other meta-layers also have \"bad practices\".\n\nI don't disagree here;  My patchset was intended as a \"Someone please submit a better option\" type patchset.  It's definitely far from ideal, but in the past it's worked as a good way to time bound fixes like this."
        },
        {
            "timestamp": 1627750341,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> Via email Supreeth wrote:\n> \n> > Ed- Thanks for your feedback. Definitely, I will drive this to conclusion. However, I cant get to it immediately.\n\nWe're all busy, so I understand.  Feel free to reach out to the other people working on this platform for help testing/upstreaming stuff;  Clearly it's not just you that cares about this platform.\n\n> I want to see a Factory design pattern or something similar implemented, so that any other platforms can simply override generic APIs with platform specific APIs. Not sure the way x86-power-control is headed. I would love to understand the direction, where x86-power-control is headed. I will start a thread, as soon as I get some breathing space \u2639.\n> \n> My opinion, having looked briefly at the x86-power-control and the patch here, is that the majority of changes needed for AMD should be relatively straight-forward.\n\nThis was roughly the same conclusion we came to for the ARM guys on the thread below, and Jason seems open to patches.\n\nhttps://lore.kernel.org/openbmc/71682083-58b9-ae07-dd11-8a58d8ca731e@linux.intel.com/\n\n>  The major crux of this patch set is in GPIO naming schemes, and to be blunt, both of you (Intel and AMD) are in the wrong with respect to how GPIOs are suppose to work on this project.  We are suppose to have GPIOs for commonly used functions named in the device tree (or via another kernel hook) using an abstract software-oriented name and documented here: \n\nFWIW, The original x86-power-control didn't have a config file at all, and used well defined GPIO naming schemes (although it didn't update that doc, but x86-power-control predated that design doc);  I'm not sure why the naming in the config files was added, but I'm assuming it's some combination of \"kernel patches are hard\" and \"OpenBMC patches are much easier\".  It could also be because you can't declare polarity in a DTS, so at the very least we'll need a name to polarity mapping.\n\n> https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md .  You're not suppose to need a JSON file that maps an abstract name like \"PowerButton\" to a schematic name, but the device tree is suppose to have \"power-button\" labeled on a GPIO so userspace can find it irrespective of whatever you named it at a schematic level.  I picked \"power-button\" because it is already documented; there are a number of signals that x86-power-control appears to need that should be added to this document.\n\n+1.  it would be good to get with Jason and Kwin to understand why they went down that route.  I'm hoping it's just ease of implementation, and that we could reverse paths quickly back to the \"old\" way."
        },
        {
            "timestamp": 1627940208,
            "reviewer": {
                "name": "Benjamin Fair",
                "email": "benjaminfair@google.com",
                "username": "BenjaminFair"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> >  The major crux of this patch set is in GPIO naming schemes, and to be blunt, both of you (Intel and AMD) are in the wrong with respect to how GPIOs are suppose to work on this project.  We are suppose to have GPIOs for commonly used functions named in the device tree (or via another kernel hook) using an abstract software-oriented name and documented here: \n> \n> FWIW, The original x86-power-control didn't have a config file at all, and used well defined GPIO naming schemes (although it didn't update that doc, but x86-power-control predated that design doc);  I'm not sure why the naming in the config files was added, but I'm assuming it's some combination of \"kernel patches are hard\" and \"OpenBMC patches are much easier\".  It could also be because you can't declare polarity in a DTS, so at the very least we'll need a name to polarity mapping.\n> \n> > https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md .  You're not suppose to need a JSON file that maps an abstract name like \"PowerButton\" to a schematic name, but the device tree is suppose to have \"power-button\" labeled on a GPIO so userspace can find it irrespective of whatever you named it at a schematic level.  I picked \"power-button\" because it is already documented; there are a number of signals that x86-power-control appears to need that should be added to this document.\n> \n> +1.  it would be good to get with Jason and Kwin to understand why they went down that route.  I'm hoping it's just ease of implementation, and that we could reverse paths quickly back to the \"old\" way.\n\nAn issue with moving back towards DTS-based GPIO configuration is that this isn't compatible with entity-manager (at least as long as device tree overlays are unsupported). I'd prefer to see something based on the entity-manager JSON configuration for the motherboard instead."
        },
        {
            "timestamp": 1628025300,
            "reviewer": {
                "name": "Jason Bills",
                "email": "jason.m.bills@linux.intel.com",
                "username": "jmbills"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > > Patch Set 1:\n> > > \n> > >  The major crux of this patch set is in GPIO naming schemes, and to be blunt, both of you (Intel and AMD) are in the wrong with respect to how GPIOs are suppose to work on this project.  We are suppose to have GPIOs for commonly used functions named in the device tree (or via another kernel hook) using an abstract software-oriented name and documented here: \n> > \n> > FWIW, The original x86-power-control didn't have a config file at all, and used well defined GPIO naming schemes (although it didn't update that doc, but x86-power-control predated that design doc);  I'm not sure why the naming in the config files was added, but I'm assuming it's some combination of \"kernel patches are hard\" and \"OpenBMC patches are much easier\".  It could also be because you can't declare polarity in a DTS, so at the very least we'll need a name to polarity mapping.\n> > \n> > > https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md .  You're not suppose to need a JSON file that maps an abstract name like \"PowerButton\" to a schematic name, but the device tree is suppose to have \"power-button\" labeled on a GPIO so userspace can find it irrespective of whatever you named it at a schematic level.  I picked \"power-button\" because it is already documented; there are a number of signals that x86-power-control appears to need that should be added to this document.\n> > \n> > +1.  it would be good to get with Jason and Kwin to understand why they went down that route.  I'm hoping it's just ease of implementation, and that we could reverse paths quickly back to the \"old\" way.\n> \n> An issue with moving back towards DTS-based GPIO configuration is that this isn't compatible with entity-manager (at least as long as device tree overlays are unsupported). I'd prefer to see something based on the entity-manager JSON configuration for the motherboard instead.\n\nIIRC the config file came about with the need to support multi-host.  So, the GPIOs are not being named here but the DTS names are being provided to x86-power-control to specify which ones are for the various purposes for each host.  If there is a better way to manage this through the DTS or platform config, I'm happy to move that direction."
        },
        {
            "timestamp": 1628025547,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > > Patch Set 1:\n> > > \n> > >  The major crux of this patch set is in GPIO naming schemes, and to be blunt, both of you (Intel and AMD) are in the wrong with respect to how GPIOs are suppose to work on this project.  We are suppose to have GPIOs for commonly used functions named in the device tree (or via another kernel hook) using an abstract software-oriented name and documented here: \n> > \n> > FWIW, The original x86-power-control didn't have a config file at all, and used well defined GPIO naming schemes (although it didn't update that doc, but x86-power-control predated that design doc);  I'm not sure why the naming in the config files was added, but I'm assuming it's some combination of \"kernel patches are hard\" and \"OpenBMC patches are much easier\".  It could also be because you can't declare polarity in a DTS, so at the very least we'll need a name to polarity mapping.\n> > \n> > > https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md .  You're not suppose to need a JSON file that maps an abstract name like \"PowerButton\" to a schematic name, but the device tree is suppose to have \"power-button\" labeled on a GPIO so userspace can find it irrespective of whatever you named it at a schematic level.  I picked \"power-button\" because it is already documented; there are a number of signals that x86-power-control appears to need that should be added to this document.\n> > \n> > +1.  it would be good to get with Jason and Kwin to understand why they went down that route.  I'm hoping it's just ease of implementation, and that we could reverse paths quickly back to the \"old\" way.\n> \n> An issue with moving back towards DTS-based GPIO configuration is that this isn't compatible with entity-manager (at least as long as device tree overlays are unsupported). I'd prefer to see something based on the entity-manager JSON configuration for the motherboard instead.\n\nI'm not following this statement;  Named GPIOs are supported in entity-manager for non-power control things.  Not sure what that has to do with device tree overlays...."
        },
        {
            "timestamp": 1628025631,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > > Patch Set 1:\n> > > \n> > > > Patch Set 1:\n> > > > \n> > > >  The major crux of this patch set is in GPIO naming schemes, and to be blunt, both of you (Intel and AMD) are in the wrong with respect to how GPIOs are suppose to work on this project.  We are suppose to have GPIOs for commonly used functions named in the device tree (or via another kernel hook) using an abstract software-oriented name and documented here: \n> > > \n> > > FWIW, The original x86-power-control didn't have a config file at all, and used well defined GPIO naming schemes (although it didn't update that doc, but x86-power-control predated that design doc);  I'm not sure why the naming in the config files was added, but I'm assuming it's some combination of \"kernel patches are hard\" and \"OpenBMC patches are much easier\".  It could also be because you can't declare polarity in a DTS, so at the very least we'll need a name to polarity mapping.\n> > > \n> > > > https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md .  You're not suppose to need a JSON file that maps an abstract name like \"PowerButton\" to a schematic name, but the device tree is suppose to have \"power-button\" labeled on a GPIO so userspace can find it irrespective of whatever you named it at a schematic level.  I picked \"power-button\" because it is already documented; there are a number of signals that x86-power-control appears to need that should be added to this document.\n> > > \n> > > +1.  it would be good to get with Jason and Kwin to understand why they went down that route.  I'm hoping it's just ease of implementation, and that we could reverse paths quickly back to the \"old\" way.\n> > \n> > An issue with moving back towards DTS-based GPIO configuration is that this isn't compatible with entity-manager (at least as long as device tree overlays are unsupported). I'd prefer to see something based on the entity-manager JSON configuration for the motherboard instead.\n> \n> IIRC the config file came about with the need to support multi-host.  So, the GPIOs are not being named here but the DTS names are being provided to x86-power-control to specify which ones are for the various purposes for each host.  If there is a better way to manage this through the DTS or platform config, I'm happy to move that direction.\n\nCouldn't a naming convention have solved that just as easily?\n\nHOST_1_POWER_BUTTON\nHOST_2_POWER_BUTTON\n\n\nif you don't want to lose backward compatibility, you could even just postfix all of the 2+ hosts with HOST_N and leave the existing definitions alone?"
        },
        {
            "timestamp": 1630579516,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1630579552,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630579564,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/6444/"
        },
        {
            "timestamp": 1630581379,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/6444/ : SUCCESS"
        },
        {
            "timestamp": 1630582254,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 2:\n\nNo intentions to merge this upstream bypassing community opinion. This is just a change for myself, so I could still use this hack patchset with the modern yocto override syntax, until there is no other solution..."
        },
        {
            "timestamp": 1630582665,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 2:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1631514937,
            "reviewer": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "message": "Patch Set 3: Patch Set 2 was rebased"
        },
        {
            "timestamp": 1631514971,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1631514980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3:\n\nBuild Started https://jenkins.openbmc.org/job/ci-openbmc/6638/"
        },
        {
            "timestamp": 1631515671,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-openbmc/6638/ : SUCCESS"
        },
        {
            "timestamp": 1631516952,
            "reviewer": {
                "name": "Jenkins OpenBMC IBM",
                "email": "geissonator+jenkinsibm@gmail.com",
                "username": "jenkins-openbmc-ibm"
            },
            "message": "Patch Set 3:\n\nBuild Successful \n\nIBM Hardware CI : witherspoon hardware tests passed"
        },
        {
            "timestamp": 1631532924,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nI think it is also worth pointing out that JM has a commit that is close to getting merged that enables the GPIOs and polarity to be specified via config file.  I _think_ that resolves the bulk of the issues that are found on AMD systems.  It would be nice if someone who is closer related to ethanolx could take a look at that commit and see how close it is to solving the needs.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/x86-power-control/+/46384"
        },
        {
            "timestamp": 1631540496,
            "reviewer": {
                "name": "Supreeth Venkatesh",
                "email": "supreeth.venkatesh@amd.com",
                "username": "supven01"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> (1 comment)\n> \n> I think it is also worth pointing out that JM has a commit that is close to getting merged that enables the GPIOs and polarity to be specified via config file.  I _think_ that resolves the bulk of the issues that are found on AMD systems.  It would be nice if someone who is closer related to ethanolx could take a look at that commit and see how close it is to solving the needs.\n> \n> https://gerrit.openbmc-project.xyz/c/openbmc/x86-power-control/+/46384\n\nI looked at it and we are getting closer to use x86-power-control for AMD platforms. However, not all the state machine states are used in AMD Platforms. I think we still need configurable option for state machine states."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "d7f186d0ed396b46b3d2e8c96df0e8644d1f439f",
            "parents": [
                "19bfafb997ae74a9df3c2080de6609158ed638d6"
            ],
            "ref": "refs/changes/31/45431/1",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1627658448,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "meta-amd/meta-ethanolx/conf/machine/ethanolx.conf",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Version is not how we should be differentiating different platforms support requirements, as it overloads the meaning of what a \"version\" means."
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_0.1.bb",
                    "line": 6,
                    "reviewer": {
                        "name": "Supreeth Venkatesh",
                        "email": "supreeth.venkatesh@amd.com",
                        "username": "supven01"
                    },
                    "message": "Can we use https://github.com/AMDESE/amd-power-control here?\nNot sure about the guidelines whether OpenBMC permits the usage of the repo from outside OpenBMC tree. Perhaps, Brad or Patrick or Ed can answer. if its not permitted, we can use this patch temporarily but we have to fix the x86-power-control app to be more generic later."
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_0.1.bb",
                    "line": 6,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Considering that's a fork of an existing openbmc repo;  No, we should not be pointing to it in a recipe like this (see #1 here https://github.com/openbmc/docs/blob/master/meta-layer-guidelines.md)\n\nnor should we be checking in patches into meta layers.  If this functionality is desired, work with the maintainers of x86-power-control to get the features added that you need.  If you need help coordinating, or if you believe the maintainers are acting in bad faith (possibly because of competitor company politics) I'm sure Brad, Patrick, or I would be happy to provide a less-biased opinion.\n\nAside from this patch (which doesn't even CC the maintainers of x86-power-control BTW) and a couple emails, I don't see any open attempts at talking to the maintainers of that repo about the features that are needed for ethanol.\n\nSupreeth, is that something you can drive to conclusion on, given that it's your platform that's being supported?  To be clear, I don't much care who pushes the patchset, but I'd like to see discussions going on between the platform owner and the x86-power-control maintainers."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "meta-amd/meta-ethanolx/conf/machine/ethanolx.conf",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_%.bbappend",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_0.1.bb",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "7efca9474917442e158b1a2945ada7fe8c3726e6",
            "parents": [
                "47c21cd2a4b00622dbdc649df731c4738c27bafd"
            ],
            "ref": "refs/changes/31/45431/2",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1630579516,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "meta-amd/meta-ethanolx/conf/machine/ethanolx.conf",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_%.bbappend",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_0.1.bb",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 4
        },
        {
            "number": 3,
            "revision": "65ba683e7565ffaef36fda9bba1cc0bfcd62aa3e",
            "parents": [
                "cffcaa7ab580855b658fdd2509db166263821ea5"
            ],
            "ref": "refs/changes/31/45431/3",
            "uploader": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "createdOn": 1631514937,
            "author": {
                "name": "Konstantin Aladyshev",
                "email": "aladyshev22@gmail.com",
                "username": "Kostr"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_0.1.bb",
                    "line": 23,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Since the primary problem is these SYSTEMD_SERVICE files you should be able to further use override syntax to change back to this set.\n\nIn the original bbappend file add:\n\nSYSTEMD_SERVICE:${PN}:ethanolx = \"... the three you have here ...\"\n\nThis should override the original SYSTEMD_SERVICE:${PN} files that are in the x86-power-control_git.bb file."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "meta-amd/meta-ethanolx/conf/machine/ethanolx.conf",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_%.bbappend",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "meta-amd/meta-ethanolx/recipes-x86/chassis/x86-power-control_0.1.bb",
                    "type": "ADDED",
                    "insertions": 32,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 34,
            "sizeDeletions": 4
        }
    ]
}