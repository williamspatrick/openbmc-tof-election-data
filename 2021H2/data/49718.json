{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I3198657b593d19f3b29b5789d4e4a5260c96d7c6",
    "number": 49718,
    "subject": "Code clean up.",
    "owner": {
        "name": "Arun Lal K M",
        "email": "arun.lal@intel.com",
        "username": "arunlalkm-intel"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/49718",
    "commitMessage": "Code clean up.\n\n1) Abstracted few set functions in IpmbSensor\n2) Optimised IpmbSensor::read() function, by avoiding switch case.\n3) Added explanation for few magic numbers used in command.\n\nTested:\nBy giving command 'ipmitool sdr elist' and checking if sensor\nvalues are populated correctly.\n\nSigned-off-by: Arun Lal K M <arun.lal@intel.com>\nChange-Id: I3198657b593d19f3b29b5789d4e4a5260c96d7c6\n",
    "createdOn": 1639569711,
    "lastUpdated": 1639763883,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1639569711,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1639569722,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639569777,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/32092/ : FAILURE"
        },
        {
            "timestamp": 1639575547,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1639575558,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639575713,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/32099/ : SUCCESS"
        },
        {
            "timestamp": 1639589113,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(6 comments)"
        },
        {
            "timestamp": 1639590028,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\nThere's some great cleanups here, and only a couple that I take some minor issues with.  Lets get those figured out and this will be a great thing to have on master."
        },
        {
            "timestamp": 1639632504,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1639675196,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1639727547,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 2:\n\n(5 comments)"
        },
        {
            "timestamp": 1639763883,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "6ac188e81f0dcf65324d0e7e587ca5c511f34b67",
            "parents": [
                "09d291a748fd65903ca3fca2f052631ba0d94fe8"
            ],
            "ref": "refs/changes/18/49718/1",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1639569711,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -10
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 286,
                    "deletions": -175
                }
            ],
            "sizeInsertions": 326,
            "sizeDeletions": 185
        },
        {
            "number": 2,
            "revision": "15b90d66ec583198e54d1d83902a0408b549de0f",
            "parents": [
                "09d291a748fd65903ca3fca2f052631ba0d94fe8"
            ],
            "ref": "refs/changes/18/49718/2",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1639575547,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Andrew Jeffery",
                        "email": "andrew@aj.id.au",
                        "username": "amboar"
                    },
                    "message": "Can this instead be three separate commits? These descriptions would make a nice subject line for the respective patches. \"Code clean up.\" isn't terribly expressive."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 11,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Will split into 3 separate commits."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 332,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We're no longer logging these?  Might be fine, but you should've mentioned it in your commit message."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Aren't these items redundant?  Do we have any PMBUS devices that don't support PEC?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "I am not sure about devices which does not support PEC. \nBut from code perspective I have observed that all calls to getRawPmbusCommand uses same value for doEnablePec. \n\nSo we can remove this argument. \nWill address this."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 199,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If we don't need support for it yet, there's no need to have a parmaeter.  Once we have a device that needs either of these, we can add them back.  Doing it in this order makes it more clear why that support exists, and eliminates dead code from upstream."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 425,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'm not quite following why this needs to have a \"set\" method.  Also, the inline lambdas have no captures, so ideally they should be normal methods, not lambdas.\n\nIn terms of cleanups, I personally think the old version was easier to read.  If any cleanups needed done, ideally we'd do something like \n\n\nbool processByte0Reading(const std::vector<uint8_t>& data, double& resp){\n            if (command == ipmi::sensor::getSensorReading &&\n                !ipmi::sensor::isValid(data))\n            {\n                return false;\n            }\n            resp = data[0];\n            return true;\n}\n\nbool IpmbSensor::processReading(const std::vector<uint8_t>& data, double& resp)\n{\n\n    switch (readingFormat)\n    {\n        case (ReadingFormat::byte0):\n        {\n            return processByte0Reading(data, resp);\n        }\n.......\n\n\nThis has the advantage of not having to store or set a std::function, which doesn't need checked against null, and should optimize better."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 425,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "processReading (old code) was called from read function for every read cycle, which means the switch case is performed for all read operation. \n\nsetReadFunction is only called once per sensor during init.\nAnd from read function we use the pre initialized function pointer to access the correct decoding method. \n\nFor readability of the code, I can define functions like \"processByte0Reading\" (as per your comment) and assign that to function pointer instead of using lambda function."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 522,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why was this moved?  The old location is closer to where it was used, so it seems like the old one was better?"
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 522,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Will bring it back to old location."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 551,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Possible nullptr defreference."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 551,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Will address this."
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "line": 657,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This section has some great cleanups."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "include/IpmbSensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -10
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 282,
                    "deletions": -172
                }
            ],
            "sizeInsertions": 322,
            "sizeDeletions": 182
        }
    ]
}