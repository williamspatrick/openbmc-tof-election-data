{
    "project": "openbmc/phosphor-dbus-interfaces",
    "branch": "master",
    "id": "Ied2810fde428e935915d43e4661a6be2443630af",
    "number": 47180,
    "subject": "bmc-usb: property to track usb state",
    "owner": {
        "name": "Bruce Mitchell",
        "email": "bruce.mitchell@linux.vnet.ibm.com",
        "username": "BMC-Bruce"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/47180",
    "commitMessage": "bmc-usb: property to track usb state\n\nThis adds CurrentUSBState, UsbEnabled, and UsbDisabled.\n\nWhy do this is for security reasons, look here:\nD-Bus service: disable BMC-attached USB ports #1793\nhttps://github.com/ibm-openbmc/dev/issues/1793\n\nTested: On QEMU and Rainier provides yaml updates to allow obmcutil\nto have usbstate, usbenable, and usbdisable.\n\nSigned-off-by: Bruce Mitchell <bruce.mitchell@linux.vnet.ibm.com>\nChange-Id: Ied2810fde428e935915d43e4661a6be2443630af\n",
    "createdOn": 1632454661,
    "lastUpdated": 1636401523,
    "open": false,
    "status": "ABANDONED",
    "comments": [
        {
            "timestamp": 1632454661,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1632454684,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1632455089,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/26894/ : SUCCESS"
        },
        {
            "timestamp": 1632489804,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1632491274,
            "reviewer": {
                "name": "Edward A. James",
                "email": "eajames@us.ibm.com",
                "username": "eddiejames"
            },
            "message": "Patch Set 1:\n\nI'm sure you thought about it, but what about creating a separate USB interface, rather than tacking on USB state to the BMC interface?"
        },
        {
            "timestamp": 1632491537,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> I'm sure you thought about it, but what about creating a separate USB interface, rather than tacking on USB state to the BMC interface?\n\nI Slacked @joseph-reynolds and we came to agreement we will Enable or Disable all the BMC's USB ports as one operation;\nso there is no different then between Rainier and Everest. Also the default is Enabled, the intent of Disabled is really just for\nthe customers that really want the BMC's USB ports Disabled."
        },
        {
            "timestamp": 1632491818,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 1:\n\n(6 comments)"
        },
        {
            "timestamp": 1632493283,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1632493678,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1632493777,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Uploaded patch set 3: Commit message was updated."
        },
        {
            "timestamp": 1632493817,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1632702249,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > I'm sure you thought about it, but what about creating a separate USB interface, rather than tacking on USB state to the BMC interface?\n> \n> I Slacked @joseph-reynolds and we came to agreement we will Enable or Disable all the BMC's USB ports as one operation;\n> so there is no different then between Rainier and Everest. Also the default is Enabled, the intent of Disabled is really just for\n> the customers that really want the BMC's USB ports Disabled.\n\nAfter that agreement, I talked to some others, then created https://github.com/ibm-openbmc/dev/issues/3342 to address this issue"
        },
        {
            "timestamp": 1632750907,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n> After that agreement, I talked to some others, then created https://github.com/ibm-openbmc/dev/issues/3342 to address this issue\n\nNevermind that comment.  I confused USB and SSH disablement.\n\nFor IBM's use case, we want the USB port enablement to be tied together, so all ports are either enabled or all are disabled.\nDisambiguation: This is for controlling the BMC USBs, not host USBs.\n\nI believe Redfish intends to be able to control each USB port independently, and will have a way to tie their enablement together to handle use cases and implementations.\n\nSee:\nhttps://redfishforum.com/thread/419/modelling-different-types-redfish-schema\nhttps://redfishforum.com/thread/111/where-model-usb-ports"
        },
        {
            "timestamp": 1632757936,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3: Code-Review-1\n\nThanks Joseph for the additional information.\n\n> For IBM's use case, we want the USB port enablement to be tied together, so all ports are either enabled or all are disabled.\n> Disambiguation: This is for controlling the BMC USBs, not host USBs.\n> \n> I believe Redfish intends to be able to control each USB port independently, and will have a way to tie their enablement together to handle use cases and implementations.\n\nI don't think this is as simple as you might expect it to be.\n\nAttempting to disable all BMC USB ports is not particularly useful generally speaking.  I think we really need to model this at a dbus level as individual usb ports even if you want to disable them all for your own features.  \n\nMost Intel systems have a USB connection between the BMC and the Host via the PCH and if you disable this, you will fundamentally break some handling on the machine.  We, at a minimum, need a way to keep those USB ports running while disabling any externally facing USB ports.  But, I don't think the Aspeed even has a concept of \"externally facing\" vs \"internally facing\" USB ports, as I suspect it is a matter of schematic alignment between the Aspeed chip and the PCH.\n\nWhat is the value, to a customer, of \"disabling a USB port\" and what does that even look like?  Does that mean power is disable to the USB port?  Does that mean that the USB controller in hardware is disabled?  Does that mean that the kernel doesn't load the USB driver for the controller on that port?  Does it mean the kernel refuses to probe end-points and/or load drivers for them?  Does it mean that the kernel prohibits certain soft-function, like auto-mounting USB flash devices?  \"Disabling a USB port\" is, to me, ambiguous without definition of the intention.\n\nSince Joseph is involved here, I suspect there is some security reason driving this feature.  Depending on how the previous paragraph is answered there are different implementations and attack vectors you might be solving for.  I think those should be documented.\n\n\nI don't want to see this attached to the BMC dbus interface (Eddie asked the same).  Even though it might solve Joseph's immediate request, it isn't a particularly good way of modeling this.  If we went this way in general we'd end up with tons of state attached to the BMC interface.\n\nI suggest looking at xyz/openbmc_project/Control/Service/Attributes.  Is there a reason that the USB function(s) cannot be modeled like other software \"Services\" which use this existing interface?"
        },
        {
            "timestamp": 1632766876,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3: Code-Review-1\n> \n> Thanks Joseph for the additional information.\n> \n> > For IBM's use case, we want the USB port enablement to be tied together, so all ports are either enabled or all are disabled.\n> > Disambiguation: This is for controlling the BMC USBs, not host USBs.\n> > \n> > I believe Redfish intends to be able to control each USB port independently, and will have a way to tie their enablement together to handle use cases and implementations.\n> \n> I don't think this is as simple as you might expect it to be.\n> \n> Attempting to disable all BMC USB ports is not particularly useful generally speaking.  I think we really need to model this at a dbus level as individual usb ports even if you want to disable them all for your own features.  \n> \n> Most Intel systems have a USB connection between the BMC and the Host via the PCH and if you disable this, you will fundamentally break some handling on the machine.  We, at a minimum, need a way to keep those USB ports running while disabling any externally facing USB ports.  But, I don't think the Aspeed even has a concept of \"externally facing\" vs \"internally facing\" USB ports, as I suspect it is a matter of schematic alignment between the Aspeed chip and the PCH.\n> \n> What is the value, to a customer, of \"disabling a USB port\" and what does that even look like?  Does that mean power is disable to the USB port?  Does that mean that the USB controller in hardware is disabled?  Does that mean that the kernel doesn't load the USB driver for the controller on that port?  Does it mean the kernel refuses to probe end-points and/or load drivers for them?  Does it mean that the kernel prohibits certain soft-function, like auto-mounting USB flash devices?  \"Disabling a USB port\" is, to me, ambiguous without definition of the intention.\n> \n> Since Joseph is involved here, I suspect there is some security reason driving this feature.  Depending on how the previous paragraph is answered there are different implementations and attack vectors you might be solving for.  I think those should be documented.\n> \n> \n> I don't want to see this attached to the BMC dbus interface (Eddie asked the same).  Even though it might solve Joseph's immediate request, it isn't a particularly good way of modeling this.  If we went this way in general we'd end up with tons of state attached to the BMC interface.\n> \n> I suggest looking at xyz/openbmc_project/Control/Service/Attributes.  Is there a reason that the USB function(s) cannot be modeled like other software \"Services\" which use this existing interface?\n\nPlease see this story: https://github.com/ibm-openbmc/dev/issues/1793"
        },
        {
            "timestamp": 1632767767,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> Please see this story: https://github.com/ibm-openbmc/dev/issues/1793\n\nA link to an external bug tracker, controlled by your company, is not really sufficient documentation.  I understand your team feels you have this as an internal requirement; we still need to come to consensus on what this looks like at a community level.  I don\u2019t see any real answers to the questions I asked in this linked-to issue.  I still see vague words like \u201cdisable\u201d.  What/how are we disabling?  \n\nThe only answer related to security I see is \u201cif there were a hypothetical bug in the USB driver\u2026\u201d which to be frank is just as good a justification as a bug anywhere else in the code-base.  There have been real bugs in other hardware access points, such as the LPC end-point, but that doesn\u2019t mean we proactively code methods to disable every hardware entry point."
        },
        {
            "timestamp": 1632767897,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3: Code-Review-1\n> \n> Thanks Joseph for the additional information.\n> \n> > For IBM's use case, we want the USB port enablement to be tied together, so all ports are either enabled or all are disabled.\n> > Disambiguation: This is for controlling the BMC USBs, not host USBs.\n> > \n> > I believe Redfish intends to be able to control each USB port independently, and will have a way to tie their enablement together to handle use cases and implementations.\n> \n> I don't think this is as simple as you might expect it to be.\n> \n> Attempting to disable all BMC USB ports is not particularly useful generally speaking.  I think we really need to model this at a dbus level as individual usb ports even if you want to disable them all for your own features.  \n> \n> Most Intel systems have a USB connection between the BMC and the Host via the PCH and if you disable this, you will fundamentally break some handling on the machine.  We, at a minimum, need a way to keep those USB ports running while disabling any externally facing USB ports.  But, I don't think the Aspeed even has a concept of \"externally facing\" vs \"internally facing\" USB ports, as I suspect it is a matter of schematic alignment between the Aspeed chip and the PCH.\n> \n> What is the value, to a customer, of \"disabling a USB port\" and what does that even look like?  Does that mean power is disable to the USB port?  Does that mean that the USB controller in hardware is disabled?  Does that mean that the kernel doesn't load the USB driver for the controller on that port?  Does it mean the kernel refuses to probe end-points and/or load drivers for them?  Does it mean that the kernel prohibits certain soft-function, like auto-mounting USB flash devices?  \"Disabling a USB port\" is, to me, ambiguous without definition of the intention.\n> \n> Since Joseph is involved here, I suspect there is some security reason driving this feature.  Depending on how the previous paragraph is answered there are different implementations and attack vectors you might be solving for.  I think those should be documented.\n> \n> \n> I don't want to see this attached to the BMC dbus interface (Eddie asked the same).  Even though it might solve Joseph's immediate request, it isn't a particularly good way of modeling this.  If we went this way in general we'd end up with tons of state attached to the BMC interface.\n> \n> I suggest looking at xyz/openbmc_project/Control/Service/Attributes.  Is there a reason that the USB function(s) cannot be modeled like other software \"Services\" which use this existing interface?\n\nAlso it does require common sense to not use this security feature if not needed."
        },
        {
            "timestamp": 1632772662,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\nI assume this:\n\n> Also it does require common sense to not use this security feature if not needed.\n\nIs in reference to this?\n\n> > Most Intel systems have a USB connection between the BMC and the Host via the PCH and if you disable this, you will fundamentally break some handling on the machine.  We, at a minimum, need a way to keep those USB ports running while disabling any externally facing USB ports.  But, I don't think the Aspeed even has a concept of \"externally facing\" vs \"internally facing\" USB ports, as I suspect it is a matter of schematic alignment between the Aspeed chip and the PCH.\n\nHow would an end user know that enabling a \"security feature\" would break the functionality of their machine?  I'd be pretty annoyed if there was a WebUI to disable BMC USB ports, which probably don't want to use, and it makes it so my system no longer boots.\n\nI hope you're expecting (and enabling) the system maintainer to disable this feature permanently in some configuration, but even that seems likely error prone.  Basically this becomes an IBM-only feature?  Why are we even bothering to put this anywhere except `com.ibm` then?  (And I'm not saying that is the right thing to do.  There just needs to be a lot of improvement to the proposed object model here.)"
        },
        {
            "timestamp": 1632837438,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n>  I still see vague words like \u201cdisable\u201d.  What/how are we disabling?  \n\nI don't have the technical background to answer.  I assume a disabled USB port would not respond to any signals from a device plugged into it.  Can someone with USB background help?\nI don't how to accomplish this, for example, if this means removing the USB driver, or reconfiguring the driver or a USB controller to not respond to a USB port."
        },
        {
            "timestamp": 1632838661,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n> A link to an external bug tracker, controlled by your company, is not really sufficient documentation.\n>> \u201cif there were a hypothetical bug in the USB driver\u2026\u201d\n\nI agree this commit should re-state the requirement or point to an approved design doc.\n\nI don't believe the requirement to have an admin-controlled function to disable USB ports needs its own design document.  The general concept is to remove or disable interfaces which are not needed, to reduce the attack surface.  Specifically, a BMC system integrator can remove an interface so it is not present in the firmware image.  Or that system integrator can add a function to allow a BMC admin to enable and disable an interface.  IBM needs a function to allow a BMC admin to enable and disable the USB interface.  I assumed this requirement would be clear.\n\nWhy is it needed?  Some users require the USB ports to be disabled to comply with their internal security requirements.  I don't have any external specs to reference here.  Also, some existing IBM systems have a function to disable BMC USB ports, and we need systems built on OpenBMC to match that function.  Finally, some customers are asking for this feature due to recent news reports of zero-day USB attacks."
        },
        {
            "timestamp": 1632838934,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> >  I still see vague words like \u201cdisable\u201d.  What/how are we disabling?  \n> \n> I don't have the technical background to answer.  I assume a disabled USB port would not respond to any signals from a device plugged into it.  Can someone with USB background help?\n> I don't how to accomplish this, for example, if this means removing the USB driver, or reconfiguring the driver or a USB controller to not respond to a USB port.\n\nSeems like that this \"feature\" (for the lack of a better word) has trickled down\nfrom Redfish: USB Port Enable / Disable #1781 https://github.com/ibm-openbmc/dev/issues/1781\n(again from IBM) which also has the same vague (as I perceive it) verbiage,\nI believe there is a bigger issue than just this Gerrit review to be addressed."
        },
        {
            "timestamp": 1632844170,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n> I don't have the technical background to answer.  I assume a disabled USB port would not respond to any signals from a device plugged into it.  Can someone with USB background help?\n> I don't how to accomplish this, for example, if this means removing the USB driver, or reconfiguring the driver or a USB controller to not respond to a USB port.\n\nIf we can\u2019t define to what extent the USB is \u201cdisabled\u201d how do you know you\u2019ve accomplished anything beyond theater.  We could just make a web UI button to \u201cdisable the USB\u201d and it might have the same effect, depending on how we have the kernel and udev configured."
        },
        {
            "timestamp": 1632844666,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 3:\n\n> Finally, some customers are asking for this feature due to recent news reports of zero-day USB attacks.\n\nThe \u201czero-day USB attacks\u201d I know of are related to Windows and auto-play, not a fundamental breakage of the USB subsystem.  Hopefully we don\u2019t have USB keys set to auto-mount as-is, but we especially better not allow execute out of them.  That alone would protect the BMC far beyond what Windows does by default.  Again, I don\u2019t know what you really need done here, but it might be as simple as a setting to disable mounting of USB file systems?  \n\nOn the other extreme of \u201cdisable\u201d, you could be looking to entirely disable all power and signals to the port.  Someone could probably construct a malicious USB key that fries ports by drawing or dumping too much current down various pins, using some capacitors, a few relays, and a Arduino.  Maybe your customers are wanting to harden the server against that kind of damage.  I don\u2019t know.\n\nThis is why I ask what you want out of a \u201cdisable\u201d and what you\u2019re trying to accomplish."
        },
        {
            "timestamp": 1632844904,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> > Finally, some customers are asking for this feature due to recent news reports of zero-day USB attacks.\n> \n> The \u201czero-day USB attacks\u201d I know of are related to Windows and auto-play, not a fundamental breakage of the USB subsystem.  Hopefully we don\u2019t have USB keys set to auto-mount as-is, but we especially better not allow execute out of them.  That alone would protect the BMC far beyond what Windows does by default.  Again, I don\u2019t know what you really need done here, but it might be as simple as a setting to disable mounting of USB file systems?  \n> \n> On the other extreme of \u201cdisable\u201d, you could be looking to entirely disable all power and signals to the port.  Someone could probably construct a malicious USB key that fries ports by drawing or dumping too much current down various pins, using some capacitors, a few relays, and a Arduino.  Maybe your customers are wanting to harden the server against that kind of damage.  I don\u2019t know.\n> \n> This is why I ask what you want out of a \u201cdisable\u201d and what you\u2019re trying to accomplish.\n\nPatrick you are making good points here, and thank you for you feedback (and please continue)."
        },
        {
            "timestamp": 1632858829,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n> This is why I ask what you want out of a \u201cdisable\u201d and what you\u2019re trying to accomplish.\n\nThanks for asking!  I've asked our chief engineers and will post their answer here.  Meanwhile, I've added this to the OpenBMC security working group agenda for Wednesday Sep 29.  See https://docs.google.com/document/d/1b7x9BaxsfcukQDqbvZsU2ehMq4xoJRQvLxxsDUWmAOI"
        },
        {
            "timestamp": 1632929602,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> The only answer related to security I see is \u201cif there were a hypothetical bug in the USB driver\u2026\u201d which to be frank is just as good a justification as a bug anywhere else in the code-base.  There have been real bugs in other hardware access points, such as the LPC end-point, but that doesn\u2019t mean we proactively code methods to disable every hardware entry point.\n\nThere have been several use-after-free bugs fixed in USB drivers.  While many of the ones in this listing may not be likely in the bmc environment, the ACM driver is getting close to possible use cases (the communication gadget is useful to implement Redfish Host Interface Specification DSP0270):\n\nhttps://seclists.org/oss-sec/2019/q4/115"
        },
        {
            "timestamp": 1633484535,
            "reviewer": {
                "name": "Joel Stanley",
                "email": "joel@jms.id.au",
                "username": "shenki"
            },
            "message": "Patch Set 3:\n\nThe requirement is to enable/disable a firmware update from a USB storage when a device is plugged in.\n\nI see it being implemented as enabling/disabling the application that would mount the filesystem on the removable device.\n\nThis is slightly different to what you asked for in your first comment Patrick. If we re-framed it as a setting that configures the \"USB firmware update\" option, would that be acceptable?"
        },
        {
            "timestamp": 1633529999,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 3:\n\n> Patch Set 3:\n> \n> The requirement is to enable/disable a firmware update from a USB storage when a device is plugged in.\n> \n> I see it being implemented as enabling/disabling the application that would mount the filesystem on the removable device.\n> \n> This is slightly different to what you asked for in your first comment Patrick. If we re-framed it as a setting that configures the \"USB firmware update\" option, would that be acceptable?\n\nJoseph?  The \"requirement came from you\"."
        },
        {
            "timestamp": 1636401523,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Abandoned\n\nBeing handle differently."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "55b9e300d52a22ccb8cb197825389b9cde3cf327",
            "parents": [
                "3a665b28dcc0d9f6926a1f5eb20bc0d9d768418d"
            ],
            "ref": "refs/changes/80/47180/1",
            "uploader": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "createdOn": 1632454661,
            "author": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 0,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I'm not seeing a \"Why\" in this commit message. Was there a mailing list or design doc for reference? Why would anyone ever want to disable the USB port? Security reasons I assume?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 0,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 0,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "So add this as the \"Why\"?\nD-Bus service: disable BMC-attached USB ports #1793\nhttps://github.com/ibm-openbmc/dev/issues/1793"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 0,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "nit: this isn't providing a D-Bus service. It's defining a new USB state property. So maybe something more like \"bmc-usb: property to track usb state\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Please be sure to have a line feed between these two lines"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Yeah, cut-n-paste between systems failed me."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 8,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "I don't think a tested is really needed for PDI commits since it's just an interface definition but this statement doesn't make much sense to me. Maybe just show the \"busctl\" command you ran and the output if you want this section? I don't think we're going to want a obmcutil option for this. In general we just point people to the external interface (i.e. Redfish) or just ask them to use busctl for testing/debug."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 10,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "Ack"
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Do we only allow users to control the state of all USB ports as a group or do they have individual access to each USB port? Current we only have one instance of /xyz/openbmc_project/state/bmc0 created."
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "line": 19,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "I Slacked @joseph-reynolds and we came to agreement we will Enable or Disable all the BMC's USB ports as one operation;\nso there is no different then between Rainier and Everest. Also the default is Enabled, the intent of Disabled is really just for\nthe customers that really want the BMC's USB ports Disabled."
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "line": 50,
                    "reviewer": {
                        "name": "Andrew Geissler",
                        "email": "geissonator@yahoo.com",
                        "username": "geissonator"
                    },
                    "message": "Is there going to be a \"RequestedUSBState\" to utilize these? Please create a separate USBTransition for these."
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "line": 50,
                    "reviewer": {
                        "name": "Bruce Mitchell",
                        "email": "bruce.mitchell@linux.vnet.ibm.com",
                        "username": "BMC-Bruce"
                    },
                    "message": "This is the BMC's USB ports is why I had it under BMC, I believe you are saying that is incorrect to have it under BMC."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 14,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "eb46ffd2f4050b0d586103b5a06dbe154ca42bc4",
            "parents": [
                "3a665b28dcc0d9f6926a1f5eb20bc0d9d768418d"
            ],
            "ref": "refs/changes/80/47180/2",
            "uploader": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "createdOn": 1632493678,
            "author": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "424a09934a3ed6b5cf1d6c1f323a185ddd07ed81",
            "parents": [
                "3a665b28dcc0d9f6926a1f5eb20bc0d9d768418d"
            ],
            "ref": "refs/changes/80/47180/3",
            "uploader": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "createdOn": 1632493777,
            "author": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "yaml/xyz/openbmc_project/State/BMC.interface.yaml",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 22,
            "sizeDeletions": 0
        }
    ]
}