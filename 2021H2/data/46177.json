{
    "project": "openbmc/intel-ipmi-oem",
    "branch": "master",
    "id": "Iefb83247278bfc58af209dad252f01c4bf01f2f4",
    "number": 46177,
    "subject": "Kloxwork Issue : NULL check after EVP_MD_CTX_new",
    "owner": {
        "name": "Arun Lal K M",
        "email": "arun.lal@intel.com",
        "username": "arunlalkm-intel"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/46177",
    "commitMessage": "Kloxwork Issue : NULL check after EVP_MD_CTX_new\n\nEVP_MD_CTX_new could return NULL.\nThis Commit adds a NULL check to avoid NULL pointer dereferencing.\n\nTested:\nBy performing firmware update using following steps.\n\n1. Generate fw update random number\n ipmitool raw 0x08 0x26\n\n2. Enter fw update mode\n ipmitool raw 0x08 0x27 0xa8 0xa8 0x32 0x49 0x0a 0x28 0xef 0x40\n\n3. Start Image transfer\n ipmitool raw 0x08 0x29 0x01\n\n4. Set Firmware update options\n ipmitool raw 0x08 0x2B 0x04 0x04 0xe3 0xb0 0xc4 0x42 0x98 0xfc 0x1c\n0x14 0x9a 0xfb 0xf4 0xc8 0x99 0x6f 0xb9 0x24 0x27 0xae 0x41 0xe4 0x64\n0x9b 0x93 0x4c 0xa4 0x95 0x99 0x1b 0x78 0x52 0xb8 0x55\n\n5. Set file name (file:///tmp/BMC.Bin)\n ipmitool raw 0x08 0x29 0x04 0x13 0x66 0x69 0x6c 0x65 0x3a 0x2f 0x2f\n0x2f 0x74 0x6d 0x70 0x2f 0x42 0x4d 0x43 0x2e 0x42 0x69 0x6e\n\n6. End Image transfer\n ipmitool raw 0x08 0x29 0x02\n\n7. Exit fw-update mode\n ipmitool raw 0x08 0x28\n\nSigned-off-by: Arun Lal K M <arun.lal@intel.com>\nChange-Id: Iefb83247278bfc58af209dad252f01c4bf01f2f4\n",
    "createdOn": 1629910530,
    "lastUpdated": 1630700022,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1629910530,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1629910554,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1629910822,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25043/ : SUCCESS"
        },
        {
            "timestamp": 1629931743,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 1:\n\n(4 comments)"
        },
        {
            "timestamp": 1630338338,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1630338351,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630338394,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1630338621,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25323/ : SUCCESS"
        },
        {
            "timestamp": 1630339180,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1630339680,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1630340560,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1630340795,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1630344238,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1630344251,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630344522,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25339/ : SUCCESS"
        },
        {
            "timestamp": 1630351479,
            "reviewer": {
                "name": "Suryakanth Sekar",
                "email": "suryakanth.sekar@linux.intel.com",
                "username": "htnakayrus"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1630351519,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 3: Code-Review+1"
        },
        {
            "timestamp": 1630382670,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 3: Code-Review+2\n\n(2 comments)\n\nTwo clarification needed but those can be clarified/loaded as separate patch. So going ahead with +2."
        },
        {
            "timestamp": 1630383038,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1630385043,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 3: -Code-Review\n\n(1 comment)"
        },
        {
            "timestamp": 1630391935,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1630392101,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1630393806,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1630464221,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1630687581,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1630687599,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630687714,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1630687798,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/25698/ : FAILURE"
        },
        {
            "timestamp": 1630688260,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 5: Patch Set 4 was rebased"
        },
        {
            "timestamp": 1630688273,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630688622,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25700/ : SUCCESS"
        },
        {
            "timestamp": 1630690338,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1630696780,
            "reviewer": {
                "name": "P Dheeraj Srujan Kumar",
                "email": "p.dheeraj.srujan.kumar@intel.com",
                "username": "dheerajpdsk"
            },
            "message": "Patch Set 5: Code-Review+1"
        },
        {
            "timestamp": 1630697520,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 6: Patch Set 5 was rebased"
        },
        {
            "timestamp": 1630697544,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1630697811,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/25709/ : SUCCESS"
        },
        {
            "timestamp": 1630700019,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 6: Code-Review+2"
        },
        {
            "timestamp": 1630700022,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Change has been successfully merged by Vernon Mauery"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "52849ef9d403ee9a36a03d314c74fa173740dddd",
            "parents": [
                "36ed8d24722e26271c395c8149d2c9fd68479087"
            ],
            "ref": "refs/changes/77/46177/1",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1629910530,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/firmware-update.cpp",
                    "line": 218,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I understand that Klocwork did not catch this, but if we are to be pedantic here, we should be checking the return value of every function.\n\n// top level\nstatic constexpr int openSslSuccess = 1;\n\n// here\nreturn (EVP_DigestInit(ctx, EVP_sha256()) == openSslSuccess);"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 218,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 218,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Yes Agree with Vernon, We need to check for return code here above code. \n\nNote: When its returns failure(0), Don't forget to free/destroy the ctx using EVP_MD_CTX_free(ctx).\n\nif(!EVP_DigestInit(ctx, EVP_sha256()))\n{\n    EVP_MD_CTX_free(ctx);\n    return false;\n}"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 218,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "same comment as above"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 228,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "same comment"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "if (EVP_DigestFinal(...) != openSslSuccess)\n{\n    return HashChcek::sha2Failed;\n}"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 260,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "same as above, If it fails free the free the ctx using EVP_MD_CTX_free(ctx), before return."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 260,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/firmware-update.cpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -4
                }
            ],
            "sizeInsertions": 27,
            "sizeDeletions": 4
        },
        {
            "number": 2,
            "revision": "08aba1616511ca5c24a88654bfb1e014f389e976",
            "parents": [
                "5cb2c045856ebaef15fe7da714deb1266c13b901"
            ],
            "ref": "refs/changes/77/46177/2",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1630338338,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/firmware-update.cpp",
                    "line": 223,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "As mentioned in patch set 1, You need to free the ctx if it return failure.\nif (!EVP_DigestInit(ctx, EVP_sha256()))\n{\n    EVP_MD_CTX_free(ctx);\n    return false;\n}"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 237,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Same as above, In other places too."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 773,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "transferImageFromUsb(...) returning int, But mapping it to bool. Change return type of transferImageFromUsb() if its used only here. Or leave the previous code( transferImageFromUsb() Returns more specific error code. Consumer can use the way they want(success/failure))"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 773,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "transferImageFromUsb was suppose to be bool. I had modified the function (transferImageFromUsb) for same. But missed the part of making it bool. Will change it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/firmware-update.cpp",
                    "type": "MODIFIED",
                    "insertions": 80,
                    "deletions": -25
                }
            ],
            "sizeInsertions": 80,
            "sizeDeletions": 25
        },
        {
            "number": 3,
            "revision": "12574bfd077af0048194bdad2ffeb22a9c26c420",
            "parents": [
                "5cb2c045856ebaef15fe7da714deb1266c13b901"
            ],
            "ref": "refs/changes/77/46177/3",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1630344238,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/firmware-update.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Saravanan Palanisamy",
                        "email": "saravanan.palanisamy@linux.intel.com",
                        "username": "saravanan-palanisamy"
                    },
                    "message": "Wouldn't this to be moved to line number 240 ? i.e.) only after EVP_DigestUpdate() successful."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Good catch, This should be after EVP_DigestUpdate() call."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "The original code flow was making started = true irrespective of EVP_DigestUpdate == openSslSuccess, that is why I have kept the same flow. If this needs to be moved to line 240, should I force started = false in case of failure (in case started was = true at line 231)?"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "clear() function in line number 246 uses if(started) to perform the clean up. So making started = false might be an issue. Also clear() is called when we start image transfer. And object of this class is created in ipmiSetFirmwareUpdateOptions() and since it is a global shared pointer when we call make_shared the old object, if any, is destroyed. So if ipmiGetSetFirmwareUpdateControl()->imageTransferStart is called before ipmiSetFirmwareUpdateOptions(), clear() is called before we destroy the object and create a fresh one."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 234,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 239,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "This case also you need to go for clean up ctx right? Why its not done here? Is caller of this hash(), doing cleanup up on failure? Please confirm."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "hash function does not call EVP_MD_CTX_create(), that is why we are not calling EVP_MD_CTX_destroy(ctx) in hash function. In all the functions where EVP_MD_CTX_create() is called we are calling EVP_MD_CTX_destroy(ctx) on failure. EVP_MD_CTX_destroy(ctx) is also called from destructor, making sure ctx won't leak memory."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Really, we should probably move to EVP_MD_CTX_new/EVP_MD_CTX_free, which is part of the 1.1.1 API rather than the now deprecated EVP_MD_CTX_create/EVP_MD_CTX_destroy. I am not sure how this even still works....\n\nAnother thought, which I have used elsewhere is to create a shared_ptr or unique_ptr (depending on the ownership requirements) that uses a custom type destructor as part of the ptr constructor.\n\nSomething like this:\nstd::unique_ptr<EVP_MD_CTX> ctx(EVP_MD_CTX_new(), EVP_MD_CTX_free);\n\nThen, the smart pointer does all the counting and cleanup for you."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 239,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 282,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Same as above, Cleanup required here."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 282,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "HashCheck function does not call EVP_MD_CTX_create(), that is why we are not calling EVP_MD_CTX_destroy(ctx) in HashCheck function. In all the functions where EVP_MD_CTX_create() is called we are calling EVP_MD_CTX_destroy(ctx) on failure. EVP_MD_CTX_destroy(ctx) is also called from destructor, making sure ctx won't leak memory."
                },
                {
                    "file": "src/firmware-update.cpp",
                    "line": 739,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "sysret is unused"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 49,
                    "deletions": 0
                },
                {
                    "file": "src/firmware-update.cpp",
                    "type": "MODIFIED",
                    "insertions": 85,
                    "deletions": -26
                }
            ],
            "sizeInsertions": 85,
            "sizeDeletions": 26
        },
        {
            "number": 4,
            "revision": "3238374ad2b1abf62ab4b41c13626216f1445c5e",
            "parents": [
                "d065702bc3533fe7334b6fc08eddcb30b7295353"
            ],
            "ref": "refs/changes/77/46177/4",
            "uploader": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "createdOn": 1630687581,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/firmware-update.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -57
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 57
        },
        {
            "number": 5,
            "revision": "85785286b091546df67955a21f0aa7417bd31fc3",
            "parents": [
                "625326c64584b6480378611eb254471f318622c5"
            ],
            "ref": "refs/changes/77/46177/5",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1630688260,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/firmware-update.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -57
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 57
        },
        {
            "number": 6,
            "revision": "153d4c14af30e579ddc7fa3489ffe382b1a3f9ce",
            "parents": [
                "3b3d29b156ac03b8fbd56e8c6b45cc0f607a723a"
            ],
            "ref": "refs/changes/77/46177/6",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1630697520,
            "author": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 40,
                    "deletions": 0
                },
                {
                    "file": "src/firmware-update.cpp",
                    "type": "MODIFIED",
                    "insertions": 91,
                    "deletions": -57
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 57
        }
    ]
}