{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Idb6e47f75504d097efe51f80b173c0d95cde872f",
    "number": 45395,
    "subject": "Add gpio-based cable presence detection doc",
    "owner": {
        "email": "linchuyuan@google.com",
        "username": "linchuyuan"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/45395",
    "commitMessage": "Add gpio-based cable presence detection doc\n\nThis is a attempt to implement a new dbus daemon to report cable\npresence state\n\nSigned-off-by: Chu Lin <linchuyuan@google.com>\nChange-Id: Idb6e47f75504d097efe51f80b173c0d95cde872f\n",
    "createdOn": 1627582544,
    "lastUpdated": 1636585531,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1627582544,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1627993357,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1: Code-Review-1\n\n(10 comments)"
        },
        {
            "timestamp": 1628008351,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1628009791,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1628010871,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1628011355,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1628011672,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1628544307,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1628544329,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 2:\n\n(10 comments)"
        },
        {
            "timestamp": 1629146880,
            "reviewer": {
                "name": "Willy Tu",
                "email": "wltu@google.com",
                "username": "wltu"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1629303538,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1629303779,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 4: Commit message was updated."
        },
        {
            "timestamp": 1629317822,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(15 comments)"
        },
        {
            "timestamp": 1629317827,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4: Code-Review-1"
        },
        {
            "timestamp": 1629390689,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1629390737,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 5:\n\n(13 comments)"
        },
        {
            "timestamp": 1629392544,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 5:\n\n(4 comments)"
        },
        {
            "timestamp": 1629403066,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1629403085,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 6:\n\n(4 comments)"
        },
        {
            "timestamp": 1629403492,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1629409085,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1629460459,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 7:\n\n(3 comments)"
        },
        {
            "timestamp": 1629489644,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1629489695,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 8:\n\n(3 comments)"
        },
        {
            "timestamp": 1629492442,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1629501418,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1629505615,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1629572836,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1629733662,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1629751858,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 8:\n\n(19 comments)\n\nLots of comments."
        },
        {
            "timestamp": 1629760658,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1629760716,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 9:\n\n(16 comments)"
        },
        {
            "timestamp": 1629761107,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9:\n\n(1 comment)"
        },
        {
            "timestamp": 1629849143,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1629849304,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 10:\n\n(7 comments)"
        },
        {
            "timestamp": 1630089633,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 10:\n\n(4 comments)\n\nSeems to be in a relatively decent shape now.  Have a few minor comments."
        },
        {
            "timestamp": 1630342460,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1630342472,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 11:\n\n(4 comments)"
        },
        {
            "timestamp": 1630436064,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 11:\n\n(12 comments)"
        },
        {
            "timestamp": 1630514728,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1630514745,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 12:\n\n(12 comments)"
        },
        {
            "timestamp": 1630516952,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 12: Code-Review+1\n\nlgtm"
        },
        {
            "timestamp": 1630523587,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 12:\n\n(4 comments)"
        },
        {
            "timestamp": 1630528227,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 13."
        },
        {
            "timestamp": 1630528278,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1630528657,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 14:\n\n(3 comments)"
        },
        {
            "timestamp": 1630532494,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 14: Code-Review+1"
        },
        {
            "timestamp": 1630535380,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 14: Verified+1 Code-Review+2"
        },
        {
            "timestamp": 1630535386,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Change has been successfully rebased and submitted as cb367c78502306b99d23d312f4b4217a4f5424b3 by Patrick Williams"
        },
        {
            "timestamp": 1632214909,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 15:\n\n(3 comments)"
        },
        {
            "timestamp": 1632779080,
            "reviewer": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "message": "Patch Set 15:\n\n(3 comments)"
        },
        {
            "timestamp": 1636585531,
            "reviewer": {
                "name": "Jason Ling",
                "email": "jasonling@google.com",
                "username": "jclaz"
            },
            "message": "Patch Set 15:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/1",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1627582544,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "In general you have not followed the design document template.  Please use `pldm-stack.md` as a guide for expected major headings."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 1,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Please fix the 80 character limit throughout this file."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is a grammatically awkward quoting."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think you've kind of round-about explained aspects of the daemon here.  I'd like the components that make it up a little more explicitly broken out.\n\n1. proposed dbus interfaces\n2. entity manager config\n3. daemon\n\nDo you have a proposed repository that this daemon is going to reside at?  You should also probably document how this is going to be implemented in the IPMI providers (which ones?)."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 14,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think this is where my complaints about free-form strings in your proposed dbus interface are coming from.  I still don't want free-form strings here.  Please use dbus enumerations.\n\nI expect you're going to have OEM-specific cables, so we don't need them all in xyz.openbmc_project.Inventory.Cable.CableType.  It is acceptable to create OEM interfaces of the same name, like com.google.Inventory.Cable.CableType and specify that the property must follow the schema `<domain>.Inventory.Cable.CableType.<type>`."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 20,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't understand syntactically what this is referring to.  It is as if you meant to have a list of interfaces at an object path, but you have interfaces in an interface."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 41,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This makes no sense to me.  Why wouldn't you just have the IPMI provider collapse everything under a particular cable path element?  I don't understand why we need to be \"IPMI aware\" at a dbus level."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I don't think that works, because even if we go with the hierarchical inventory, that overloads what it means to be contained by with what it means to be connected to.  Said another way, cables are not contained by the cards they're plugged into.\n\nThis is not to say I've looked at this in depth enough propose a better solution, but when this stuff starts getting to Redfish, we're going to have a problem with overloading those two things.  Chu pinged me OOB to ask about this comment.  I haven't read the full design doc yet, and I'm waiting on the formatting to be fixed before I do (no sense in reviewing it twice)."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Maybe I'm not understanding what the dual cable objects means here.  \n\nI assumed, perhaps incorrectly, that this is giving an example of 2 cable connectors of the same type, which you want populated into a bitstring in the IPMI SDR to indicate which of the N possible connectors are populated.  If that is the case, I'm really giving no indication about hierarchy, but that the IPMI provider would simply look at all the connector objects and figure out which ones go with which generated SDR.\n\nI guess I did say \"cable path element\" but that probably wasn't what I intended, other than the proposal here already had some seeming hierarchy implied by lines 74 and 75."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> Maybe I'm not understanding what the dual cable objects means here.  \n\n\nOk..... I thought I understood what you were proposing, but clearly I'm not.  I read your initial response as something with dbus paths like:\n/card1\n/card1/cableA1\n/card1/cableA2\n/card2\n/card2/cableB1\n/card2/cableB2\n\ncableA1 and cableA2 would be grouped into the same SDR.\ncableB1 and cableB2 would be grouped into a separate SDR.\n\n> \n> I assumed, perhaps incorrectly, that this is giving an example of 2 cable connectors of the same type, which you want populated into a bitstring in the IPMI SDR to indicate which of the N possible connectors are populated.  If that is the case, I'm really giving no indication about hierarchy, but that the IPMI provider would simply look at all the connector objects and figure out which ones go with which generated SDR.\n\nI need to wrap my brain around this.... coffee still hasn't kicked in yet.\n\n\n> \n> I guess I did say \"cable path element\" but that probably wasn't what I intended, other than the proposal here already had some seeming hierarchy implied by lines 74 and 75."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Hi Patrick, do you have a pointer to the ipmi provider you were talking about? I would like to explore it."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> Hi Patrick, do you have a pointer to the ipmi provider you were talking about? I would like to explore it.\n\nLOL.  I assumed this is something you would be writing, correct?  I'm only talking about \"IPMI provider\" in the same general sense that you did throughout the document (except you just said \"ipmi\").\n\nThere is no magic code that does this for you today as far as I am aware."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 63,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Squeezed?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This is illegal from a dbus perspective.  Interfaces cannot have slashes.  The dbus client library won't even let you do it.\n\nDon't try to invent new dbus mechanisms.  There are already properties, associations, subpaths, etc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 79,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 79,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "These sound like requirements not a description of testing.  Are you going to enhance openbmc-test-automation, are you going to mock, etc.?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 90,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 91,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 91,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "89af52d66275ee9265268fe514b1b931efe6663c",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/2",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1628544307,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Willy Tu",
                        "email": "wltu@google.com",
                        "username": "wltu"
                    },
                    "message": "For the ipmid requirement, isn't that dependent on the IPMI spec?\n\nIt is still dependent on the Sensor type that we are fetching and the data that is supports.\n\nYou mentioned that\n\n```\nBoth `cable1` and `cable2` will be grouped together and the common name\nfor `cable1` and `cable2` is `cable`. Therefore, `cable` will be used as the \nsdr name. In the case of having more than 8 presence states in a group,\nthe sdrs names will be appended with hyphen and a alphabet letters starting\nfrom A.\n```\n\nDo you just mean that the cables will be group into one sdr slot and in the handler it will divide them up?\n\nI guess that can work, but they will all have the same SDR index (not sure if that will be an issue).\n\n----\n\nYou mentioned internally that you got a version working, can you push to sdr-dbus for review. Maybe that can help people understand what you are trying to do better."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 89,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "ca8cdf4073b1c68b18f45d654ec68770641e10e4",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/3",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629303538,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 125,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 125,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/4",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629303779,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 12,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this the word you intend to use here?\n\n> staking: support (a plant) with a stake or stakes.\n\nIf this is a misspelling, I'm not sure what word you intended to use."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can we get an email address at least?  Preference is a Discord user as well."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 5,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 10,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Ok, on the commit message I suspect you meant \"stacking\".  Is this even the right word though?  Is it \"packing\"?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 10,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Maybe a dumb question, but why is Cable Presence (inventory) being exposed via sdr (sensor) instead of fru?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "The presence state is collected from gpio pins instead of detection fru presence. In addition, it may or may not contain serial numbers, part numbers, etc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not really satisfied with this answer.\n\n> The presence state is collected from gpio pins instead of detection fru presence.\n\nI don't know what you mean by \"detection fru presence\".  How the BMC detects an inventory entity vs how it presents it over IPMI are two different things.  Just because we're not using an i2c EEPROM to identify the cable, in this case, doesn't seem like it can't be presented as an inventory/fru item.\n\n> In addition, it may or may not contain serial numbers, part numbers, etc.\n\nYou certainly have a part-number on a cable.  Are IPMI fru records really _required_ to have all of these things or are they optional?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "It is an interesting point to report the presence state via type12(fru). I quickly looked into it and unlike discrete sensors, it is not easy to pack multiple presence states into 1 fru slot. Also, fru has a limit of 255 too. I will put a todo here to look into how to do it properly using type12 records."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Alright.  Please add this kind of information in an \"Alternatives Considered\" section as well."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "enterprise."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 18,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 22,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Check for 'stake' throughout."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 22,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 26,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "How do these interfaces relate to `Inventory.Connector.*`?  Should they?  Are cables a type of connector?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 26,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "You are correct. The Daemon needs to implement both connector and cable interface."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 27,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do we need to reference the commit for these also?\n\nSuggest improved English:\n\nThere will be two new dbus interfaces: `Inventory.Item.Cable` and `Inventory.Decorator.CableClass`.\n\n(Also suggest using backticks around them as they are code identifiers.)\n\nI don't see anything obvious in the rest of the document describing CableClass.  Is that missing?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 27,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Sorry I  meant we only need to introduce the iventory.item.cable interface. The proposed designed doesn't need CableClass. Correction has been made to the doc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Where do these pin labels come from?  GPIOs in the device tree?  Why can't we just name them reasonably?  The name you picked here as an example seems like a schematic name and we tend to want to avoid using those in the codebase."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 54,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Renamed it to GpioLine and yes, they are the gpio line label from the device tree."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 55,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "invert?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 55,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Why is that number chosen?  Why is there polling at all?  Shouldn't this be done with GPIO interrupts?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 58,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "The gpio_line_event_wait requires all the lines to come from the same chip which is not necessary true all the time. See https://github.com/brgl/libgpiod/blob/cc23ef61f66d5a9055b0e9fbdcfe6744c8a637ae/lib/core.c#L993\n\n We could spawn threads to listen to each chips but I don't think we should increase the complexity of a such simple daemon. As long as a sleep-poll mechanism meets our requirements, it should be enough. The 10 seconds polling interval is up to discussion. I feel like a simple gpio detecting daemon doesn't need to be run in a aggressive loop."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 58,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "In some regards I was simply trying to get us to refrain from polling."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 67,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Where does 'cable' come from in your example?\n\nHow do you handle N identical cables?  Are they always grouped?  What if (N > 8), or whatever fits in an SDR?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 67,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "They should be index despite the fact that it is identical. In the ipmi world, yes, they will be grouped and they should be grouped. In the redfish world, because we don't have the 256 limit, it could be reported in a flat list.\n\nYou are correct about the hierarchy. It should be /xyz/openbmc_project/inventory/item/cable1 instead of xyz/openbmc_project/inventory/item/cable/cable1."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 67,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "So again, I'm stumped as to how IPMI identifies cables that are suppose to be grouped.  When you had hierarchy it was obvious how IPMI might find them and group them, but it wasn't obvious how you specified them.  Now that you've removed the hierarchy I don't know how IPMI identifies ones which should be grouped."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 67,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Sure. \nSo say /xyz/openbmc_project/inventory/item/cable1 and /xyz/openbmc_project/inventory/item/cable/cable2\n\nIf we extract the sdr name from the object path, it is cable1 and cable2. Then, if we cut the trailing numbers, it becomes cable for both of them. Therefore, we know that the two need to be grouped. Same thing for cable3 and cable4. However, if we named it cableA1 and cableB1, The two will not be grouped."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 67,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Alright.  This kind of explanation needs to be in the doc here.\n\nI'm not sure if everyone will be satisfied with \"path segment matching\" as the approach but we should at least spell it out if that is what you are proposing."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 68,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "cable2?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 68,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "This might be an answer to my (N > 8) question above.\n\nI think this means we would potentially end up with multiple entity manager JSON files for a single fru because of this restriction.  Is that acceptable?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 74,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Why do we need multiple JSON file? We only need one and in that JSON, we can specify the groups ."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't know?  What does a \"each group from config file\" mean?  Are there multiple \"Exposes\" entries somehow?  I'm not an EM expert, but it is especially non-obvious to me how someone would represent a cable-group with 16 cables."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 74,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Updated the doc with more explanation of how to report many cables in different groups. Please see if this make sense."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there an off-by-one here?  You listed 15 items."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 112,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "yes, typo"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 125,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 125,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "604a56dce02c9adc4405ba9a750434799b0fbbc1",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/5",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629390689,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 124,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 124,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "5d994821149eff5983c0f7549daa4d646f554ff5",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/6",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629403066,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 136,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 136,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "704252e1325e19680562ebfae1588731bf065586",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/7",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629409085,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 5,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "If you make another change, please adjust indentation to match the formatting above."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 5,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don't really like this design, but would like Ed to give some feedback.\n\nIt seems flawed in two ways:\n    1. There is an implication by the example (which might just be due to the minimal example) that all cable connectors are on the same FRU given by the same Exposes, but that's not likely in practice.\n\n    2. Once Exposes are given by different FRUs there is no way for the IPMI provider to know which ones are suppose to be there and which ones aren't and which position they need to be in.  If the FRU holding cable5 doesn't show up, and thus doesn't have an object, how does the IPMI provider know to skip '5' in the bitfield?\n\nMaybe you're actually intending the provider to parse the number in the path and put it into a bitfield (mod 14)?  We should be very clear about what the schema is thus required for cable names.  I would suggest an underscore as a separator in the name in that case (ie. cable_5)."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "the trailing index is also the position index. For example, if cable_5 is missing, when we reconstruct the object path, we will get read error on cable_5. Therefore, cable_5 is left as not present (bit index 5 left as 0). In this way, the order of cables are guaranteed.\n\nYes, cable_5 sounds better."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> the trailing index is also the position index.\n\nPlease make this clearer in the document.  It isn't obvious that you need specific numbers which correspond to specific IPMI bits.\n\nIf this is true, then why do we need \"the cables should be grouped into two different groups\"?  Shouldn't the IPMI code be able to do a mod-14 to find the bit position for what you're currently calling the B group?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "each discrete sensor can hold at hold 14 presence per ipmi specification doc. Therefore, when you have more than 14, say 16, the 15th and 16th need to go to the next sdr/group. And yes, we can do a mod operator to get correct index but since we already using a different sdr, I would suggest us to start counting from 0 again to make thing more explicit.\n\nI will update the doc with more explanation."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I don\u2019t really understand why you\u2019d want this to be \u201cexplicit\u201d. Why force a detail of IPMI through your entire inventory stack?  It isn\u2019t like you\u2019re actively defining the IPMI SDR number anyhow, so someone has to figure all that out."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Ok. Are you suggesting that we should hide the grouping information from the EntityManager JSON file? For example:\nInstead of:\n```\n    {\n      \"Name\": \"cableGroupA_0\",\n      \"GpioLine\": \"gpio_pin0\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n    ....\n    {\n      \"Name\": \"cableGroupB_0\",\n      \"GpioLine\": \"gpio_pin14\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n```\nit should be:\n```\n    {\n      \"Name\": \"cable_0\",\n      \"GpioLine\": \"gpio_pin0\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n    ....\n    {\n      \"Name\": \"cable_14\",\n      \"GpioLine\": \"gpio_pin14\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n\n```\nMeanwhile, the grouping logic should be hidden in the ipmi-provider. For example, when we reach  14 presence states in one sdr, we automatically jump to a new sdr. Am I understand the suggestion correct?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I'm not implying one is right and one is wrong.  Either one can work and they have different pros/cons.  My opinion is that having a single group at an EM level is more intuitive and that, in general, we shouldn't push IPMI requirements (or Redfish for that matter) too deep into the application stacks if it isn't necessary.\n\nI think it is reasonable for you to solicit feedback from others and get some consensus.  Whichever approach you chose, the other approach probably belongs being discussed in the \"Alternatives Considered\".\n\n> Are you suggesting that we should hide the grouping information from the EntityManager JSON file?\n\nYes.  That is my preference.  You may have reasons for wanting to keep them separate though which is stronger."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": ">   1. There is an implication by the example (which might just be due to the minimal example) that all cable connectors are on the same FRU given by the same Exposes, but that's not likely in practice.\"\n\nI'm not following this statement.  In general, you would include the exposes records on the entity that \"exposed\" them, which in most cases will be the thing that contains the ports.\n\n>  Once Exposes are given by different FRUs there is no way for the IPMI provider to know which ones are suppose to be there and which ones aren't and which position they need to be in.  If the FRU holding cable5 doesn't show up, and thus doesn't have an object, how does the IPMI provider know to skip '5' in the bitfield?\"\n\nthis is for sure a concern.  Presumably we'd code this up so that all ports are implicitly created, and might just have the Presence field set to false.\n\n\n>  And yes, we can do a mod operator to get correct index but since we already using a different sdr, I would suggest us to start counting from 0 again to make thing more explicit.\"\n\nNo, we shouldn't, as this could get really confusing for users looking at the dbus API, when it's simple enough to code mod 14 in IPMI.\n\n>  I don\u2019t really understand why you\u2019d want this to be \u201cexplicit\u201d. Why force a detail of IPMI through your entire inventory stack?\"\n\n+1 to this.  14-bit limits are IPMI specific, which we should avoid propagating through other places.  If we started over at 0, in redfish you would see two cables with index 0, which would be an issue.\n\n\n\n>  Are you suggesting that we should hide the grouping information from the EntityManager JSON file? \"\n\nIn one of my other comments, I proposed that this all should be a single exposes record, which I think simplifies this config a lot.\n\n\n\n\n\nI tried to hit a bulk of the questions in this thread;  Let me know if you're still confused or I missed one."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 70,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I still think using a flat list for config feels more nature from the redfish perspective. Please review the revised design doc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 124,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is this intended to be a bullet point? (*,-, or +)  As it is you're going to be shouting an H1."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 124,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 136,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 136,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "bd0c5cb18a9b3b71e551c05c9d67507ddb021492",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/8",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629489644,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 10,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets avoid calling out ipmi specifically;  While that might be your initial target, I know that your team will need redfish support as well in the future."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 10,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "You might enumerate this a little more.  On systems with 20 slots, and 253 sensor IDs, taking up one sensor per slot would use 10% of the available space, and be a huge waste."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "That doesn't seem like it would be part of the problem description.  We could certainly have dbus interfaces that redfish ignores.\n\nWith that said, keep in mind, that you're trying to group these things based on the card they're attached to, which redfish DOES care about.  I suspect we should have a plan that handles that as part of this same design."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 14,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 17,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit, in ipmi these are \"discrete\", not \"boolean\""
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 17,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "overall, I think everything in the \"background\" section is actually still part of the problem statement.  YOu might want to link the section of the IPMi spec that talks about cables, as well as the recently included cable schema in redfish as part of your background."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 20,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This was already covered in your problem description.  No need to duplicate it here."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 20,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 20,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Lets rewrite these a little bit so they're solution-agnostic:\n1. the openbmc IPMI interface should support exposing cable presence states.\n2. The OpenBMC dbus interface should be compatible with redfish"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 24,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This would imply that all GPIO lines are directly connected to the BMC?  What if this is on an add-in-card, which is common on OSFP cards."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 36,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "This design only address the case where we can get the presence state via gpiofind and gpioget command. If the add-on-card supports reporting the presence state via gpioget, I think we should be fine here."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 37,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Can we call this \"polarity\", and not make it a bool?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 37,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 38,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "This type needs to convey the actual exposes record for the backend being invoked, and considering this is a cable interface, \"Cable\" probably needs to show up somewhere in the type name.\n\nGpioCablePresence is probably the name I would pick."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 38,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 52,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Should we be packing these differently in the config?  it seems odd when the goal is to explicitly group things, that we would have N config items.  Maybe we need a single Exposes entry per group, with a dict of Name/GPIO/Polarity pairs.  That makes it much clearer which objects are grouped together in practice, and should lead to a cleaner backend design when scanning in this config data."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 52,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "IN the redfish implementation, we don't need the idea of grouping things. Therefore, we used a flat list here. However, I think the following is also applicable:\n    {\n      \"Name\": \"cable2\",\n      \"GpioLine1\": \"osfp1\",\n      \"GpioLine2\": \"osfp2\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOSensing\"\n    }\n\nPlease comment on this."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 52,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I still think it is better to use a flat list from the config from the redfish perspective. It feels more nature."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 53,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why poll?  Shouldn't interrupt driven be the default?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 53,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "The gpio_line_event_wait requires all the lines to come from the same chip which is not necessary true all the time. See https://github.com/brgl/libgpiod/blob/cc23ef61f66d5a9055b0e9fbdcfe6744c8a637ae/lib/core.c#L993\n\n We could spawn threads to listen to each chips but I don't think we should increase the complexity of a such simple daemon. As long as a sleep-poll mechanism meets our requirements, it should be enough. The 10 seconds polling interval is up to discussion. I feel like a simple gpio detecting daemon doesn't need to be run in a aggressive loop."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 54,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "How was this chosen?  Considering a human can plug/unplug reasonably quickly (definitely several times in 10 seconds) this seems like it's too short."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 54,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "We can discuss a more reasonable number."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 54,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Please see the revised design doc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 57,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "nit... this document calls them \"slots\" a lot.  Per the IPMI spec, they're \"IDs\".  Also, I would worry less about \"fewer\" in the prose, and more about  how the various groups are related, as that's implied in the IPMI spec."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 57,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 115,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "If this is what we're doing, generally entity-manager would use a dedicated field for this, which allows us to do some aggregation things, like base it on the detected i2c address for example.\n\nSaid another way, \"name\" is getting overloaded as a field, and we should avoid that."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 115,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "In this context, I feel like the following is more applicable.\n```\n   {\n      \"Name\": \"cable2\",\n      \"GpioLine1\": \"osfp1\",\n      \"GpioLine2\": \"osfp2\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOSensing\"\n    }\n```\nWhat do you think?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 115,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Please see the revised design doc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Please put in more effort than this.  The expectation is that you've \"explored\" these optional already, and discounted them by the time this doc gets put up.\n\nAlso, in terms of alternatives, you've had several alternatives for how the dbus grouping should work.  I'd expect those enumerated here too.\n\nFWIW, I know we had talked about this naming thing, but the more I look at it, the more I think we need to rely on the association back to the main inventory item to do the grouping.  that seems like it would give the result the user expects.  If you've explicitly discounted that, I'd like to see that called out here."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 125,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "The Fru doesn't have a natural way of supporting \"discrete sensor\" and it also has a limit of 255 IDs. Therefore, I take it as a nice to implement feature in the future as modifying type12 sensor to support \"discrete sensor\" is a different project."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 132,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "So..... you're going to change the state?  How do you ensure that the bits are mapped properly?  How do you ensure that the cables work?  How do you ensure that debouncing is done properly?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 132,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 133,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "how many times?  any SDR requirements to test?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 133,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 136,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I'd just omit this and leave it as implementation details within entity-manager.  The schema files are required when you upstream your configs."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 136,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 136,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 136,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "83caac28708deefc5c6024b516edd2a0478417c8",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/9",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629760658,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 135,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "b8332d69d70823ac728a058c34bcd2cea0a90f96",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/10",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1629849143,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 73,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Silly question here but do we want 0-index or 1-index counting?  My preference would be 0-index (ie. cable0 and cable1) unless you have a strong rationale why 1-index counting is better for this use case."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 73,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Yea. I agree. It should be zero index. I have it zero indexed in my local test but sure why I put 1-indexed in the doc."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Here you seemed to have transitioned to 0-index counting. ;)\n\nIf you intended to use 0-index counting, great.  If you intended to use \"start-wherever-you-want index counting\" this is problematic.  Suppose 'cable0' is missing.  The IPMI provider will have no way of knowing if 'cable0' is missing because the FRU its connector belongs to wasn't detected or because it wasn't defined for this system; thus it has no way to know if it should skip 0 in the bit-mapping."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 76,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I feel like we should be able to do \"start-wherever-you-want index counting\". It actually all comes from the config. Given the following config,\n```\n    {\n      \"Name\": \"cable1\",\n      \"GpioLine\": \"osfp1\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOCableSensing\"\n    },\n    {\n      \"Name\": \"cable2\",\n      \"GpioLine\": \"osfp2\",\n      \"Polarity\": \"active_high\",\n      \"Type\": \"GPIOCableSensing\"\n    }\n```\nWe will have a sdr name cable[1-2]. This should have enough information to tell the user that this sdr contains cable1 and cable2. Meanwhile, the presence state of cable1 goes to the zeroth bit and the presence state of cable2 goes to the first bit.\n\nOn the other hand, if the config contains cable0, the sdr name will be cable[0-2] and it indicates that the zeroth bit is the presence state for cable0 and first bit is the presence state for cable1 and so on.\n\n```\n    {\n      \"Name\": \"cable0\",\n      \"GpioLine\": \"osfp0\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOCableSensing\"\n    },\n    {\n      \"Name\": \"cable1\",\n      \"GpioLine\": \"osfp1\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOCableSensing\"\n    },\n    {\n      \"Name\": \"cable2\",\n      \"GpioLine\": \"osfp2\",\n      \"Polarity\": \"active_high\",\n      \"Type\": \"GPIOCableSensing\"\n    }\n```\n\nIn the case of missing configs, for example, cable1 is missing, we will have two sdrs cable0 and cable2 because it is discontinued (cable1 is missing)."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 76,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I feel like we should be able to do \"start-wherever-you-want index counting\". It actually all comes from the config.\n\nConfig is not exposed (by EM) until the FRU having the corresponding Probe is detected.  It is quite possible that you have a config where the FRU holding the cable connector isn't currently populated but is hot-added later on.  Your application can never know \"do I have all possible configuration this system might expose\"."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 85,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I feel like I'm missing a leap from the EM config -> dbus object -> sdr naming.  Where did 'osfp' come from in this example?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 85,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "for example, given the following config\n```\n    {\n      \"Name\": \"osfp\",\n      \"GpioLine\": \"osfp0\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOCableSensing\"\n    },\n    {\n      \"Name\": \"osfp1\",\n      \"GpioLine\": \"osfp1\",\n      \"Polarity\": \"active_low\",\n      \"Type\": \"GPIOCableSensing\"\n    },\n    {\n      \"Name\": \"osfp2\",\n      \"GpioLine\": \"osfp2\",\n      \"Polarity\": \"active_high\",\n      \"Type\": \"GPIOCableSensing\"\n    }\n```\nThe first entry is named osfp. It is not indexed. Therefore, it will not be grouped into anything. Instead, it will be using one sdr. It is a waste of sdr IDs but I think it is ok for this unindexed special case."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Is there any reason why it wouldn't work without modification?  It seems like a relatively trivial support.  You have to support the EM config being dynamic anyhow."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 94,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 134,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 134,
            "sizeDeletions": 0
        },
        {
            "number": 11,
            "revision": "4a0f7814a99a5ffbaaf0f567d8eb5ceae870d819",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/11",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1630342460,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "nit: IPMI not Ipmi"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 11,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "If we're doing 0 indexing should this be cable0 instead?\nIf so fix here and in the rest of the document"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 35,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 36,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "and then make this osfp0 for consistency and to avoid confusion?\nIf so fix here and in the rest of the document"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 36,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 41,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "If we're doing 0 indexing should this be cable1 instead?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 41,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 42,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "same here, osfp1 mostly to avoid confusion."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 42,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 56,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "SDR , not sdr?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 56,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "IPMI not ipmi?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 56,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "Do we have a clear enough idea of how this would look like for Redfish? Should we at least put in a Redfish section with what we know to show that considerations have been made but details need to be fleshed out?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 56,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 56,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 56,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 71,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "nit. Do we really need the brackets? IIRC IPMI has a 16 character limit.\nIs something like\ncable0_1 enough?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 71,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "consider osfp0_prst[0-5] vs osfp0_prst0-5, we could still extract the range string by regex but I would like to avoid using regex in this case."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "I think showing the dbus paths for this configuration would help clarify this."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 86,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "I'm not sure what this means. An explanation of my confusion below:\n\nI thought the group names , eg cdfp0_3 is a concept isolated to IPMI daemon entirely? \nSo what is doing the fetching? Some external entity?"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 91,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 111,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "For added effort you can always make this configurable. Options range from your daemon supporting a compile time options to allowing an EM config user to specify polling periods on a per cable basis.\n\nIn my opinion making this configurable as a compiler option is sufficient."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 111,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 130,
            "sizeDeletions": 0
        },
        {
            "number": 12,
            "revision": "1d9921770d599933365305f2c9a0d90249a4a861",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/12",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1630514728,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 74,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Can you clean up these few trailing whitespace while you're in here?  There are a few in the document."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 74,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 79,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "I think you've done a global find/replace of 's/sdr/SDR/g'.  In this case the change is wrong."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 79,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 111,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Looks like you also did 's/id/ID/g'."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 111,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 111,
                    "reviewer": {
                        "name": "Jason Ling",
                        "email": "jasonling@google.com",
                        "username": "jclaz"
                    },
                    "message": "typo?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 154,
            "sizeDeletions": 0
        },
        {
            "number": 13,
            "revision": "e4067f1c28a468a8085d56d080c34cc8661bce84",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/13",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1630528227,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 154,
            "sizeDeletions": 0
        },
        {
            "number": 14,
            "revision": "0d9f1c9f6b2a20e47a005f28cf735022098de175",
            "parents": [
                "f7d417155834c08492471ae6c6cb5dc2571a92d0"
            ],
            "ref": "refs/changes/95/45395/14",
            "uploader": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "createdOn": 1630528278,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 154,
            "sizeDeletions": 0
        },
        {
            "number": 15,
            "revision": "cb367c78502306b99d23d312f4b4217a4f5424b3",
            "parents": [
                "0ac32b443b57738a407071abd7a9dabc1c31f533"
            ],
            "ref": "refs/changes/95/45395/15",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1630535386,
            "author": {
                "email": "linchuyuan@google.com",
                "username": "linchuyuan"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 12,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Sorry, I'm a bit late with the review, but why you don't want to just use LUNs to extend address space? There was such implementation here:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/45744\n\nAnyway, what's the special relation between cable sensing and sensor limit problem? I believe this problem is not specific for the cables )"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 12,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "Sorry for the late reply. In our case, we have a lot of cables per system. If we use one ID per cable, it would be a waste. This applies to both 255 limit and 510 limit. Therefore, in our opinion, the best thing to do here is to pack the presence signal into discrete sensors."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 28,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "lowercase"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 28,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I will fix this in a different PR."
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 29,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "lowercase"
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "line": 29,
                    "reviewer": {
                        "email": "linchuyuan@google.com",
                        "username": "linchuyuan"
                    },
                    "message": "I will fix this in a different PR."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/gpio-based-cable-presence.md",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 154,
            "sizeDeletions": 0
        }
    ]
}