{
    "project": "openbmc/phosphor-hostlogger",
    "branch": "master",
    "topic": "hostlogger-stream",
    "id": "Ic7d02e826c7d9372621c096c6e768e6216974150",
    "number": 44241,
    "subject": "Add the stream mode",
    "owner": {
        "name": "Nan Zhou",
        "email": "nanzhoumails@gmail.com",
        "username": "FighterNan"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-hostlogger/+/44241",
    "commitMessage": "Add the stream mode\n\nThe stream mode behaves differently in versus the existing buffer mode.\n\n1. It leverages rsyslog to persist logs;\n2. It leverages logrotate to rotate and compress logs;\n3. It persists logs as soon as they are collected.\n\nAdd configuration options to choose modes at start up time. When stream\nmode is disabled, no difference compared to the existing service.\n\nSee README.md for details.\n\nThis change also adds mock classes for unit test purpose.\n\nChange-Id: Ic7d02e826c7d9372621c096c6e768e6216974150\nSigned-off-by: Nan Zhou <nanzhoumails@gmail.com>\n",
    "createdOn": 1624039492,
    "lastUpdated": 1625117741,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1624039492,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1624039512,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624039592,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20134/ : SUCCESS"
        },
        {
            "timestamp": 1624039632,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1624039642,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624039721,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20135/ : SUCCESS"
        },
        {
            "timestamp": 1624040396,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1624040408,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624040668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20137/ : SUCCESS"
        },
        {
            "timestamp": 1624041011,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 4: New patch set was added with same tree, parent, and commit message as Patch Set 3."
        },
        {
            "timestamp": 1624041019,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: -Ok-To-Test"
        },
        {
            "timestamp": 1624041022,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624041043,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1624041057,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624041061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20138/ : ABORTED"
        },
        {
            "timestamp": 1624041308,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20139/ : SUCCESS"
        },
        {
            "timestamp": 1624257496,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 5: Code-Review-1\n\n(6 comments)\n\nSo, now we have two different applications with the same name in one repository.\nJust because both of them use a similar file reading procedure.\nDo you really find this acceptable? Sorry, but I don't think so."
        },
        {
            "timestamp": 1624315694,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1624315710,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624315791,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20284/ : SUCCESS"
        },
        {
            "timestamp": 1624315793,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n> Patch Set 5: Code-Review-1\n> \n> (6 comments)\n> \n> So, now we have two different applications with the same name in one repository.\n> Just because both of them use a similar file reading procedure.\n> Do you really find this acceptable? Sorry, but I don't think so.\n\nDone. I made two applications with different names now."
        },
        {
            "timestamp": 1624316393,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Topic set to hostlogger-stream"
        },
        {
            "timestamp": 1624316630,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n(6 comments)"
        },
        {
            "timestamp": 1624375659,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\nHi Artem, any new feedbacks?"
        },
        {
            "timestamp": 1624376322,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> Hi Artem, any new feedbacks?\n\nNow we do not even have a common name =)\nI believe there will be less in common with each iteration. \n\nSorry, Nan, I still think that it would be better to have different repositories for different application."
        },
        {
            "timestamp": 1624391175,
            "reviewer": {
                "name": "Alexander Amelkin",
                "email": "a.amelkin@yadro.com",
                "username": "AlexanderAmelkin"
            },
            "message": "Patch Set 6: Code-Review-1\n\nNan, I as well think that you need to consider adding this functionality directly into obmc-console-server or indeed making a separate project."
        },
        {
            "timestamp": 1624391539,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(3 comments)\n\n> Patch Set 6:\n> \n> > Patch Set 6:\n> > \n> > Hi Artem, any new feedbacks?\n> \n> Now we do not even have a common name =)\n> I believe there will be less in common with each iteration. \n> \n> Sorry, Nan, I still think that it would be better to have different repositories for different application.\n\nWhile I think there's some cleanups to be done (ie, this shouldn't be a totally separate app, but just a configure mode in the existing app) I like that a lot of the code is shared.  This is a good thing overall, and moving to a different repository would necessitate copying and pasting a lot of code, which is an anti-pattern.\n\nI haven't reviewed the code in depth, but I still think this is the right approach for the community, as it reduces the amount of code overall, and ensures that we have one application that supports everyone's use cases.  I don't see how we can get that with a separate repository."
        },
        {
            "timestamp": 1624393744,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1624394057,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1624395095,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6: Code-Review-1\n> \n> Nan, I as well think that you need to consider adding this functionality directly into obmc-console-server or indeed making a separate project.\n\nThanks for your feedback. I think this stream application is just another a client of obmc-console-server. It might not make sense to make a separate path just for DGRAM packets in obmc-console-server.\n\nThe main reason we add codes in HostLogger is to reuse codes and make this repo a central place for people who need serial logs."
        },
        {
            "timestamp": 1624408500,
            "reviewer": {
                "email": "rhanley@google.com",
                "username": "Richard-Hanley"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6: Code-Review-1\n> \n> Nan, I as well think that you need to consider adding this functionality directly into obmc-console-server or indeed making a separate project.\n\nSo unfortunately I didn't get a chance to comment on this when it was discussed on the mailing list, and so this might rehash some of the email convos. As I see it, there are a couple of different layers/angles that this discussion can look at.\n\nI think everyone agrees that we should be trying to maximize code reuse, but there is a legitimate question on whether these applications and use cases will converge or diverge over time.\n\nTo that end, it's worth thinking about the community plans to support serial console log extraction. Right now I really see three big options:\n  1) Create an ad-hoc protocol for streaming the console.\n  2) Package logs into files and extract using scp, ftp, etc.\n  3) Use a standard protocol like Redfish (or for the masochists among us, IPMI)\n\nIn past we've used option (1), and I expect a lot of people go down that road as well. However, I think that there is some space for a standards based solution here. And if we had a standard, I think the Redfish LogService is probably the lowest hanging fruit here.\n\nSo that leads to the next question, where should the log entries be stored for the Redfish service. I think there are really three answers here:\n  1) Have bmcweb subscribe to the console stream and manage/buffer entries\n  2) Keep bmcweb stateless, and have an intermediate process (such as obmc-console) manage the log entries.\n  3) Merge the entry management with the entry streaming in phosphor-hostlogger.\n\nNow option (1) is not really feasible, since as designed bmcweb really should be staying out of state management. So it's really a question of (2) or (3).  Quite frankly option 2 looks like a really clunky state. Not only would we have several layers of indirection, but we'd also have two daemons that were managing their own log rotation.\n\nThis feels like a recipe for fragmentation. As it stands I am already really concerned with how fragmented log management is in OpenBMC today. In a way keeping these things in the same repo is a way to keep the door open for unification later. \n\nIn my opinion the differences in use cases here are not unbridgeable, and we can probably streamline this over time. Maybe it takes a while to sort out, but convergence remains an option. If we split into separate repos that tacitly says that divergence is inevitable."
        },
        {
            "timestamp": 1624421777,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 6:\n\n> I think everyone agrees that we should be trying to maximize code reuse, but there is a legitimate question on whether these applications and use cases will converge or diverge over time.\n\nI totally agree. But the common source code in the proposed implementation is only opening and reading a socket, it is about 100-150 lines.\nThis would be justified if we had one application that can work in one or both modes depending on runtime configuration.\nInstead, we now have two different modules living in the same repository. Different settings, different build rules, different dependencies, I am sure there will be different bb recipes too."
        },
        {
            "timestamp": 1624426616,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> > I think everyone agrees that we should be trying to maximize code reuse, but there is a legitimate question on whether these applications and use cases will converge or diverge over time.\n> \n> I totally agree. But the common source code in the proposed implementation is only opening and reading a socket, it is about 100-150 lines.\n> This would be justified if we had one application that can work in one or both modes depending on runtime configuration.\n> Instead, we now have two different modules living in the same repository. Different settings, different build rules, different dependencies, I am sure there will be different bb recipes too.\n\nThanks for your comment. If we are accepting \"one application that can work in one or both modes depending on runtime configuration\", I can make it happen: I can add both services to the existing main, and enable or disable services at runtime according to configurations. Can you confirm that will be accepted?"
        },
        {
            "timestamp": 1624427387,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> > Patch Set 6:\n> > \n> > > I think everyone agrees that we should be trying to maximize code reuse, but there is a legitimate question on whether these applications and use cases will converge or diverge over time.\n> > \n> > I totally agree. But the common source code in the proposed implementation is only opening and reading a socket, it is about 100-150 lines.\n> > This would be justified if we had one application that can work in one or both modes depending on runtime configuration.\n> > Instead, we now have two different modules living in the same repository. Different settings, different build rules, different dependencies, I am sure there will be different bb recipes too.\n> \n> Thanks for your comment. If we are accepting \"one application that can work in one or both modes depending on runtime configuration\", I can make it happen: I can add both services to the existing main, and enable or disable services at runtime according to configurations. Can you confirm that will be accepted?\n\nYes, it would be acceptable.\nAlso, if it is possible, I would like to take a look at the changes you plan to make to the BB recipe."
        },
        {
            "timestamp": 1624427518,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> > Patch Set 6:\n> > \n> > > Patch Set 6:\n> > > \n> > > > I think everyone agrees that we should be trying to maximize code reuse, but there is a legitimate question on whether these applications and use cases will converge or diverge over time.\n> > > \n> > > I totally agree. But the common source code in the proposed implementation is only opening and reading a socket, it is about 100-150 lines.\n> > > This would be justified if we had one application that can work in one or both modes depending on runtime configuration.\n> > > Instead, we now have two different modules living in the same repository. Different settings, different build rules, different dependencies, I am sure there will be different bb recipes too.\n> > \n> > Thanks for your comment. If we are accepting \"one application that can work in one or both modes depending on runtime configuration\", I can make it happen: I can add both services to the existing main, and enable or disable services at runtime according to configurations. Can you confirm that will be accepted?\n> \n> Yes, it would be acceptable.\n> Also, if it is possible, I would like to take a look at the changes you plan to make to the BB recipe.\n\nThanks a lot for your confirmation! Sure, I will add you as a review for both changes (for hostlogger and the recipe). I will work on it and push changes in a few days."
        },
        {
            "timestamp": 1624495672,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 6:\n\n> Patch Set 6:\n> \n> > Patch Set 6:\n> > \n> > > Patch Set 6:\n> > > \n> > > > Patch Set 6:\n> > > > \n> > > > > I think everyone agrees that we should be trying to maximize code reuse, but there is a legitimate question on whether these applications and use cases will converge or diverge over time.\n> > > > \n> > > > I totally agree. But the common source code in the proposed implementation is only opening and reading a socket, it is about 100-150 lines.\n> > > > This would be justified if we had one application that can work in one or both modes depending on runtime configuration.\n> > > > Instead, we now have two different modules living in the same repository. Different settings, different build rules, different dependencies, I am sure there will be different bb recipes too.\n> > > \n> > > Thanks for your comment. If we are accepting \"one application that can work in one or both modes depending on runtime configuration\", I can make it happen: I can add both services to the existing main, and enable or disable services at runtime according to configurations. Can you confirm that will be accepted?\n> > \n> > Yes, it would be acceptable.\n> > Also, if it is possible, I would like to take a look at the changes you plan to make to the BB recipe.\n> \n> Thanks a lot for your confirmation! Sure, I will add you as a review for both changes (for hostlogger and the recipe). I will work on it and push changes in a few days.\n\nHi Artem, I got a quick proposal: \n\n1. There will be a single application (single binary), a single config, a single systemd unit, and a single recipe;\n2. I would still like to keep compile time flags to choose whether to build both modes; \n3. I will add support to enable/disable modes at runtime: \n  a. register a property (something like mode_enabled) for the each mode (the buffer mode and the stream mode); \n  b. add a match to watch the property change;\n  c. if the property changes from enabled to disabled, dynamically mark corresponding sd_event_sources (for buffer mode, event sources will be io & signal; for stream mode, event sources will be just io) as disabled and remove matches if any (the buffer based service has a match for host states). The other ways work similarly, we can disable a service at runtime;\n\nTo implement such proposal, I plan to refactor some codes (service.cpp and dbusloop.cpp) and introduce sdbusplus + sdeventplus (the two C++ wrappers for libsystemd; I think they are quite common in OpenBMC codes) for shorter and cleaner codes.\n\nHow do like the proposal?"
        },
        {
            "timestamp": 1624510673,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 6:\n\n> 1. There will be a single application (single binary), a single config, a single systemd unit, and a single recipe;\nGreat!\n\n> 2. I would still like to keep compile time flags to choose whether to build both modes; \nIt's not necessary, but I don't mind.\n\n> 3. I will add support to enable/disable modes at runtime: \n>   a. register a property (something like mode_enabled) for the each mode (the buffer mode and the stream mode); \n>   b. add a match to watch the property change;\n>   c. if the property changes from enabled to disabled, dynamically mark corresponding sd_event_sources (for buffer mode, event sources will be io & signal; for stream mode, event sources will be just io) as disabled and remove matches if any (the buffer based service has a match for host states). The other ways work similarly, we can disable a service at runtime;\nWhen I wrote about switching modes, I meant control through the settings file /etc/hostlogger/*.conf.\nConfiguring a service is a very rare operation, we do not need to have variables in the DBus for this. \nIt is enough to set up and start the corresponding modes in main(). \n\n> To implement such proposal, I plan to refactor some codes (service.cpp and dbusloop.cpp) and introduce sdbusplus + sdeventplus (the two C++ wrappers for libsystemd; I think they are quite common in OpenBMC codes) for shorter and cleaner codes.\nI deliberately gave up using the sdeventplus library a year ago. At that time, its functionality was not enough and I had to write my own handlers.\nI would not rewrite this part of the code now, it is better to do such refactoring in a separate task."
        },
        {
            "timestamp": 1624657841,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1624657855,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624657969,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20782/ : SUCCESS"
        },
        {
            "timestamp": 1624658619,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1624658630,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624658912,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20783/ : SUCCESS"
        },
        {
            "timestamp": 1624658916,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 8:\n\n> Patch Set 6:\n> \n> > 1. There will be a single application (single binary), a single config, a single systemd unit, and a single recipe;\n> Great!\n> \n> > 2. I would still like to keep compile time flags to choose whether to build both modes; \n> It's not necessary, but I don't mind.\n> \n> > 3. I will add support to enable/disable modes at runtime: \n> >   a. register a property (something like mode_enabled) for the each mode (the buffer mode and the stream mode); \n> >   b. add a match to watch the property change;\n> >   c. if the property changes from enabled to disabled, dynamically mark corresponding sd_event_sources (for buffer mode, event sources will be io & signal; for stream mode, event sources will be just io) as disabled and remove matches if any (the buffer based service has a match for host states). The other ways work similarly, we can disable a service at runtime;\n> When I wrote about switching modes, I meant control through the settings file /etc/hostlogger/*.conf.\n> Configuring a service is a very rare operation, we do not need to have variables in the DBus for this. \n> It is enough to set up and start the corresponding modes in main(). \n> \n> > To implement such proposal, I plan to refactor some codes (service.cpp and dbusloop.cpp) and introduce sdbusplus + sdeventplus (the two C++ wrappers for libsystemd; I think they are quite common in OpenBMC codes) for shorter and cleaner codes.\n> I deliberately gave up using the sdeventplus library a year ago. At that time, its functionality was not enough and I had to write my own handlers.\n> I would not rewrite this part of the code now, it is better to do such refactoring in a separate task.\n\nThanks for your suggestion. Not having runtime mode switching simplifies codes a lot. The single service now has two modes that can be configured at startup time according to conf. I added the missing unit test for \"service.cpp\" as well. No recipe changes are needed except for a SRCREV bump."
        },
        {
            "timestamp": 1624658969,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 8:\n\nPTAL, thank you!"
        },
        {
            "timestamp": 1624777788,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1624819508,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1624819524,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624819568,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20833/ : FAILURE"
        },
        {
            "timestamp": 1624820226,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 10."
        },
        {
            "timestamp": 1624820244,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624820353,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 10: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20834/ : SUCCESS"
        },
        {
            "timestamp": 1624820799,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 11."
        },
        {
            "timestamp": 1624820824,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624820827,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 11:\n\n(2 comments)"
        },
        {
            "timestamp": 1624820931,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 11: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20835/ : SUCCESS"
        },
        {
            "timestamp": 1624837511,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 12."
        },
        {
            "timestamp": 1624837525,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624837624,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 13: New patch set was added with same tree, parent, and commit message as Patch Set 12."
        },
        {
            "timestamp": 1624837631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: -Ok-To-Test"
        },
        {
            "timestamp": 1624837635,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624837637,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 12: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20836/ : ABORTED"
        },
        {
            "timestamp": 1624837651,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 14."
        },
        {
            "timestamp": 1624837665,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624837668,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 13:\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20837/ : ABORTED"
        },
        {
            "timestamp": 1624837781,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 14: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20838/ : SUCCESS"
        },
        {
            "timestamp": 1624863533,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 14:\n\n(2 comments)"
        },
        {
            "timestamp": 1624894169,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 15."
        },
        {
            "timestamp": 1624894181,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624894228,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 15: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20929/ : FAILURE"
        },
        {
            "timestamp": 1624894338,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 16."
        },
        {
            "timestamp": 1624894351,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624894394,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 16: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/20930/ : FAILURE"
        },
        {
            "timestamp": 1624894524,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 17."
        },
        {
            "timestamp": 1624894536,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624894547,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 16:\n\n(1 comment)"
        },
        {
            "timestamp": 1624894559,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\n(1 comment)"
        },
        {
            "timestamp": 1624894642,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 17: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/20931/ : SUCCESS"
        },
        {
            "timestamp": 1624946086,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 17: Code-Review+1"
        },
        {
            "timestamp": 1624948120,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\nThanks for the +1! May I ask How to get a +2?"
        },
        {
            "timestamp": 1624958190,
            "reviewer": {
                "name": "Alexander Filippov",
                "email": "a.filippov@yadro.com",
                "username": "nest1ing"
            },
            "message": "Patch Set 17: Code-Review+1"
        },
        {
            "timestamp": 1624967143,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 17: Code-Review-1\n\n(4 comments)\n\nI really don't like this approach. As for me, the services, we talking about have different use cases in same domain: old to log boot messages and lastlogs before shutdown and new to stream realtime logs. \nWith how it is done now we have to choose which functions we want to have. Are you really sure this two service can not co-exists? From my point of view, they both have value at same time.\nI prefer to go one of the following ways:\n1) Single daemon who can write boot/shutdown logs and streaming realtime logs at same time. We can have configuration options to disable one or other function, but by default both are enabled.\n2) Two different daemons which hosed in the same repo and share common code and could be independently included to image with distro features. This already could threaded as common practice for OpenBMC (see EntityManager and dbus-service)."
        },
        {
            "timestamp": 1624971432,
            "reviewer": {
                "name": "Alexander Filippov",
                "email": "a.filippov@yadro.com",
                "username": "nest1ing"
            },
            "message": "Patch Set 17:\n\n> I really don't like this approach. As for me, the services, we talking about have different use cases in same domain: old to log boot messages and lastlogs before shutdown and new to stream realtime logs. \n> With how it is done now we have to choose which functions we want to have. Are you really sure this two service can not co-exists? From my point of view, they both have value at same time.\n> I prefer to go one of the following ways:\n> 1) Single daemon who can write boot/shutdown logs and streaming realtime logs at same time. We can have configuration options to disable one or other function, but by default both are enabled.\n\nI have a lot of doubts about the demand the such configuration, but I don't see any prevents to implement it. \nAnd I insist the original default behavior should be kept.\n\n> 2) Two different daemons which hosed in the same repo and share common code and could be independently included to image with distro features. This already could threaded as common practice for OpenBMC (see EntityManager and dbus-service).\n\nThis may be reached with this patch set by running two instances with different configs. But as I said above, I have doubts about the demand for it."
        },
        {
            "timestamp": 1624972867,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 17: -Code-Review\n\n> This may be reached with this patch set by running two instances with different configs. But as I said above, I have doubts about the demand for it.\n\nRight, I miss this. Then it could be a way to go, But I still prefer first variant."
        },
        {
            "timestamp": 1624986004,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 17:\n\n(4 comments)"
        },
        {
            "timestamp": 1624986025,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Uploaded patch set 18."
        },
        {
            "timestamp": 1624986047,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624986166,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 18: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21023/ : SUCCESS"
        },
        {
            "timestamp": 1625070371,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\nPTAL. Any other concerns?"
        },
        {
            "timestamp": 1625081393,
            "reviewer": {
                "name": "Alexander Filippov",
                "email": "a.filippov@yadro.com",
                "username": "nest1ing"
            },
            "message": "Patch Set 18: Code-Review+1"
        },
        {
            "timestamp": 1625081687,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 18: Code-Review+1"
        },
        {
            "timestamp": 1625116871,
            "reviewer": {
                "name": "Artem Senichev",
                "email": "artemsen@gmail.com",
                "username": "artemsen"
            },
            "message": "Patch Set 18: Code-Review+2"
        },
        {
            "timestamp": 1625117633,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\nThank you everyone!"
        },
        {
            "timestamp": 1625117737,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Patch Set 18:\n\n(2 comments)"
        },
        {
            "timestamp": 1625117741,
            "reviewer": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "message": "Change has been successfully merged by Nan Zhou"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "6216d8d46792bf11abbe73788394041b5bdbe8db",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/1",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624039492,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -3
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -21
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/stream_main.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 176,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 566,
            "sizeDeletions": 33
        },
        {
            "number": 2,
            "revision": "3006c1ceb9fc206225633110a7087c762ebd4ffa",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/2",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624039632,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -3
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -21
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/stream_main.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 176,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 565,
            "sizeDeletions": 33
        },
        {
            "number": 3,
            "revision": "1fcf98cf01fa8b3e1231f211bac974cbcdf79ab4",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/3",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624040396,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -3
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -21
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/stream_main.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 566,
            "sizeDeletions": 33
        },
        {
            "number": 4,
            "revision": "096ac31dd069067ef67a8a305f399631fc1ec681",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/4",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624041011,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 24,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -3
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -21
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/stream_main.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 121,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 177,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 566,
            "sizeDeletions": 33
        },
        {
            "number": 5,
            "revision": "59653b1653b6040443085b17c437d6709e73d44b",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/5",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624041043,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "README.md",
                    "line": 7,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "It is not true. Actually, there are two applications with the same name and you must chose the variant during the build process. The mode can not be configured at runtime."
                },
                {
                    "file": "README.md",
                    "line": 7,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nI reworded it into \"two applications\"."
                },
                {
                    "file": "default.conf",
                    "line": 2,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "These settings are not relevant to the stream mode."
                },
                {
                    "file": "default.conf",
                    "line": 2,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Added a new conf file for the stream app."
                },
                {
                    "file": "default.conf",
                    "line": 8,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "This option is not relevant to the buffered mode.\nI think this file needs to be split."
                },
                {
                    "file": "default.conf",
                    "line": 8,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Added a new conf file for the stream app."
                },
                {
                    "file": "meson.build",
                    "line": 38,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "Now you need to change the CI build scripts, since you need to build and test both build options."
                },
                {
                    "file": "meson.build",
                    "line": 38,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nActually majority of the codes (except for the main function) are built and tested in CI.\n\nBut now I turned on both applications by default. CI test both of them."
                },
                {
                    "file": "meson.build",
                    "line": 72,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "This dependency (zlib) is described in bb file, but it is not needed for stream mode.\nWill you create a standalone bb recipe for the stream based app?"
                },
                {
                    "file": "meson.build",
                    "line": 72,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Please see https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/44308"
                },
                {
                    "file": "src/config.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "It is not relevant to the old buffer mode.\n`#ifdef`?"
                },
                {
                    "file": "src/config.hpp",
                    "line": 35,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nAdded preprocessor."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 46,
                    "deletions": -3
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -21
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/stream_main.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 178,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 576,
            "sizeDeletions": 33
        },
        {
            "number": 6,
            "revision": "859c6973e3c2d2fe3643d7b0ac1956d50f36391e",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/6",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624315694,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why are we changing the name.  I would've expected this to just be a different configure option on the existing, as nobody would be running both mechanisms at the same time."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Do you mean runtime configure option? I did a compile-time configure option in previous patches (it builds the same binary but with different functionality)."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 7,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done. Went with two modes which users can choose during start-up time."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "configure option."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/config.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why doesn't the stream version support the same parameters?  presumably all those features would still need to be supported."
                },
                {
                    "file": "src/config.hpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "configs related to log rotation like maxFiles, bufMaxSize, and bufMaxTime are needed and will be added as a configuration of logrotate.\n\nThe flush option is not needed anymore. hostState is not used at the moment, it can be added in the future."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 51,
                    "deletions": -4
                },
                {
                    "file": "default_stream.conf",
                    "type": "ADDED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "hostlogger@.service",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "hostlogger_stream@.service",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 62,
                    "deletions": -33
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -1
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/stream_main.cpp",
                    "type": "ADDED",
                    "insertions": 39,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 130,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 74,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 178,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 636,
            "sizeDeletions": 47
        },
        {
            "number": 7,
            "revision": "52c5a1dc945491362b4d9d1efe87787fc61e9a6e",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/7",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624657841,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 51,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "hostlogger@.service",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "meson_options.txt",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -12
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -3
                },
                {
                    "file": "src/service.cpp",
                    "type": "MODIFIED",
                    "insertions": 104,
                    "deletions": -37
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 55,
                    "deletions": -11
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": -3
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 664,
            "sizeDeletions": 87
        },
        {
            "number": 8,
            "revision": "e5bc46bf8c27d1ce395114f4291b79a5349fa123",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/8",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624658619,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "default.conf",
                    "line": 2,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "This allows to activate both modes at the same time.\nDo we need to support such behavior?"
                },
                {
                    "file": "default.conf",
                    "line": 2,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done.\n\nWe don't need to support both modes at the same time as for now."
                },
                {
                    "file": "src/service.cpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "I would be better to split the Service implementation. Something like ServiceStream and ServiceBuffer.\nBut you will have to move out the DBus loop to the top."
                },
                {
                    "file": "src/service.cpp",
                    "line": 43,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 58,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 31,
                    "deletions": -12
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 18,
                    "deletions": -3
                },
                {
                    "file": "src/service.cpp",
                    "type": "MODIFIED",
                    "insertions": 104,
                    "deletions": -37
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 55,
                    "deletions": -11
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 52,
                    "deletions": -3
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 669,
            "sizeDeletions": 86
        },
        {
            "number": 9,
            "revision": "f5ea79f05e9eeaebad937a78e97333daeb26f547",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/9",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624819508,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -3
                },
                {
                    "file": "src/service.cpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -130
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 35,
                    "deletions": -3
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1229,
            "sizeDeletions": 209
        },
        {
            "number": 10,
            "revision": "a51d9e32bcd2ff779d8b66b706e3928e4fc0fc3f",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/10",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624820226,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 20,
                    "deletions": -3
                },
                {
                    "file": "src/service.cpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -130
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1251,
            "sizeDeletions": 211
        },
        {
            "number": 11,
            "revision": "aa1fdee67e3b00f953e3a56f7c52cb79c07a5f2a",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/11",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624820799,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "type": "ADDED",
                    "insertions": 135,
                    "deletions": 0
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.cpp",
                    "type": "DELETED",
                    "insertions": 0,
                    "deletions": -130
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1257,
            "sizeDeletions": 211
        },
        {
            "number": 12,
            "revision": "be10e63ebfac5fd17a532a0a742fe4480bb484f2",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/12",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624837511,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 31,
                    "deletions": -23
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1155,
            "sizeDeletions": 104
        },
        {
            "number": 13,
            "revision": "138b073a227faf734a7bafb5847e96cabb4ff9e4",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/13",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624837624,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "NO_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 31,
                    "deletions": -23
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/service_test.cpp",
                    "type": "ADDED",
                    "insertions": 235,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1155,
            "sizeDeletions": 104
        },
        {
            "number": 14,
            "revision": "ff7a12af91ea149bee88e7a22ca2a473a353e5e4",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/14",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624837651,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/buffer_service.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "You've already checked this in main().\nI would either remove the second comparison or replace it with assert()."
                },
                {
                    "file": "src/buffer_service.cpp",
                    "line": 41,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/main.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Artem Senichev",
                        "email": "artemsen@gmail.com",
                        "username": "artemsen"
                    },
                    "message": "These objects are belong to the service in the original code.\nDo we really need to move them out?"
                },
                {
                    "file": "src/main.cpp",
                    "line": 85,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "I changed the code here so no lifecylce issues anymore. \n\nI did the injection mostly for unit-testing. If you don't like it, for sure I can remove them from BufferService."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 31,
                    "deletions": -23
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 920,
            "sizeDeletions": 104
        },
        {
            "number": 15,
            "revision": "9d7f55e6340e75c089397654827520f9cee927df",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/15",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624894169,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 913,
            "sizeDeletions": 103
        },
        {
            "number": 16,
            "revision": "56b97c275c52bcaa6895c128cb2e85740b6f70dd",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/16",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624894338,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 162,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 913,
            "sizeDeletions": 103
        },
        {
            "number": 17,
            "revision": "f299f19fa9fc34270898e8430e96e0eed748c44b",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/17",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624894524,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "README.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "This shouldn't go from implementation details but from the goals: while what you called \"buffer mode\" aimed to provide pairs of \"startup log + shutdown log\", the new mode's goal is to provide latest logs in almost realtime. Given that I would name e.g. \"session mode\" and \"lastlog mode\"."
                },
                {
                    "file": "README.md",
                    "line": 14,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks for your comments! I added some words to describe the goals. These two names actually came from the discussion thread with Artem. I would like to keep the name of the new mode still \"stream\". I think \"stream\" already delivers the realtime meaning. \"buffer\" can be changed if necessary, is \"session mode\" the preferred name?"
                },
                {
                    "file": "README.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Please, unify style in both schemes"
                },
                {
                    "file": "README.md",
                    "line": 47,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Done"
                },
                {
                    "file": "README.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "Are you sure this mode should be mutually exclusive?"
                },
                {
                    "file": "README.md",
                    "line": 112,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "Thanks for your comment. This decision comes from earlier comment thread in this change. I believe as for now, we don't need these two modes running at the same time."
                },
                {
                    "file": "src/buffer_service.hpp",
                    "line": 2,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "At least it should be 2021..."
                },
                {
                    "file": "src/buffer_service.hpp",
                    "line": 2,
                    "reviewer": {
                        "name": "Nan Zhou",
                        "email": "nanzhoumails@gmail.com",
                        "username": "FighterNan"
                    },
                    "message": "This is aligned with existing codes from YADRO. Is it OK if we refresh the copyright in separate changes?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 53,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 905,
            "sizeDeletions": 103
        },
        {
            "number": 18,
            "revision": "042b5ba8438d1423f807feb5ef739cda063ea8d2",
            "parents": [
                "dfee0da0a855933a3d61df5d190d19d82a72bed7"
            ],
            "ref": "refs/changes/41/44241/18",
            "uploader": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "createdOn": 1624986025,
            "author": {
                "name": "Nan Zhou",
                "email": "nanzhoumails@gmail.com",
                "username": "FighterNan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": "README.md",
                    "type": "MODIFIED",
                    "insertions": 54,
                    "deletions": -4
                },
                {
                    "file": "default.conf",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/buffer_service.cpp",
                    "fileOld": "src/service.cpp",
                    "type": "RENAMED",
                    "insertions": 24,
                    "deletions": -22
                },
                {
                    "file": "src/buffer_service.hpp",
                    "type": "ADDED",
                    "insertions": 70,
                    "deletions": 0
                },
                {
                    "file": "src/config.cpp",
                    "type": "MODIFIED",
                    "insertions": 47,
                    "deletions": -11
                },
                {
                    "file": "src/config.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "src/dbus_loop.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -7
                },
                {
                    "file": "src/file_storage.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/host_console.hpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -4
                },
                {
                    "file": "src/log_buffer.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": -4
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 26,
                    "deletions": -3
                },
                {
                    "file": "src/service.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -41
                },
                {
                    "file": "src/stream_service.cpp",
                    "type": "ADDED",
                    "insertions": 106,
                    "deletions": 0
                },
                {
                    "file": "src/stream_service.hpp",
                    "type": "ADDED",
                    "insertions": 80,
                    "deletions": 0
                },
                {
                    "file": "test/buffer_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 154,
                    "deletions": 0
                },
                {
                    "file": "test/config_test.cpp",
                    "type": "MODIFIED",
                    "insertions": 57,
                    "deletions": -5
                },
                {
                    "file": "test/dbus_loop_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/file_storage_mock.hpp",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "test/host_console_mock.hpp",
                    "type": "ADDED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "test/log_buffer_mock.hpp",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": "test/meson.build",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "test/stream_service_test.cpp",
                    "type": "ADDED",
                    "insertions": 160,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 906,
            "sizeDeletions": 103
        }
    ]
}