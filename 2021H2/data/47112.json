{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "Ib4937970daa8af1c523866744474ed1bd8aa48dd",
    "number": 47112,
    "subject": "Add preservation whitelist config design",
    "owner": {
        "email": "ryonh@ami.com",
        "username": "ryonh"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/47112",
    "commitMessage": "Add preservation whitelist config design\n\nThis daemon will provide an interface to manage preserving settings\nacross BMC firmware upgrades.\n\nSigned-off-by: Ryon Heichelbech <ryonh@ami.com>\nChange-Id: Ib4937970daa8af1c523866744474ed1bd8aa48dd\n",
    "createdOn": 1632337849,
    "lastUpdated": 1639596299,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1632337849,
            "reviewer": {
                "email": "ryonh@ami.com",
                "username": "ryonh"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1632343059,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1:\n\nPlease take a look at https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#inclusive-naming. We as a project have tried to deprecate certain terms (i.e. whitelist == allowlist).\n\nOne issue we have with our AST2600 and eMMC usage is that we preserve /etc and /var across firmware updates. There are times where we'd like to do a mini factory reset, where we keep the network settings and maybe a few other things, but clear most everything else. I wonder if this design is something we could build on for that type of function. This is mostly a \"clean-up-the-lab-system\" type function."
        },
        {
            "timestamp": 1632497520,
            "reviewer": {
                "email": "ryonh@ami.com",
                "username": "ryonh"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> Please take a look at https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#inclusive-naming. We as a project have tried to deprecate certain terms (i.e. whitelist == allowlist).\n> \n> One issue we have with our AST2600 and eMMC usage is that we preserve /etc and /var across firmware updates. There are times where we'd like to do a mini factory reset, where we keep the network settings and maybe a few other things, but clear most everything else. I wonder if this design is something we could build on for that type of function. This is mostly a \"clean-up-the-lab-system\" type function.\n\nHello,\n\nI pushed a change for initrdscripts (which this design depends on) to remove the deprecated terminology.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/47200\nFor AST2600, /etc and /var are only preserved when flashing the normal `mtd.tar` images but not the `mtd.all.tar` images, in which case preservation is handled on a per-file basis by the update script. This design is to allow managing the configuration of this update script, which may be more desirable than preserving the entire rwfs for some use-cases."
        },
        {
            "timestamp": 1632759434,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n@Joseph, there feels like there are security implications to this.  Is there anyone you think should be involved in discussions?\n\nAdding Milton (init scripts) and Adriana (software update) for awareness."
        },
        {
            "timestamp": 1632944638,
            "reviewer": {
                "name": "Andrew Geissler",
                "email": "geissonator@yahoo.com",
                "username": "geissonator"
            },
            "message": "Patch Set 1:\n\n> Patch Set 1:\n> \n> > Patch Set 1:\n> > \n> > Please take a look at https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#inclusive-naming. We as a project have tried to deprecate certain terms (i.e. whitelist == allowlist).\n> > \n> > One issue we have with our AST2600 and eMMC usage is that we preserve /etc and /var across firmware updates. There are times where we'd like to do a mini factory reset, where we keep the network settings and maybe a few other things, but clear most everything else. I wonder if this design is something we could build on for that type of function. This is mostly a \"clean-up-the-lab-system\" type function.\n> \n> Hello,\n> \n> I pushed a change for initrdscripts (which this design depends on) to remove the deprecated terminology.\n> https://gerrit.openbmc-project.xyz/c/openbmc/openbmc/+/47200\n\nThanks for pushing the change! Please rename your design doc in this review and the git commit message title as well to match with the new naming conventions."
        },
        {
            "timestamp": 1632947899,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 1:\n\n(7 comments)\n\nThanks Patrick for adding me.\nSorry for the delayed response I was somewhat distracted."
        },
        {
            "timestamp": 1639595731,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\nIs there any update on this commit?  Should it be abandoned?"
        },
        {
            "timestamp": 1639596299,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 1:\n\nWhile I had considered something similar for the build system I haven't heard of an API or use case.  If we find one the other two layouts (MMC and UBI) would need a similar mechanism added as they don't have this concept since only etc is an overlay."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "371128b9ac41275749224dc5f6b19879fb73e876",
            "parents": [
                "a021c6c0ea017656b2849a56f7c18df1f270003e"
            ],
            "ref": "refs/changes/12/47112/1",
            "uploader": {
                "email": "ryonh@ami.com",
                "username": "ryonh"
            },
            "createdOn": 1632337849,
            "author": {
                "email": "ryonh@ami.com",
                "username": "ryonh"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 18,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Can you add your requirements to refine the \"all or nothing\" capability we have on ubi and eMMC with their init scripts?  It sounds like you want a targeted subsystem reset.  \n\nDo you anticipate a list of subsystems that should be reset?"
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 31,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "saving in the file is mechanism and sould be in proposed design not requirements.\n\nthe grouping concept here is ok"
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 39,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I am assuming that the exact values in this interface are yet to be defined."
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 72,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "keeping the list of groups in var/lib I agree with.\n\nI'm not sure about files with the paths being in /var (in rwfs), as I am concerned that it might be difficult to add additional paths in one of the groups.\n\nA counter proposal, based on something I've had in mind for ages but never implemented, is to have the groups as seperate files in a directory.   The update script couuld be modified to process all lines from all files in this directory, or all files with a given suffix, or just process the combined list, and have the init script combine all files when starting but keep the component files for this new daemon to customize the reset.  (If we use a required suffix then files could be removed from the list by renaming the file and restored by renaming it back).  (If we choose to have the lines consolidated, we could have the default script cat all components).\n\nUsing files each with a group of names would allow the files required to be moved to individual packages over time."
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 83,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I'd like to avoid having to configure a dependent package to the files, hence my refinements above..\n\nEither maintain the lists in the init package or allow individual subsystem packages to add their list.  (Disadvantage of the later is careful review clean paths with approprate directory or file checking).   \n\nWe may use the opertunity to move the init packages to phosphor-misc and build under meson."
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 86,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Also what if an admin wants to clear one subsystem but then restore normal preservation lists."
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "line": 90,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "If this is only a D-Bus interface where do you anticipate it being activated in production?"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 13,
                    "deletions": 0
                },
                {
                    "file": "designs/preservation-whitelist-config.md",
                    "type": "ADDED",
                    "insertions": 90,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 90,
            "sizeDeletions": 0
        }
    ]
}