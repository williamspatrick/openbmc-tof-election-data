{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I71c6b7e5284571e7462b0ea8737dde61cf951eca",
    "number": 47732,
    "subject": "otp-4: converge on meson",
    "owner": {
        "name": "Patrick Williams",
        "email": "patrick@stwcx.xyz",
        "username": "williamspatrick"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/47732",
    "commitMessage": "otp-4: converge on meson\n\n\"OpenBMC Technical Proposal #4\".\nResolves openbmc/technical-oversight-forum#4.\n\nFormally document the proposal associated with the issue.\n\nSigned-off-by: Patrick Williams <patrick@stwcx.xyz>\nChange-Id: I71c6b7e5284571e7462b0ea8737dde61cf951eca\n",
    "createdOn": 1633968723,
    "lastUpdated": 1640118791,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1633968723,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1634016510,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(3 comments)"
        },
        {
            "timestamp": 1634048339,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(2 comments)"
        },
        {
            "timestamp": 1634094704,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1634125802,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1634177253,
            "reviewer": {
                "name": "Lei YU",
                "email": "yulei.sh@bytedance.com",
                "username": "mine260309"
            },
            "message": "Patch Set 1:\n\n(2 comments)\n\nIf a repo is not updated to use meson and the recipe gets deleted, but the repo is necessary for most of the systems, who will be responsible to update the repo to use meson? Will there be some updates to the maintainers of the repo?"
        },
        {
            "timestamp": 1634217082,
            "reviewer": {
                "name": "Matt Spinler",
                "email": "spinler@us.ibm.com",
                "username": "spinler"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1634555015,
            "reviewer": {
                "name": "Joel Stanley",
                "email": "joel@jms.id.au",
                "username": "shenki"
            },
            "message": "Patch Set 1: Code-Review-1\n\nThere's very marginal benifits to creating a monoculture. I support efforts to create document best practice, but not to force any one particular technology.\n\nIf we had a rule such as this one in place from the start, enforcing autotools, then the project would have never evolved to use meson at all."
        },
        {
            "timestamp": 1635710334,
            "reviewer": {
                "name": "Andrei Kartashev",
                "email": "a.kartashev@yadro.com",
                "username": "alatarum"
            },
            "message": "Patch Set 1:\n\n(1 comment)"
        },
        {
            "timestamp": 1640118791,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Uploaded patch set 2."
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "df11c7f67de18c9e616d53d96c8db793027be32c",
            "parents": [
                "2cbf57a8a0bb8d95b0e19b7fc27c4f95cbd8609a"
            ],
            "ref": "refs/changes/32/47732/1",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1633968723,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 24,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Agreed to enforce meson for new repos."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Some repos are using C and autotools are used, what is the benefit to enforce such repos to use meson? The \"Rationale\" is mostly about C++20."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Lines 43-44 and 51-53 are still very relevant to C repositories."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "OK, but that's about why meson is easier (and probably better) choice for new repos.\n\nMy point is, if a repo not using meson is going to be deleted, it gives some bad expression that openbmc forces the build tools.\nAs an open community, deleting a repo seems \"too much\".\n\nHow about making it failure to pass CI so that new changes are enforced to use meson, but if an existing repo is not updated, it could be kept?"
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> OK, but that's about why meson is easier (and probably better) choice for new repos.\n\nMy view is that it is probably still a better choice for existing repos because they're likely not doing those things (ex. static analysis) if they are autotools based.  Thus they are not utilizing the current best practices in both the project and industry as a whole.\n\n> As an open community, deleting a repo seems \"too much\".\n\nBut I'm not suggesting deleting a repo.  I wrote that we would delete the _recipe_.  The code may still live in the individual repo and when they get it updated it can be reintegrated into the distribution, but until then it is kept out.\n\n> How about making it failure to pass CI so that new changes are enforced to use meson, but if an existing repo is not updated, it could be kept?\n\nAll this does is likely push the work onto the first person attempting to do any kind of API refactoring.  If the maintainer and the users cannot be bothered to get it updated, I don't want to put an impediment onto someone else attempting to make sweeping improvements.  There is no reason that, for example, adding a [[nodiscard]] to a function we realize is often mistakenly ignored should requirement to rewrite a whole repo into meson in order to get it in."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 32,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "> But I'm not suggesting deleting a repo.  I wrote that we would delete the _recipe_. \n\nOK, I missed the \"recipe\" part. Fair enough.\n\n> All this does is likely push the work onto the first person attempting to do any kind of API refactoring.\n\nOK, that's not a good option."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "As Ed indicated, it's not an easy and smooth way to convert to meson from cmake, gaps exist.\ncmake is modern and it support C++20 as well.\nThe \"Rationale\" about cmake is it lacks of tools to build outside of oe-sdk env. But one could either build and test it with openbmc-build-scripts, or some existing repos already has external_project defined to build in typical Linux system."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Do you have instances of patterns we are using in cmake that are hard to replicate in meson?  I\u2019ve done quite a bit of work on the autotools conversions already and tackled most of the \u201chard\u201d repositories that are doing python code generation.  My feeling was that most of the cmake repositories were much more straight-forward.  I\u2019ll certainly help out where needed if the conversions are especially difficult to align patterns between the two build systems.\n\nRe openbmc-build-scripts.  The time to build a meson repository with proper wrap files is in the order of 10s of seconds.  The time to build anything in openbmc-build-scripts, if you have the Docker images ready to go, is on the order of minutes.  If you don\u2019t have the Docker images ready to go you\u2019re looking at ~30 to build that.  This is a huge productivity hit in a normal code/compile/test development cycle.\n\nI thought I mentioned ExternalProject somewhere but it looks like I left it out of this doc.  I can add it here.  The issues I have with relying on ExternalProject are two-fold:\n* We\u2019re duplicating a pattern that we already have better support for in Meson, but currently ExternalProject isn\u2019t used everywhere and it isn\u2019t used in consistently similar ways.\n* The specifications for ExternalProject are not easily identifiable and updatable with scripts, compared to wrap files.  Many of our current ExternalProject users chose to pin to a particular commit in the dependent project and in order to find and update them we\u2019d have to write a CMake parser tool.  With wrapfiles they are separate and easily found with a `find -name` type invocation, which can be used to trivially update them all.  (ex. when nlohmann-json makes a new release how do we update all the users?)"
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Lei YU",
                        "email": "yulei.sh@bytedance.com",
                        "username": "mine260309"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Matt Spinler",
                        "email": "spinler@us.ibm.com",
                        "username": "spinler"
                    },
                    "message": "Since neither fan control repos are meson yet, won't removing both of their recipes break all of hardware CI? (cutting off nose to spite face?)\n\nThe work to convert phosphor-fan is planned, just need to get some higher priority milestones out of the way first."
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "line": 35,
                    "reviewer": {
                        "name": "Andrei Kartashev",
                        "email": "a.kartashev@yadro.com",
                        "username": "alatarum"
                    },
                    "message": "As we discussed on last TOF meeting, I propose to create kind of roadmap for migration with assigning responsible persons, instead of just say: this must be done or software will be removed."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "type": "ADDED",
                    "insertions": 71,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 71,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "9e2730b0b1556e001b9031ac604012ad7660de10",
            "parents": [
                "34accd8ec8d877c1aac97cf467cb0ba70678c4af"
            ],
            "ref": "refs/changes/32/47732/2",
            "uploader": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "createdOn": 1640118791,
            "author": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 15,
                    "deletions": 0
                },
                {
                    "file": "tof/proposals/otp-4.md",
                    "type": "ADDED",
                    "insertions": 72,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 72,
            "sizeDeletions": 0
        }
    ]
}