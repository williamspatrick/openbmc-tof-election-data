{
    "project": "openbmc/dbus-sensors",
    "branch": "master",
    "id": "I6ae9fb7d6e9fdd508f199bcdaf629411a2c96da6",
    "number": 47374,
    "subject": "Fix for sensor value PATCH in manufacturing mode",
    "owner": {
        "name": "Snehalatha Venkatesh",
        "email": "snehalathax.v@intel.com",
        "username": "Snehalatha44"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47374",
    "commitMessage": "Fix for sensor value PATCH in manufacturing mode\n\nIssue: Not able to PATCH sensor value in manufacturing mode, as\nmanufacturing mode is not getting updated after BMC reboot.\n\nAdded support to cache initial value of `SpecialMode` property on\nstartup and register for `InterfacesAdded` signal in case\n`specialmodemgr` service starts late.\n\nTested:\n1. Verified `manufacturingMode` value is getting updated as expected.\nVerified the same over different scenarios like service(specialmodemgr,\nhwmontempsensor, cpusensor) restart and `SpecialMode` property update.\n2. Verified PATCH operation is working as expected over BMC resets\nin manufacturing mode.\nPATCH - /redfish/v1/Chassis/<Board>/Thermal\n   Body:\n       {\n           \"Temperatures\": [\n               {\n                   \"MemberId\": \"Inlet_BRD_Temp\",\n                   \"ReadingCelsius\" : 20\n               }\n           ]\n        }\n   Response:\n      {\n          \"@odata.id\": \"/redfish/v1/Chassis/<Board>/Thermal\",\n          \"@odata.type\": \"#Thermal.v1_4_0.Thermal\",\n          \"Fans\": [],\n          \"Id\": \"Thermal\",\n          \"Name\": \"Thermal\",\n          \"Temperatures\": []\n      }\n\nSigned-off-by: Snehalatha Venkatesh <snehalathax.v@intel.com>\nSigned-off-by: Arun P. Mohanan <arun.p.m@linux.intel.com>\nChange-Id: I6ae9fb7d6e9fdd508f199bcdaf629411a2c96da6\n",
    "createdOn": 1633069152,
    "lastUpdated": 1636395763,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1633069152,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1633069162,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633069230,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Assignee added: AppaRao Puli <apparao.puli@linux.intel.com>"
        },
        {
            "timestamp": 1633069233,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Assignee deleted: AppaRao Puli <apparao.puli@linux.intel.com>"
        },
        {
            "timestamp": 1633069314,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27289/ : SUCCESS"
        },
        {
            "timestamp": 1633070904,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1633070922,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1633071070,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/27290/ : SUCCESS"
        },
        {
            "timestamp": 1633220895,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1633388012,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1633428658,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 3: Commit message was updated."
        },
        {
            "timestamp": 1633430066,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1633504194,
            "reviewer": {
                "name": "Manish Baing",
                "email": "manish.baing@intel.com",
                "username": "manishbaing"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1633510457,
            "reviewer": {
                "email": "smriti.ayushi@linux.intel.com",
                "username": "Smriti-Ayushi"
            },
            "message": "Patch Set 3:\n\n(4 comments)"
        },
        {
            "timestamp": 1633580963,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 4: Commit message was updated."
        },
        {
            "timestamp": 1633589657,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1633619875,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633631199,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(3 comments)"
        },
        {
            "timestamp": 1633650847,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4: Code-Review+1\n\n(1 comment)"
        },
        {
            "timestamp": 1633713356,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633733343,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1633735126,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634229772,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 4:\n\n(5 comments)"
        },
        {
            "timestamp": 1634510501,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(2 comments)"
        },
        {
            "timestamp": 1634559191,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1634571460,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634578095,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634599041,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1634875305,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 4:\n\n(4 comments)"
        },
        {
            "timestamp": 1635259315,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1635259327,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635259530,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/29055/ : FAILURE"
        },
        {
            "timestamp": 1635307764,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1635307778,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635307931,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29125/ : SUCCESS"
        },
        {
            "timestamp": 1635324659,
            "reviewer": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "message": "Patch Set 6:\n\n(5 comments)"
        },
        {
            "timestamp": 1635326524,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1635335613,
            "reviewer": {
                "name": "Mansi Joshi",
                "email": "mansi.joshi@linux.intel.com",
                "username": "Joshi-Mansi"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1635355205,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635407575,
            "reviewer": {
                "name": "Arun Lal K M",
                "email": "arun.lal@intel.com",
                "username": "arunlalkm-intel"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635410104,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635437794,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635438103,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 6:\n\nThe first patchset on this series was much closer to being correct and once the shared_ptr changes were backed out, could've merged.  I'm struggling a little because this patchset goes actively backwards by forcing a read every loop, which is a performance problem.  Lets keep talking through it."
        },
        {
            "timestamp": 1635465808,
            "reviewer": {
                "name": "Andrew Jeffery",
                "email": "andrew@aj.id.au",
                "username": "amboar"
            },
            "message": "Removed reviewer Andrew Jeffery."
        },
        {
            "timestamp": 1635540730,
            "reviewer": {
                "name": "Jonathan Doman",
                "email": "jonathan.doman@intel.com",
                "username": "jonathan-doman"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1635940552,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1635940574,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1635940815,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/29717/ : FAILURE"
        },
        {
            "timestamp": 1635955517,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 7:\n\n(1 comment)"
        },
        {
            "timestamp": 1636349358,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1636349373,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636349438,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1636349961,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29874/ : SUCCESS"
        },
        {
            "timestamp": 1636350179,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 8: Code-Review+1\n\n(2 comments)\n\nnit picks. code lgtm"
        },
        {
            "timestamp": 1636351301,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1636351315,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636351337,
            "reviewer": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1636351907,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/29878/ : SUCCESS"
        },
        {
            "timestamp": 1636362483,
            "reviewer": {
                "name": "AppaRao Puli",
                "email": "apparao.puli@linux.intel.com",
                "username": "apuli1"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1636391734,
            "reviewer": {
                "name": "Ed Tanous",
                "email": "ed@tanous.net",
                "username": "edtanous"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1636392226,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1636393000,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1636393797,
            "reviewer": {
                "name": "Zhikui Ren",
                "email": "zhikui.ren@intel.com",
                "username": "ZhikuiRen"
            },
            "message": "Patch Set 9: Code-Review+2"
        },
        {
            "timestamp": 1636395763,
            "reviewer": {
                "name": "Saravanan Palanisamy",
                "email": "saravanan.palanisamy@linux.intel.com",
                "username": "saravanan-palanisamy"
            },
            "message": "Change has been successfully merged by Saravanan Palanisamy"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "c855c4be1ab04d3d0e63605dc43773eb7946afae",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/74/47374/1",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1633069152,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/ExitAirTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/MCUTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 39,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 51,
            "sizeDeletions": 19
        },
        {
            "number": 2,
            "revision": "bd0a8a8bba297dbf28e523dd47b3b9b2e15cf17f",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/74/47374/2",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1633070904,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "More details here needed.  The old code looks more correct than the new code, and the new code adds a race condition while waiting for the mode switch to return."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "+1 more detail on the reasoning for the change please. Also PATCH is a not a dbus-sensors concept, please also describe the issue from dbus-sensors perspective, like externally writable/settable etc."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 9,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 525,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Why was this changed?  presumably the match doesn't need ownership of the connection."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 525,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Wanted to use conn in async_call_method"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 525,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Ah, I understand now why that was needed, but you don't need the new method call, so lets consider this one done and chase this down in the context of the other comment.  if the async_method_call is needed, this is fine."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 525,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Wait... nevermind, I don't understand.  You don't need a shared_ptr to access async_method_call.  I'm still not sure why this was changed."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "We are already maching on the propertiesChanged event from this interface, why do we need to get it again?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "As we enter manufacturing mode before the bmc bootup, sdbusplus checks the special mode when signal triggers. There are different sensor services in dbus-sensors are called after specialmode service, so signal triggering is not detected by sdbusplus. Manufacturing mode is not detected while validation Unsecure mode is getting detected as we set it after bmc boot.\n\nCan suggest us any other way to fix this?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> As we enter manufacturing mode before the bmc bootup, sdbusplus checks the special mode when signal triggers.\n\nAh, I think I understand now.  That makes some sense, I thought this was in the handler call.\n\nWhy is manufacturing mode happening before bmc bootup though?  Manufacturing mode by design is non-persistent, and doesn't get set before bmc bootup, given that it's a user interaction requirement, so I'm not sure how you could see this bug in a real system unless the design of manufacturing mode changed?\n\n> There are different sensor services in dbus-sensors are called after specialmode service, so signal triggering is not detected by sdbusplus.\n\nthis doesn't make sense to me.  sdbusplus is a dbus binding.  it doesn't \"detect\" anything.  The match expression itself \"detects\" the change, and if match expressions don't detect a change, that is a much more significant issue.\n\n> Manufacturing mode is not detected while validation Unsecure mode is getting detected as we set it after bmc boot.\n> \n> Can suggest us any other way to fix this?\n\nI'm happy to once I understand the problem, but right now, I'm not sure how you're even hitting this in a real system."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "Read through through the discussion and I think I understand now: the change is to \n1)start watching property change \n2) query the current property value \n\nThis is common order to avoid race conditions. \nI can see manufacturing mode set before sensors are created, like: service gets restarted, DC power is off was BMC booted, etc."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sure, but given that manufacturing mode requires user interaction, I'd like to understand how this can actually happen in practice without a service crash.  I don't see how that's possible."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "In theory, manufacturing mode can be enabled at boot time if a user is physically present to hold buttons. Plus, even though crash is not a normal case and should be all fixed ideally, make system gracefully recover (with service auto restart) from a service crash is also a goal. This patch should help to achieve it."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 600,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "I thought it also required a command?  But maybe that design has changed.  nbd.  lets get the patchset cleaned up of the extra shared_ptr stuff, and this should be fine."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 36,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/ExitAirTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/MCUTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 19
        },
        {
            "number": 3,
            "revision": "e6da512c26432ec854e152f0dc68dad68983bf8e",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/74/47374/3",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1633428658,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "I see Thermal path is being removed now.\nAnd all the sensors moved to '/redfish/v1/Chassis/<Baseboard>/Sensors' path.\nPlease test the code fix with latest."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "Commit talks about PATCH request.\nI see POST query mentioned here?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "With https://git-amr-2.devtools.intel.com/gerrit/#/c/340615/ review, Thermal path is back"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 16,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "FYI, you've linked an internal Intel commit that no one else can view."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 28,
                    "reviewer": {
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "For Inlet_BRD_Temp sensor below path I see now:\n\n\"@odata.id\": \"/redfish/v1/Chassis/<Baseboard>/Sensors/Inlet_BRD_Temp\""
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 34,
                    "reviewer": {
                        "email": "smriti.ayushi@linux.intel.com",
                        "username": "Smriti-Ayushi"
                    },
                    "message": "Body param is changed now. Please correct?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 531,
                    "reviewer": {
                        "name": "Manish Baing",
                        "email": "manish.baing@intel.com",
                        "username": "manishbaing"
                    },
                    "message": "Query : Why static cast added here ...?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 531,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "+1 the cast is unnecessary"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/ExitAirTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/MCUTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 19
        },
        {
            "number": 4,
            "revision": "60bf8e177632c6981a4ccbb9dfea2d0087e781d3",
            "parents": [
                "1e34cecad498e89fb52b4c73cb19e62a297f2329"
            ],
            "ref": "refs/changes/74/47374/4",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1633580963,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "include/Utils.hpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "should this function be exposed in the header or internal/static?"
                },
                {
                    "file": "include/Utils.hpp",
                    "line": 323,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "+1, It can be static function."
                },
                {
                    "file": "include/Utils.hpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "It could, although our rules on this are inconsistent at best, so I'm not too worried with either path."
                },
                {
                    "file": "include/Utils.hpp",
                    "line": 323,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 556,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Why is this removed? Can't manufacturing mode be entered at any time?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 556,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 556,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Manufacturing mode can't be entered during runtime of BMC so no use of checking inside signal. During boot time, This will be checked and set the appropriate state flag.( This is done at new code line no: 585).\n\nBut it won't harm leaving the check as is ( May be useful for different OEM's who can support runtime entering manufacturing mode), So i also vote for keeping code."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 556,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "Additionally, there is no service dependency between all the sensor services and the SpecialMode service, so when the sensor starts up, SpecialMode may not be available. Even in Intel's case where manufacturing mode isn't dynamic, we need to watch for it in the match (or maybe even need an additional InterfacesAdded match?)."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 556,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 556,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 561,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "unnecessary return"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 561,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 561,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "why capture conn?"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "+1"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 579,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "use std::get_if"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "While I agree that get_if would be better, exceptions are allowed in dbus-sensors, so it's up to the author if he wanted to make that change."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 579,
                    "reviewer": {
                        "name": "Snehalatha Venkatesh",
                        "email": "snehalathax.v@intel.com",
                        "username": "Snehalatha44"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 37,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/ADCSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/CPUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/ExitAirTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/FanMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/HwmonTempMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/IpmbSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/MCUTempSensor.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/NVMeSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/PSUSensorMain.cpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 40,
                    "deletions": -9
                }
            ],
            "sizeInsertions": 52,
            "sizeDeletions": 19
        },
        {
            "number": 5,
            "revision": "a99d5b3c60a726eb7cdc552382951fc736075939",
            "parents": [
                "b782eec69267206863c07f9ea26b475be7f0f291"
            ],
            "ref": "refs/changes/74/47374/5",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1635259315,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/Utils.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 62,
                    "deletions": -16
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 65,
            "sizeDeletions": 23
        },
        {
            "number": 6,
            "revision": "5c68ed9ee90c75ef0ae7aa6041c0d017caaa97ce",
            "parents": [
                "b782eec69267206863c07f9ea26b475be7f0f291"
            ],
            "ref": "refs/changes/74/47374/6",
            "uploader": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "createdOn": 1635307764,
            "author": {
                "name": "Snehalatha Venkatesh",
                "email": "snehalathax.v@intel.com",
                "username": "Snehalatha44"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "include/sensor.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "Sensor values are expected to be set on the order of once a second in some scenarios.  We can't be invoking a dbus method call for every set.\n\n\nAlso, you've now made the match unused, without actually removing it, although i think it's still required."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Arun Lal K M",
                        "email": "arun.lal@intel.com",
                        "username": "arunlalkm-intel"
                    },
                    "message": "@Ed, the code before this used to read /xyz/openbmc_project/security/special_mode once during boot up of dbus-sensors and store the value in a member variable (getManufactMode). The disadvantage of that approach is that if dbus-sensors boots up before /xyz/openbmc_project/security/special_mode interface is up, then the dbus call will fail and the member variable getManufactMode will always stay false. Which means user will never be able to set a value. \n\nWe can solve this in two ways\n1) Make sure dbus-senors boots up only after /xyz/openbmc_project/security/special_mode interface is up.\n2) Read /xyz/openbmc_project/security/special_mode interface every time we are trying to set a value. \n\nSnehalatha has implemented the 2nd method. \n\n@Snehalatha, I would suggest to stop the dbus call after the first successful read of the interface /xyz/openbmc_project/security/special_mode. \nThat is, if interface /xyz/openbmc_project/security/special_mode is not up 'if (ec){return;}' will be called. But once the interface is up and we are successfully able to read the manufacturing mode, stop the dbus calls. And just use getManufactMode from thereafter. \n\nAs manufacturing mode cannot change in runtime."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "I agree with Ed here. Adding a D-Bus call on every sensor value update will be an overhead.\n\nFrom @Arunlal's comment i understand the issue is because we are not getting the latest updated value for mfg mode since the specialModeManager starts late. To solve the same we can use a variable in sensor.hpp to cache the mfg mode and register for interface added signal with specialModeManager. So even after the initial D-Bus call to read the property failed, later once the service is up we get the interface added signal and we can read and cache the correct value.\n\nI suppose we are already monitoring for propertyChanged signal to listen for any further change in value."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Ed Tanous",
                        "email": "ed@tanous.net",
                        "username": "edtanous"
                    },
                    "message": "> @Ed, the code before this used to read /xyz/openbmc_project/security/special_mode once during boot up of dbus-sensors and store the value in a member variable (getManufactMode). The disadvantage of that approach is that if dbus-sensors boots up before /xyz/openbmc_project/security/special_mode interface is up, then the dbus call will fail and the member variable getManufactMode will always stay false. Which means user will never be able to set a value. \n> We can solve this in two ways\n1) Make sure dbus-senors boots up only after /xyz/openbmc_project/security/special_mode interface is up.\n2) Read /xyz/openbmc_project/security/special_mode interface every time we are trying to set a value. \n\nYou've forgotten option 3, which is read the property on startup AND set up a match to see if the property ever changes, which solves the startup race condition.  We use this same pattern all over the place to great effect.\n\n> As manufacturing mode cannot change in runtime.\n\nI would prefer to not rely on that assumption.  There are likely scenarios where it can change at runtime."
                },
                {
                    "file": "include/sensor.hpp",
                    "line": 105,
                    "reviewer": {
                        "name": "Jonathan Doman",
                        "email": "jonathan.doman@intel.com",
                        "username": "jonathan-doman"
                    },
                    "message": "> > As manufacturing mode cannot change in runtime.\n> \n> I would prefer to not rely on that assumption.  There are likely scenarios where it can change at runtime.\n\nIntel platforms automatically exit manufacturing mode after 15 minutes if no timer reset command is sent. So yes, we need to continue to monitor it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "include/sensor.hpp",
                    "type": "MODIFIED",
                    "insertions": 62,
                    "deletions": -16
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 62,
            "sizeDeletions": 22
        },
        {
            "number": 7,
            "revision": "9ab456b59b894f6965ca7b0df10c218ba9e735cf",
            "parents": [
                "3291b9c755458663b284d87fda8f580f7673ff76"
            ],
            "ref": "refs/changes/74/47374/7",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1635940552,
            "author": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/Utils.cpp",
                    "line": 595,
                    "reviewer": {
                        "name": "Zhikui Ren",
                        "email": "zhikui.ren@intel.com",
                        "username": "ZhikuiRen"
                    },
                    "message": "This assumes first property is SpecialMode, which is may not always be true."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 595,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 85,
                    "deletions": -38
                }
            ],
            "sizeInsertions": 85,
            "sizeDeletions": 38
        },
        {
            "number": 8,
            "revision": "8e78bfeb6bc6ca190ad97b83cf640824e7139fdb",
            "parents": [
                "9ca98ec9313568b75bb8eb40e845a03143a41d34"
            ],
            "ref": "refs/changes/74/47374/8",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1636349358,
            "author": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/Utils.cpp",
                    "line": 561,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "nit: Better make this as constexpr as its been used in many places."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 561,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "AppaRao Puli",
                        "email": "apparao.puli@linux.intel.com",
                        "username": "apuli1"
                    },
                    "message": "Log an error log, As this case should not hit at all. Its hitting means, there is some thing wrong."
                },
                {
                    "file": "src/Utils.cpp",
                    "line": 570,
                    "reviewer": {
                        "name": "Arun P M",
                        "email": "arun.p.m@linux.intel.com",
                        "username": "arun-pm"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 86,
                    "deletions": -38
                }
            ],
            "sizeInsertions": 86,
            "sizeDeletions": 38
        },
        {
            "number": 9,
            "revision": "45f844ac6ca41a6ed452fdc8add009d816e14665",
            "parents": [
                "9ca98ec9313568b75bb8eb40e845a03143a41d34"
            ],
            "ref": "refs/changes/74/47374/9",
            "uploader": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "createdOn": 1636351301,
            "author": {
                "name": "Arun P M",
                "email": "arun.p.m@linux.intel.com",
                "username": "arun-pm"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 44,
                    "deletions": 0
                },
                {
                    "file": "src/Utils.cpp",
                    "type": "MODIFIED",
                    "insertions": 89,
                    "deletions": -38
                }
            ],
            "sizeInsertions": 89,
            "sizeDeletions": 38
        }
    ]
}