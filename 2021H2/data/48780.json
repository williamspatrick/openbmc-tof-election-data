{
    "project": "openbmc/service-config-manager",
    "branch": "master",
    "topic": "usb-code-update",
    "id": "Iba7ffb541628d563e2c54c3e1c8c4dbe85f1507b",
    "number": 48780,
    "subject": "ADD USB Code Update enable/disable",
    "owner": {
        "name": "Chicago Duan",
        "email": "duanzhijia01@inspur.com",
        "username": "ChicagoDuan"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/service-config-manager/+/48780",
    "commitMessage": "ADD USB Code Update enable/disable\n\nphosphor_usb_code_update is an application that use USB to do FW\nupdate. phosphor_usb_code_update service is not a daemon, but an app\nthat will be called after inserting a USB flash disk.\n\nThis commit creates an object of phosphor_usb_code_update when\nphosphor_usb_code_update is not started. We can enable/disable\nphosphor_usb_code_update by setting the \"Enabled\" property to\ntrue/false.\n\nPlease configure the \u201cusb-code-update\u201d option in your bb/bbappend to\nenable this feature.\n\nFor phosphor_usb_code_update, useful rules files is\n/lib/udev/rules.d/70-bmc-usb.rules. When usb code update is disabled,\nsrvcfg_manager creates an empty symlink\n/etc/udev/rules.d/70-bmc-usb.rules, which causes\n/lib/udev/rules.d/70-bmc-usb.rules inoperative. When usb code update is\nenabled, srvcfg_manager deletes /etc/udev/rules.d/70-bmc-usb.rules.\n\nThe commits of phosphor_usb_code_update is:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/48742/1\n\nTest:\nget \"Enabled\" property\uff1a\nbusctl get-property xyz.openbmc_project.Control.Service.Manager\n/xyz/openbmc_project/control/service/phosphor_2dusb_2dcode_2dupdate\nxyz.openbmc_project.Control.Service.Attributes Enabled\nb true\n\nset \"Enabled\" property to false:\nbusctl set-property xyz.openbmc_project.Control.Service.Manager\n/xyz/openbmc_project/control/service/phosphor_2dusb_2dcode_2dupdate\nxyz.openbmc_project.Control.Service.Attributes Enabled b false\n\nbusctl get-property xyz.openbmc_project.Control.Service.Manager\n/xyz/openbmc_project/control/service/phosphor_2dusb_2dcode_2dupdate\nxyz.openbmc_project.Control.Service.Attributes Enabled\nb false\n\nThe \"Enabled\" property will be persisted\uff0creboot the BMC, then get the\n\"Enabled\" property\uff1a\nbusctl get-property xyz.openbmc_project.Control.Service.Manager\n/xyz/openbmc_project/control/service/phosphor_2dusb_2dcode_2dupdate\nxyz.openbmc_project.Control.Service.Attributes Enabled\nb false\n\nSigned-off-by: Chicago Duan <duanzhijia01@inspur.com>\nChange-Id: Iba7ffb541628d563e2c54c3e1c8c4dbe85f1507b\n",
    "createdOn": 1636621277,
    "lastUpdated": 1639680030,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1636621277,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1636621288,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636621364,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30134/ : SUCCESS"
        },
        {
            "timestamp": 1636622744,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Topic set to usb-code-update"
        },
        {
            "timestamp": 1636624250,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 2: Commit message was updated."
        },
        {
            "timestamp": 1636652969,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 2: Code-Review+1"
        },
        {
            "timestamp": 1636655157,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 2:\n\n(2 comments)\n\nThe design seems okay to me.  But I think the configuration must be persisted (saved) across BMC reboots; see my test case comment.\nAlso, I think the OpenBMC project default should be for this feature to be disabled by default.  Then IBM/OpenPower systems can enable it as needed."
        },
        {
            "timestamp": 1636712885,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1636939902,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1636939917,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1636940440,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30234/ : SUCCESS"
        },
        {
            "timestamp": 1636942560,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1636955785,
            "reviewer": {
                "name": "Richard Marian Thomaiyar",
                "email": "richard.marian.thomaiyar@linux.intel.com",
                "username": "rthomaiy"
            },
            "message": "Patch Set 3:\n\n(3 comments)"
        },
        {
            "timestamp": 1636965076,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1636965583,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1636990731,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n(1 comment)\n\nThe USB code update setting must persist across BMC reboots."
        },
        {
            "timestamp": 1636994467,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1637028957,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1637049776,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1637049788,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1637049871,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30303/ : SUCCESS"
        },
        {
            "timestamp": 1637049972,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1637049983,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1637050061,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/30304/ : SUCCESS"
        },
        {
            "timestamp": 1637051707,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 5:\n\n(5 comments)"
        },
        {
            "timestamp": 1637087457,
            "reviewer": {
                "name": "Brad Bishop",
                "email": "bradleyb@fuzziesquirrel.com",
                "username": "bradbishop"
            },
            "message": "Patch Set 5:\n\nThis might be a bit of design feedback in a code review but....\n\nWe should consider a udev rule that automatically launches the usb-code update service.  That application would then interact with phosphor-bmc-code-updates dbus API to perform the update. \nSystemd has support for this built-in with SYSTEMD_WANTS (https://www.man7.org/linux/man-pages/man5/systemd.device.5.html) - we already launch phosphor-hwmon in this manner.\n\nThen, service-config-manager could simply disable the usb code update systemd service like it does any other service."
        },
        {
            "timestamp": 1637133866,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 5:\n\nHi Brad,\n> We should consider a udev rule that automatically launches the usb-code update service.\n\nThat's what we do. Please see the commit\uff1ahttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/48236/4\n\n\n> Then, service-config-manager could simply disable the usb code update systemd service like it does any other service.\n\nphosphor_usb_code_update is not a daemon, but an app that will be called after inserting a USB flash disk. And after copying FW from USB to /tmp/images, phosphor_usb_code_update will exit. We can't find it by calling the systemd \"ListUnits\" method.\nOther services need to match the services listed in the \"ListUnits\" before creating an object.\nhttps://github.com/openbmc/service-config-manager/blob/master/src/main.cpp#L229\n\nSo I think we can't simply disable the usb code update systemd service like it does any other service.\nIf I am wrong, please point it out, thank you."
        },
        {
            "timestamp": 1637249279,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1637305993,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1638824262,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 5:\n\n(1 comment)"
        },
        {
            "timestamp": 1638840864,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1638840878,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1638841058,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/31332/ : SUCCESS"
        },
        {
            "timestamp": 1638841315,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 6:\n\n(1 comment)"
        },
        {
            "timestamp": 1638927421,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 6:\n\n> Patch Set 5:\n> \n> Hi Brad,\n> > We should consider a udev rule that automatically launches the usb-code update service.\n> \n> That's what we do. Please see the commit\uff1ahttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/48236/4\n> \n> \n> > Then, service-config-manager could simply disable the usb code update systemd service like it does any other service.\n> \n> phosphor_usb_code_update is not a daemon, but an app that will be called after inserting a USB flash disk. And after copying FW from USB to /tmp/images, phosphor_usb_code_update will exit. We can't find it by calling the systemd \"ListUnits\" method.\n> Other services need to match the services listed in the \"ListUnits\" before creating an object.\n> https://github.com/openbmc/service-config-manager/blob/master/src/main.cpp#L229\n> \n> So I think we can't simply disable the usb code update systemd service like it does any other service.\n> If I am wrong, please point it out, thank you.\n\nWe could disable the usb code update udev rule instead of exposing a d-bus property, by creating a symlink from /etc/udev/rules.d/70-bmc-usb.rules to /dev/null . I can help test that this disables the usb code update app from starting because the udev rule would not trigger. Then to re-enable it just delete the symlink."
        },
        {
            "timestamp": 1638997618,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 6: Code-Review-1\n\nI've confirmed that creating a udev rule symlink disables the code update service. I prefer we implement that so that there are no dependencies on the code update code required to check if a d-bus property exists, in that way the disabling is confined to this repo only. We can use std::filesystem::create_symlink() to create the symlink.\n\n* Disable code update:\nroot@p10bmc:~# ln -s /dev/null /etc/udev/rules.d/70-bmc-usb.rules\n* Plug USB key, code update does not start:\nDec 08 21:00:30 p10bmc kernel:  sdb: sdb1\nDec 08 21:00:30 p10bmc kernel: sd 1:0:0:0: [sdb] Attached SCSI removable disk\n\n* Enable code update:\nroot@p10bmc:~# rm /etc/udev/rules.d/70-bmc-usb.rules\n* Plug USB key, code update starts:\nDec 08 21:01:13 p10bmc kernel:  sdb: sdb1\nDec 08 21:01:13 p10bmc kernel: sd 1:0:0:0: [sdb] Attached SCSI removable disk\nDec 08 21:01:13 p10bmc systemd[1]: Started FW Code Update via USB sdb1."
        },
        {
            "timestamp": 1639033241,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1639033254,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639033339,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/31637/ : SUCCESS"
        },
        {
            "timestamp": 1639033442,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 7:\n\n> Patch Set 6: Code-Review-1\n> \n> I've confirmed that creating a udev rule symlink disables the code update service. I prefer we implement that so that there are no dependencies on the code update code required to check if a d-bus property exists, in that way the disabling is confined to this repo only. We can use std::filesystem::create_symlink() to create the symlink.\n> \n> * Disable code update:\n> root@p10bmc:~# ln -s /dev/null /etc/udev/rules.d/70-bmc-usb.rules\n> * Plug USB key, code update does not start:\n> Dec 08 21:00:30 p10bmc kernel:  sdb: sdb1\n> Dec 08 21:00:30 p10bmc kernel: sd 1:0:0:0: [sdb] Attached SCSI removable disk\n> \n> * Enable code update:\n> root@p10bmc:~# rm /etc/udev/rules.d/70-bmc-usb.rules\n> * Plug USB key, code update starts:\n> Dec 08 21:01:13 p10bmc kernel:  sdb: sdb1\n> Dec 08 21:01:13 p10bmc kernel: sd 1:0:0:0: [sdb] Attached SCSI removable disk\n> Dec 08 21:01:13 p10bmc systemd[1]: Started FW Code Update via USB sdb1.\n\nDone. Thanks, I have pushed a new patchset, please review it."
        },
        {
            "timestamp": 1639035341,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 7:\n\n(4 comments)"
        },
        {
            "timestamp": 1639040460,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 8."
        },
        {
            "timestamp": 1639040475,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639040550,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/31655/ : SUCCESS"
        },
        {
            "timestamp": 1639040567,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 8:\n\n(4 comments)"
        },
        {
            "timestamp": 1639078104,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 8: Code-Review+1"
        },
        {
            "timestamp": 1639102469,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 8:\n\n(2 comments)"
        },
        {
            "timestamp": 1639392245,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1639450194,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 9."
        },
        {
            "timestamp": 1639450207,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1639450284,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 9: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/31901/ : SUCCESS"
        },
        {
            "timestamp": 1639450378,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Patch Set 9:\n\n(2 comments)"
        },
        {
            "timestamp": 1639452404,
            "reviewer": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "message": "Uploaded patch set 10: Commit message was updated."
        },
        {
            "timestamp": 1639456725,
            "reviewer": {
                "name": "George Liu",
                "email": "liuxiwei@inspur.com",
                "username": "lxwinspur"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1639599857,
            "reviewer": {
                "name": "Adriana Kobylak",
                "email": "anoo@linux.ibm.com",
                "username": "anoo1"
            },
            "message": "Patch Set 10: Code-Review+1"
        },
        {
            "timestamp": 1639680030,
            "reviewer": {
                "name": "Bruce Mitchell",
                "email": "bruce.mitchell@linux.vnet.ibm.com",
                "username": "BMC-Bruce"
            },
            "message": "Patch Set 10: Code-Review+1"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "38de9dce09479b049082298242ef8f0e10b05922",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/1",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1636621277,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 42,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 62,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "1124861bc2c63321eb0619dea56ada41afb1ad59",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/2",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1636624250,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "NO_CODE_CHANGE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Please explain how a system integrator (the person who configures the firmware build environment) can:\n1. Configure this feature out of their image. Is this the meson USBCodeUpdate option?\n2. When USBCodeUpdate is enabled, how can the system integrator set the default value for the phosphor_usb_code_update property.  Should there be a meson build option for the default value?"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "> When USBCodeUpdate is enabled, how can the system integrator set > the default value for the phosphor_usb_code_update property. \n> Should there be a meson build option for the default value?\n\nThis hasn't come true yet. I'm working on it"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 17,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Please add test cases to show the code update property survives BMC reboot.  For example, set the property to true, then reboot the BMC, then validate the property is true.  Repeat for the \"false\" value."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "There is no persistence here. Restarting BMC will restore the default value. All other services, such as bmcweb/phosphor-ipmi-net and so on, will also restore their default values too."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "A requirement should be: This setting shall persist across BMC reboots.\nWhy?  It would be surprising to the BMC admin if rebooting the BMC re-enables the USB code update service.\nThe setting must survive BMC reboot to meet our needs.\n\nI believe the other services enablement setting (network IPMI, SSH, bmcweb, obmc-console service, etc.) persists across BMC reboots.  They are all systemd services, and the persistence of the setting is provided by systemd.  Can the testers confirm this?\n\nThis patch is fundamentally different because the setting is held in-memory in the service-config-manager app.\n\nHere are two independent ideas for how to persist the setting:\n1. Create a trivial do-nothing service which this can enable or disable.  In this way, systemd manages the setting.\n2. Write the setting to a file (for example, /etc/usb-code-update-enablement) whenever it is changed, and read it from that file when the service-config-manager app starts up."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I asked this question on the email list.  You can see the archived email, for example, here:\nhttps://lore.kernel.org/openbmc/d204389c-abf0-3547-ebfc-94af0b659bab@linux.ibm.com/T/#u"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "> I believe the other services enablement setting (network IPMI, SSH, bmcweb, \n> obmc-console service, etc.) persists across BMC reboots.  They are all systemd\n> services, and the persistence of the setting is provided by systemd.  Can the \n> testers confirm this?\n\nYes, you're right. I've tested it.\n\n> Here are two independent ideas for how to persist the setting:\n> 1. Create a trivial do-nothing service which this can enable or disable.  In \n> this way, systemd manages the setting.\n> 2. Write the setting to a file (for example, /etc/usb-code-update-enablement) \n> whenever it is changed, and read it from that file when the service-config-manager app starts up.\n\nI think #2 it's better. I'll do it. Thanks."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "> 2. Write the setting to a file (for example, /etc/usb-code-update-enablement) \n> whenever it is changed, and read it from that file when the service-config- manager app starts up.\n\nDone. Now this setting is persistent across BMC reboots."
                },
                {
                    "file": "src/main.cpp",
                    "line": 191,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Trying to understand why it is not added as part of ServiceName in line @37. If you can use #if flag and accordingly update the service name then it should be fine. \n\nReason: If we start adding multiple services like this, then code will not be maintainable. Let me know if there is any specific reason, which will not make it to work"
                },
                {
                    "file": "src/main.cpp",
                    "line": 191,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "> why it is not added as part of ServiceName in line @37\n\nphosphor_usb_code_update is not a daemon, but an application. We can't find it by calling the \"ListUnits\" method(line @237). Therefore, if it is added to the array at line 37, the object will not be created."
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 469,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "trying to understand the special handling needed for this scenario."
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 469,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "srvcfg_manager don't need to do anything to systemd when we enable/disable phosphor_usb_code_update, which is different from other services. srvcfg_manager only need to show the properties on the object. And another process will look for these properties: https://gerrit.openbmc-project.xyz/c/openbmc/service-config-manager/+/48780/5//COMMIT_MSG#25"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 46,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 5,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 62,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 79,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "ec8a0fdcd0f454ffec207ce221c7becf181e76a0",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/3",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1636939902,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Richard Marian Thomaiyar",
                        "email": "richard.marian.thomaiyar@linux.intel.com",
                        "username": "rthomaiy"
                    },
                    "message": "Do you envision logic for an end-user / company to block this update, by masking the service either temporarily (for that boot) / permanently (Across AC cycle) ?\nAny specific reason why it shouldn't be allowed. Please educate me, why it shouldn't be allowed."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 29,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "No, what this commit does is create a object for \"phosphor-usb-code-update\" application. \nUpdating FW with USB is a feature that we can disable it by set the \"Enabled\" property to false."
                },
                {
                    "file": "meson_options.txt",
                    "line": 3,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Remove, because it is `disabled` by default."
                },
                {
                    "file": "meson_options.txt",
                    "line": 3,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "meson_options.txt",
                    "line": 9,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "as above"
                },
                {
                    "file": "meson_options.txt",
                    "line": 9,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 51,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 11,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 71,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 97,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "8dbf256f63f03c05a0e28caac6423889393c034f",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/4",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1637049776,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 142,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 164,
            "sizeDeletions": 0
        },
        {
            "number": 5,
            "revision": "7e58e54fd8f0e1cf2ff8d148c36e257fe9c61aa9",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/5",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1637049972,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/main.cpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Adriana Kobylak",
                        "email": "anoo@linux.ibm.com",
                        "username": "anoo1"
                    },
                    "message": "Just a note that the usb code update service name has changed to usb-code-update@.service to keep it consistent with the rest of the service file names. Reference: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/48236/"
                },
                {
                    "file": "src/main.cpp",
                    "line": 194,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Why do we need a file?  Can we read this state from systemd using dbus calls?"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 185,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "No, We can't find phosphor_usb_code_update by calling systemd method.\nWhen BMC starts, phosphor_usb_code_update will not start.\nphosphor_usb_code_update will not start until a USB flash disk is inserted."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 8,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 145,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 167,
            "sizeDeletions": 0
        },
        {
            "number": 6,
            "revision": "6a44c9ae6ed8f6e3dca4d286d7bec62040a352ef",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/6",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1638840864,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 57,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 6,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 145,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 168,
            "sizeDeletions": 0
        },
        {
            "number": 7,
            "revision": "bd3d1744d4b2c6afe4afd37c7ed1a062cafca5ca",
            "parents": [
                "6e4a3f6faac8ddb8b3a17bebf6f5c8ac0977643a"
            ],
            "ref": "refs/changes/80/48780/7",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1639033241,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "Please rebase to the latest patch, and update it like this:\n`\"/xyz/openbmc_project/control/service/phosphor_2dusb_2dcode_2dupdate\"`\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/service-config-manager/+/49394"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 212,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 574,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "as above"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 574,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 625,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "as above"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 625,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 678,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "as above"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 678,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 201,
            "sizeDeletions": 0
        },
        {
            "number": 8,
            "revision": "12792acc14cd6de1075fe07acb6689cfba79376c",
            "parents": [
                "fa5d5ca73024c6be6a011184edad79a6cf2c7630"
            ],
            "ref": "refs/changes/80/48780/8",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1639040460,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "1. Need to check that the symlink exists.\n2. Add try-catch.\n\n```\ntry\n{\n    if (fs::is_symlink(xxx))\n    {\n        fs::remove(xxx);\n    }\n\n    fs::create_symlink(src, dst);\n}\ncatch (const std::exception& e)\n{\n    return false;\n}\n```"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "The existence of the symlink has been checked at line 72"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 76,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 96,
                    "reviewer": {
                        "name": "George Liu",
                        "email": "liuxiwei@inspur.com",
                        "username": "lxwinspur"
                    },
                    "message": "add blank line"
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "line": 96,
                    "reviewer": {
                        "name": "Chicago Duan",
                        "email": "duanzhijia01@inspur.com",
                        "username": "ChicagoDuan"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 177,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 201,
            "sizeDeletions": 0
        },
        {
            "number": 9,
            "revision": "a6de9e5532702e802a07a2b66b502079ef1e0883",
            "parents": [
                "fa5d5ca73024c6be6a011184edad79a6cf2c7630"
            ],
            "ref": "refs/changes/80/48780/9",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1639450194,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 0
        },
        {
            "number": 10,
            "revision": "e35416280ac82709b6004d590e678daf2223c7ad",
            "parents": [
                "fa5d5ca73024c6be6a011184edad79a6cf2c7630"
            ],
            "ref": "refs/changes/80/48780/10",
            "uploader": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "createdOn": 1639452404,
            "author": {
                "name": "Chicago Duan",
                "email": "duanzhijia01@inspur.com",
                "username": "ChicagoDuan"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "inc/srvcfg_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": 0
                },
                {
                    "file": "meson.build",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "meson_options.txt",
                    "type": "ADDED",
                    "insertions": 4,
                    "deletions": 0
                },
                {
                    "file": "src/main.cpp",
                    "type": "MODIFIED",
                    "insertions": 9,
                    "deletions": 0
                },
                {
                    "file": "src/srvcfg_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 186,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 210,
            "sizeDeletions": 0
        }
    ]
}