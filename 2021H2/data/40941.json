{
    "project": "openbmc/telemetry",
    "branch": "master",
    "topic": "telemetry",
    "id": "I243326e84833a8cb22075fbf565573b62b205b4a",
    "number": 40941,
    "subject": "Save persistent triggers to storage",
    "owner": {
        "email": "cezary.zwolak@intel.com",
        "username": "czwolak"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/telemetry/+/40941",
    "commitMessage": "Save persistent triggers to storage\n\nCreate json storage file for persistent triggers.\nHandle persistent dbus property.\nSave/remove persistent triggers on add/delete.\nCover code with UTs.\n\nTested:\n   - Passed unit tests\n   - Tested on QEMU\n     * adding new valid and invalid trigger from cli\n     * verifying if valid trigger is properly stored\n     * deleting existed trigger from storage\n\nChange-Id: I243326e84833a8cb22075fbf565573b62b205b4a\nSigned-off-by: Cezary Zwolak <cezary.zwolak@intel.com>\nSigned-off-by: Lukasz Kazmierczak <lukasz.kazmierczak@intel.com>\n",
    "createdOn": 1614264952,
    "lastUpdated": 1626679899,
    "open": false,
    "status": "MERGED",
    "comments": [
        {
            "timestamp": 1614264952,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1614264964,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614264986,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 1: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13049/ : FAILURE"
        },
        {
            "timestamp": 1614593965,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1614593980,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614594000,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 2: Verified-1\n\nBuild Failed \n\nhttps://jenkins.openbmc.org/job/ci-repository/13143/ : FAILURE"
        },
        {
            "timestamp": 1614605578,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1614605601,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1614606161,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 3: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13147/ : SUCCESS"
        },
        {
            "timestamp": 1614676853,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1614772858,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 3:\n\n(7 comments)"
        },
        {
            "timestamp": 1614773039,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1614855503,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 3:\n\n(2 comments)"
        },
        {
            "timestamp": 1614858077,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1614929993,
            "reviewer": {
                "name": "Adrian Ambro\u017cewicz",
                "email": "adrian.ambrozewicz@linux.intel.com",
                "username": "aambroze"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1614949620,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1615280697,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1615280711,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1615281273,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 4: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/13529/ : SUCCESS"
        },
        {
            "timestamp": 1615324303,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Patch Set 4:\n\n(9 comments)\n\nWelcome to my review changes, I am very nice person"
        },
        {
            "timestamp": 1615887439,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1616060471,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1616422087,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Patch Set 4:\n\n(2 comments)\n\nreview reply"
        },
        {
            "timestamp": 1616422287,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Uploaded patch set 5."
        },
        {
            "timestamp": 1616422297,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616423247,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 5: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14140/ : SUCCESS"
        },
        {
            "timestamp": 1616423629,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 5:\n\n(2 comments)"
        },
        {
            "timestamp": 1616446594,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Uploaded patch set 6."
        },
        {
            "timestamp": 1616446624,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1616446665,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Patch Set 6:\n\n(2 comments)\n\nReview reply"
        },
        {
            "timestamp": 1616447569,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 6: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/14152/ : SUCCESS"
        },
        {
            "timestamp": 1616489142,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 6: Code-Review+1"
        },
        {
            "timestamp": 1616491249,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1616600270,
            "reviewer": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "message": "Patch Set 6:\n\n(2 comments)\n\nReview reply"
        },
        {
            "timestamp": 1616601189,
            "reviewer": {
                "name": "Jozef Wludzik",
                "email": "jozef.wludzik@intel.com",
                "username": "jwludzik"
            },
            "message": "Patch Set 6:\n\n(2 comments)"
        },
        {
            "timestamp": 1618220608,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 6:\n\n(5 comments)"
        },
        {
            "timestamp": 1624968326,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Uploaded patch set 7."
        },
        {
            "timestamp": 1624968341,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1624968940,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 7: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21003/ : SUCCESS"
        },
        {
            "timestamp": 1625822025,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Uploaded patch set 8: Patch Set 7 was rebased."
        },
        {
            "timestamp": 1625822036,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Ok-To-Test+1\n\nUser approved, CI ok to start"
        },
        {
            "timestamp": 1625822631,
            "reviewer": {
                "name": "OpenBMC CI",
                "email": "openbmcbump-ci@yahoo.com",
                "username": "jenkins-openbmc-ci"
            },
            "message": "Patch Set 8: Verified+1\n\nBuild Successful \n\nhttps://jenkins.openbmc.org/job/ci-repository/21699/ : SUCCESS"
        },
        {
            "timestamp": 1625823427,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1625841923,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1626170880,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Patch Set 8:\n\n(5 comments)"
        },
        {
            "timestamp": 1626248707,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Patch Set 8:\n\n(1 comment)"
        },
        {
            "timestamp": 1626257886,
            "reviewer": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "message": "Uploaded patch set 9: Commit message was updated."
        },
        {
            "timestamp": 1626352433,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Patch Set 9: Code-Review+1"
        },
        {
            "timestamp": 1626426678,
            "reviewer": {
                "name": "Szymon Dompke",
                "email": "szymon.dompke@intel.com",
                "username": "sdompke"
            },
            "message": "Patch Set 9: Code-Review+2"
        },
        {
            "timestamp": 1626679899,
            "reviewer": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "message": "Change has been successfully rebased and submitted as a4e6761643f2ff306d6928ea5537eb151fae79a0 by Krzysztof Grobelny"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "8ca7db75b13b039230c2d3ddbb872ea7f1f24b1c",
            "parents": [
                "92cfff44d5790b7e59930e8a6acf15751a3cd891"
            ],
            "ref": "refs/changes/41/40941/1",
            "uploader": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "createdOn": 1614264952,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -2
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 102,
                    "deletions": -11
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -3
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 4,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 7,
                    "deletions": -5
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 276,
                    "deletions": -1
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -5
                }
            ],
            "sizeInsertions": 525,
            "sizeDeletions": 49
        },
        {
            "number": 2,
            "revision": "a3045fa3464d3670764050057a54abaf67d61d41",
            "parents": [
                "92cfff44d5790b7e59930e8a6acf15751a3cd891"
            ],
            "ref": "refs/changes/41/40941/2",
            "uploader": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "createdOn": 1614593965,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -2
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 102,
                    "deletions": -11
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -3
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/dbus_environment.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 276,
                    "deletions": -1
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 535,
            "sizeDeletions": 55
        },
        {
            "number": 3,
            "revision": "301fa8959681b5fb2f7d15476cf91f61228c4230",
            "parents": [
                "92cfff44d5790b7e59930e8a6acf15751a3cd891"
            ],
            "ref": "refs/changes/41/40941/3",
            "uploader": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "createdOn": 1614605578,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": ".gitignore",
                    "line": 1,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "This .gitignore file already has a vscode section which allows some configuration files to be used (see lines 157-163). To keep things tidy, make sure these files are still needed and keep all vscode rules in one place."
                },
                {
                    "file": ".gitignore",
                    "line": 1,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Good point. This gitignore file has been created automatically but it doesn't comply with OpenBMC standards. vscode part of gitignore allows for certain files to be tracked by git. I believe we should just remove the exceptions from vscode part."
                },
                {
                    "file": ".gitignore",
                    "line": 1,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "I would expect such changes to also be tested on real system in following scenarios:\n- starting app without configuration\n- restart app with configuration stored - it's restored properly\n- restart app with configuration in incorrect version \n- restart app with configuration malformed"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 15,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "In this patch, there is only \"save\" part. I going to push \"read\" part within the next patch and then I am going do test proposed scenarios in real system."
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "You sure we should initialize it with 'true'? Report doesn't initialize it's counterpart variable (persistency). It's set afterwards as a result of 'storeConfiguration()' outcome."
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 22,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "It is good practice to initialize everything when created. Later result of storeConfiguration is assigned to it."
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 22,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "If name is unique (and verified before by TriggerManager) why using std::hash here? Hashes have (little, but not exploitable) risk of collision"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "unexploitable*"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 25,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "dbus specification does not limit name/path length. The problem is when we try to save it to filesystem. There is a limit for a length of a path. To WA we use std::hash(). Same implementation is done in Report class.\nAbout collision detection, please, leave it as TODO. For me it might be not cover in this patch"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 25,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Ack"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "No 'ReportVersion' field indicating compatibility of file with application (update/downgrade scenarios). See Report::storeConfiguration()"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 98,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Of course I've meant 'equivalent to ReportVersion'"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 98,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "could be replaced with 'auto' - type is clearly deductible from get_if<> paremeter"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 111,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "Could this be replaced with https://en.cppreference.com/w/cpp/utility/variant/visit ?\nSee example 4 (visit with overloads for each underlying variant type).\nIt will make sure you handle all possible variant types and fail to compile otherwise"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 111,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 111,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 124,
                    "reviewer": {
                        "name": "Adrian Ambro\u017cewicz",
                        "email": "adrian.ambrozewicz@linux.intel.com",
                        "username": "aambroze"
                    },
                    "message": "could be replaced with 'auto' - type is clearly deductible from get_if<> paremeter"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 124,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 136,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Consider to moving it to function. Try to avoid `sut = nullptr`. Best would be to move tests to new class and inherit TestTrigger that overrides SetUp() so you do not have to set sut to nullptr.\nSimilar pattern is applied to TestReport and TestReportStore\nhttps://github.com/openbmc/telemetry/blob/master/tests/src/test_report.cpp#L233"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 136,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "+1\n\nYou can create new test class with empty SetUp, this way sup will be null ptr at this point, then with new function Jozef mention you can just call:\nsut = makeTrigger(triggerParams);"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 136,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -2
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 102,
                    "deletions": -11
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 13,
                    "deletions": -3
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 276,
                    "deletions": -1
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 533,
            "sizeDeletions": 54
        },
        {
            "number": 4,
            "revision": "b551f3b90abc9ad5a04caf343eb3bd3537b93134",
            "parents": [
                "9f9ff90a39219ff3a2f1179f74fc9a6dc857e5ab"
            ],
            "ref": "refs/changes/41/40941/4",
            "uploader": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "createdOn": 1615280697,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "src/trigger.cpp",
                    "line": 143,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "since in both cases you assing it to same field you can change it to something like this:\n\ndata[\"ThresholdParams\"] = std::visit()\n\nIn both cases you can return nlohmann::json object\n\nnit: try creaating visitor clas then it will look like this:\ndata[\"ThresholdParams\"] = std::visit(ThresholdParamToJson(), thresholdParams);\n\nVisitor class will be simple:\nclass ThresholdParamToJson {\npublic:\n  nlohmann::json operator()(const std::vector<numeric::ThresholdParam>& arg) {\n  return utils::transform(arg, [](const auto& thresholdParam) {\n                            const auto& [type, dwellTime, direction,\n                                         thresholdValue] = thresholdParam;\n                            return numeric::LabeledThresholdParam(\n                                numeric::stringToType(type), dwellTime,\n                                numeric::stringToDirection(direction),\n                                thresholdValue);\n                        });\n}\n\n  // same with other type\n}"
                },
                {
                    "file": "src/trigger.cpp",
                    "line": 143,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 249,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Shouldn't we also test discrete threshold paramaters?"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 249,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 23,
                    "deletions": -2
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 162,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 425,
            "sizeDeletions": 65
        },
        {
            "number": 5,
            "revision": "bc903787db91209ac55e1d3d1792d56d57578625",
            "parents": [
                "9f9ff90a39219ff3a2f1179f74fc9a6dc857e5ab"
            ],
            "ref": "refs/changes/41/40941/5",
            "uploader": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "createdOn": 1616422287,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "C:triggers.txt",
                    "line": 1,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Was this file supposed to be uploaded?"
                },
                {
                    "file": "C:triggers.txt",
                    "line": 1,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Ack"
                },
                {
                    "file": "triggers.txt",
                    "line": 1,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Was this file supposed to be uploaded?"
                },
                {
                    "file": "triggers.txt",
                    "line": 1,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Ack"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "C:triggers.txt",
                    "type": "ADDED",
                    "insertions": 587,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -2
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 212,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                },
                {
                    "file": "triggers.txt",
                    "type": "ADDED",
                    "insertions": 587,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 1677,
            "sizeDeletions": 65
        },
        {
            "number": 6,
            "revision": "e720c90d4d28d9da48796dbf7670e665fe7ed2dc",
            "parents": [
                "9f9ff90a39219ff3a2f1179f74fc9a6dc857e5ab"
            ],
            "ref": "refs/changes/41/40941/6",
            "uploader": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "createdOn": 1616446594,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": ".gitignore",
                    "line": 158,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Why do you remove it?"
                },
                {
                    "file": ".gitignore",
                    "line": 158,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "Szymon Dompke\nMar 04\nThis .gitignore file already has a vscode section which allows some configuration files to be used (see lines 157-163). To keep things tidy, make sure these files are still needed and keep all vscode rules in one place.\n\nAdrian Ambro\u017cewicz\nMar 05\nGood point. This gitignore file has been created automatically but it doesn't comply with OpenBMC standards. vscode part of gitignore allows for certain files to be tracked by git. I believe we should just remove the exceptions from vscode part."
                },
                {
                    "file": ".gitignore",
                    "line": 158,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ack"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Do not redefine triggerVersion, use the one that is already defined in Trigger class"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 12,
                    "reviewer": {
                        "email": "cezary.zwolak@intel.com",
                        "username": "czwolak"
                    },
                    "message": "I would like to keep it. Understand that if version changes, UT will fail and this is very good because we will have additional verification stage.\n\nhttps://jamesmead.org/blog/2006-10-11-developer-tests-and-double-entry-book-keeping"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 12,
                    "reviewer": {
                        "name": "Jozef Wludzik",
                        "email": "jozef.wludzik@intel.com",
                        "username": "jwludzik"
                    },
                    "message": "Ok, thanks for explanation"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "If there is no value in option it will cases access to not initialized memory.\n\nstd::optional<T> can be compared directly with type T"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 138,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done within second part patch: 'Read persistent triggers from storage'"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 153,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "Incorrect test name. Should be something like this, exceptionDuringStoreReportDissablesPersistency"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 153,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done within second part patch: 'Read persistent triggers from storage'"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "This should be stored as array of elements instead of array of array of elements.\n\nASSERT_THAT(storedConfiguration.at(\"ThresholdParams\"),\n            ElementsAre(expectedItem0, expectedItem1));"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 252,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done within second part patch: 'Read persistent triggers from storage'"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "inherit from TestTriggerStore,\n\nON_CALL(storageMock, store(_, _))\n            .WillByDefault(SaveArg<1>(&storedConfiguration));\n\ncan be moved to TestTriggerStore constructor\n\nthis way some code duplication can be removed"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 255,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Ack for second part patch: 'Read persistent triggers from storage'"
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 287,
                    "reviewer": {
                        "name": "Krzysztof Grobelny",
                        "email": "krzysztof.grobelny@intel.com",
                        "username": "krzysztof-i"
                    },
                    "message": "nit: Move to line 300 or 301, when possible asserts should be grouped together in tests."
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "line": 287,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done within second part patch: 'Read persistent triggers from storage'"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 18,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -2
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 27,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 24,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 212,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 503,
            "sizeDeletions": 65
        },
        {
            "number": 7,
            "revision": "74f6dab92895a0987428fc933f339fa302a8fdfe",
            "parents": [
                "85db8bdfac85e26742926f5aa6a938fe71d10cff"
            ],
            "ref": "refs/changes/41/40941/7",
            "uploader": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "createdOn": 1624968326,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 162,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 63
        },
        {
            "number": 8,
            "revision": "2eaf0a88af97befd32c76a903703f862b039d5fd",
            "parents": [
                "4ab1d496d8a50d0466afb7f49668c40758bfe6a9"
            ],
            "ref": "refs/changes/41/40941/8",
            "uploader": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "createdOn": 1625822025,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "TRIVIAL_REBASE",
            "comments": [
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Szymon Dompke",
                        "email": "szymon.dompke@intel.com",
                        "username": "sdompke"
                    },
                    "message": "Can you also check if configuration is saved in runtime (or at least on qemu)? I guess you have already done it, but it would be nice to have this information in 'Tested:' section."
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Ack"
                },
                {
                    "file": "/COMMIT_MSG",
                    "line": 14,
                    "reviewer": {
                        "name": "Lukasz Kazmierczak",
                        "email": "lukasz.kazmierczak@intel.com",
                        "username": "kazmierczak-lukasz"
                    },
                    "message": "Done"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 19,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 162,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 63
        },
        {
            "number": 9,
            "revision": "4344461e0a08f89f77448f2cc10a816c8ce179b0",
            "parents": [
                "4ab1d496d8a50d0466afb7f49668c40758bfe6a9"
            ],
            "ref": "refs/changes/41/40941/9",
            "uploader": {
                "name": "Lukasz Kazmierczak",
                "email": "lukasz.kazmierczak@intel.com",
                "username": "kazmierczak-lukasz"
            },
            "createdOn": 1626257886,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "NO_CODE_CHANGE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 162,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 63
        },
        {
            "number": 10,
            "revision": "a4e6761643f2ff306d6928ea5537eb151fae79a0",
            "parents": [
                "d2620704f721c60f730404c47c15b5f061b29d4c"
            ],
            "ref": "refs/changes/41/40941/10",
            "uploader": {
                "name": "Krzysztof Grobelny",
                "email": "krzysztof.grobelny@intel.com",
                "username": "krzysztof-i"
            },
            "createdOn": 1626679899,
            "author": {
                "email": "cezary.zwolak@intel.com",
                "username": "czwolak"
            },
            "kind": "TRIVIAL_REBASE",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 23,
                    "deletions": 0
                },
                {
                    "file": ".gitignore",
                    "type": "MODIFIED",
                    "insertions": 0,
                    "deletions": -4
                },
                {
                    "file": "src/interfaces/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": -1
                },
                {
                    "file": "src/interfaces/trigger_types.hpp",
                    "type": "MODIFIED",
                    "insertions": 22,
                    "deletions": 0
                },
                {
                    "file": "src/interfaces/types.hpp",
                    "type": "MODIFIED",
                    "insertions": 1,
                    "deletions": -1
                },
                {
                    "file": "src/telemetry.hpp",
                    "type": "MODIFIED",
                    "insertions": 3,
                    "deletions": 0
                },
                {
                    "file": "src/trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 107,
                    "deletions": -12
                },
                {
                    "file": "src/trigger.hpp",
                    "type": "MODIFIED",
                    "insertions": 15,
                    "deletions": -4
                },
                {
                    "file": "src/trigger_factory.cpp",
                    "type": "MODIFIED",
                    "insertions": 10,
                    "deletions": -9
                },
                {
                    "file": "src/trigger_factory.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": -1
                },
                {
                    "file": "src/trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 5,
                    "deletions": -2
                },
                {
                    "file": "src/trigger_manager.hpp",
                    "type": "MODIFIED",
                    "insertions": 2,
                    "deletions": 0
                },
                {
                    "file": "src/utils/tstring.hpp",
                    "type": "MODIFIED",
                    "insertions": 56,
                    "deletions": 0
                },
                {
                    "file": "tests/src/mocks/trigger_factory_mock.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -9
                },
                {
                    "file": "tests/src/params/trigger_params.hpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -8
                },
                {
                    "file": "tests/src/test_trigger.cpp",
                    "type": "MODIFIED",
                    "insertions": 162,
                    "deletions": -6
                },
                {
                    "file": "tests/src/test_trigger_manager.cpp",
                    "type": "MODIFIED",
                    "insertions": 12,
                    "deletions": -6
                }
            ],
            "sizeInsertions": 424,
            "sizeDeletions": 63
        }
    ]
}