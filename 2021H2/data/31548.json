{
    "project": "openbmc/docs",
    "branch": "master",
    "id": "I52e2a1fc51b485d5d427b8c3d2992dbf8f86461e",
    "number": 31548,
    "subject": "Add an IPMI over DTLS design document",
    "owner": {
        "name": "Vernon Mauery",
        "email": "vernon.mauery@linux.intel.com",
        "username": "vmauery"
    },
    "url": "https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/31548",
    "commitMessage": "Add an IPMI over DTLS design document\n\nThis proposed a way to effectively replace the session initiation of\nRMCP+ with DLTS in a new scheme can be called RMCP+DTLS.\n\nv4 adds some more details and clarifies various sections from comments\nin review.\n\nTested: At this point, given the positive feedback, I have a working\n    proof of concept that demonstrates that the ideas work for a\n    certificate-based authentication RMCP+DTLS session.\n\nChange-Id: I52e2a1fc51b485d5d427b8c3d2992dbf8f86461e\nSigned-off-by: Vernon Mauery <vernon.mauery@linux.intel.com>\n",
    "createdOn": 1587392899,
    "lastUpdated": 1630656086,
    "open": true,
    "status": "NEW",
    "comments": [
        {
            "timestamp": 1587392899,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Uploaded patch set 1."
        },
        {
            "timestamp": 1587397562,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 1:\n\n(3 comments)\n\nA quick review."
        },
        {
            "timestamp": 1587402698,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Uploaded patch set 2."
        },
        {
            "timestamp": 1587402840,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(3 comments)"
        },
        {
            "timestamp": 1587641214,
            "reviewer": {
                "name": "Alexander Amelkin",
                "email": "a.amelkin@yadro.com",
                "username": "AlexanderAmelkin"
            },
            "message": "Patch Set 2:\n\n(12 comments)"
        },
        {
            "timestamp": 1587645465,
            "reviewer": {
                "name": "Alexander Tereschenko",
                "email": "aleksandr.v.tereschenko@intel.com",
                "username": "alext-w"
            },
            "message": "Patch Set 2:\n\n(6 comments)\n\nIn general, I like the direction (as discussed in the mail list), my only concern would be to make [ideally] no changes into existing protocols, as that's error-prone, but try to somehow encapsulate things. More specific comments inline."
        },
        {
            "timestamp": 1587646314,
            "reviewer": {
                "name": "Alexander Tereschenko",
                "email": "aleksandr.v.tereschenko@intel.com",
                "username": "alext-w"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1587724849,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1587767772,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(13 comments)\n\nI didn't get to all the comments, but based on one, I think I will rework this to use the initial packet detection method, which should make things a lot simpler from the start, without the need to 'upgrade' the connection with STARTTLS.\n\nI will keep the current method as one of the considered possibilities though. Thanks for your reviews and comments."
        },
        {
            "timestamp": 1588100045,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(2 comments)"
        },
        {
            "timestamp": 1588166101,
            "reviewer": {
                "name": "Alexander Amelkin",
                "email": "a.amelkin@yadro.com",
                "username": "AlexanderAmelkin"
            },
            "message": "Patch Set 2:\n\n(4 comments)"
        },
        {
            "timestamp": 1597350227,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 2:\n\n(1 comment)\n\nAdd a new alternate design."
        },
        {
            "timestamp": 1598985156,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 2:\n\n(1 comment)"
        },
        {
            "timestamp": 1598985165,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Uploaded patch set 3."
        },
        {
            "timestamp": 1599602701,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 3:\n\n(5 comments)\n\nLooks good to me."
        },
        {
            "timestamp": 1623804626,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 3:\n\n(2 comments)\n\nI spent too much time reading TLS and other rfcs the past two weekends so I came back and read through this."
        },
        {
            "timestamp": 1623900433,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 3:\n\n(1 comment)"
        },
        {
            "timestamp": 1628047024,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Uploaded patch set 4."
        },
        {
            "timestamp": 1628047055,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 3:\n\n(6 comments)\n\nI think I have the comments covered. New version incoming...."
        },
        {
            "timestamp": 1629754483,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\nMilton, Joseph, Alexander - Are you satisfied with the updates from Vernon?"
        },
        {
            "timestamp": 1630090908,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 4: Code-Review-1\n\n(1 comment)\n\n> Patch Set 4:\n> \n> Milton, Joseph, Alexander - Are you satisfied with the updates from Vernon?\n\nSee inline."
        },
        {
            "timestamp": 1630464754,
            "reviewer": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1630503249,
            "reviewer": {
                "name": "Patrick Williams",
                "email": "patrick@stwcx.xyz",
                "username": "williamspatrick"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1630504976,
            "reviewer": {
                "name": "Milton D. Miller II",
                "email": "miltonm@us.ibm.com",
                "username": "mdmillerii"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1630505749,
            "reviewer": {
                "name": "Joseph Reynolds",
                "email": "joseph-reynolds@charter.net",
                "username": "joseph-reynolds"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        },
        {
            "timestamp": 1630646084,
            "reviewer": {
                "name": "Ratan Gupta",
                "email": "ratankgupta31@gmail.com",
                "username": "ratagupt"
            },
            "message": "Patch Set 4:\n\n(1 comment)"
        }
    ],
    "patchSets": [
        {
            "number": 1,
            "revision": "0280a801c60889ff41643c413d908f99624e65da",
            "parents": [
                "f134cfd54e157e28d5e29d68e88a0652d75b9bec"
            ],
            "ref": "refs/changes/48/31548/1",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1587392899,
            "author": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 34,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Please add references for DTLS."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 34,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Fragment or strange phrasing."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 154,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "this as ... presumable this is, but seems to be a omnipotent claim.\n\nWhy would TLS be better than DTLS ?"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 160,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "TLS over UDP is DLTS. Should have been more clear with that. I reworded some of this paragraph to make it more clear what this option was about."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "type": "ADDED",
                    "insertions": 180,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 180,
            "sizeDeletions": 0
        },
        {
            "number": 2,
            "revision": "df716efbf2587872b91e5cd8032c1d86540ba93e",
            "parents": [
                "f134cfd54e157e28d5e29d68e88a0652d75b9bec"
            ],
            "ref": "refs/changes/48/31548/2",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1587402698,
            "author": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "Looks like Oracle has implemented something along the same lines, but it's not open source. Maybe they would be willing to open it, if they're participating in OpenBMC? :)\nhttps://docs.oracle.com/cd/E37444_01/html/E37451/z40000061645388.html"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 1,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "It looks like they are using TCP (just TLS, not DTLS). They have apparently modified ipmitool, but since ipmitool uses a BSD-style license, they are not required to provide their changes. So I am not sure on the details of their protocol. As far as I know, Oracle is not participating in OpenBMC."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 83,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "Since \"Get Channel Authentication\" is outside of DTLS, doesn't that leave you just as exposed to a MiM?  I can just tell you that this BMC doesn't support DTLS, capture your RMCP+ content and forward it on to the BMC as DTLS.\n\nMaybe this isn't much different from HTTPS though where a browser falls back to HTTP and we have to leave it up to the client to add a --ensure-im-using-dtls option."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 83,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Yes, this would leave you open to an initial MitM attack in this scenario.\n\nI know that ipmitool is not the only client, but it is the one that I am most familiar with. With ipmitool, you must request which 'interface' you want. So this would be a scenario where you request to connect with dtls and if the remote BMC (or the MitM) did not support that it would fail to connect.\n\nThat being said, I think I agree with Alexander Tereschenko that we should just skip straight to the TLS handshake and then perform all IPMI session initiation and discovery within that secure session."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "What's the use in overriding the reserved bits if we can tell that DTLS is supported just by looking at OpenBMC id in bytes 6:8 and some bits in byte 9?\nI'm worried that treating reserved bits in the proposed way may bring some incompatibility with existing BMC implementations for the IPMI tools like ipmitool et. al."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "While I'm also wary of using the reserved bits, tying this to OpenBMC identification may limit the proliferation of this - what if other BMC stack vendors would want to implement this? In addition, not all OpenBMC versions would support this mechanism, so some sort of dynamic discovery is I think preferred."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "> What's the use in overriding the reserved bits if we can tell that DTLS is supported just by looking at OpenBMC id in bytes 6:8 and some bits in byte 9?\nI'm worried that treating reserved bits in the proposed way may bring some incompatibility with existing BMC implementations for the IPMI tools like ipmitool et. al.\n\nThis entire thing is \"off-spec\". We are creating a de-facto standard here for running RMCP+ over DTLS. That won't currently work with any tool. I was hoping that since we have ipmitool contributors, the ipmitool maintainer, OpenBMC IPMI contributors and OpenBMC IPMI maintainers here in the same room, we could come to a reasonable implementation on both ends of the wire.\n\nThere are no plans for an updated IPMI specification, so it is very unlikely that any reserved bits would get used in a future specification. Even if they were, we could probably convince the spec writers to include this de-facto standard in the IPMI specification, especially if it has wide acceptance.\n\nThat being said, I am not tied to exactly *this* version of the standard. I just wanted to get something rolling. It is time we get rid of RMCP+."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 91,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Do we also have OpenIPMI and ipmiutil maintaners in the same room with us?\nI realize that if we hijack those bits and make them a de facto standard, those products will have to become compatible, but it's a kind of old Microsoft way, which I personally have always hated. If there is a way to introduce a more secure and overall better protocol while keeping as much compatibilty as possible, I would prefer that way. That's why I asked what was the purpose of using those bits. If you really think we can't do without them, then fine. But so far it looks to me like we can go without hijacking the reserved bits by just using the hooks for extensions that are already in IPMI 2.0."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "strictly speaking, it is \"IANA PEN\", not just \"IANA\"."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 94,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 98,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "I would right away define some OEM command to fetch the version of encoding of this byte.\nThat is, if bytes 6-8 are OpenBMC PEN, then fetch the version via an OEM command and then based on that data decode this byte 9. That version could also be used to differentiate other OEM field meanings."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 101,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "I'd say \"If ... provides OpenBMC IANA PEN in bytes 6-8 and <something else>\", leaving those reserved bits alone."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Why accept 4 with 'STARTTLS' ? Let's limit it to just 5."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 108,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "The idea was that if 4 is set, then the session would not by attempting to use mutual TLS authentication. But we could just stick with 5 and then require some sort of authentication after the TLS session is started (assuming that mTLS auth did not happen)."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "I suppose, if we only leave 5 (OEM proprietary auth), then the BMC would respond with a CCh completion code (Invalid data field in request) if no OEM proprietary auth is supported or with a 81h (invalid user name) indeed if there is some OEM auth, but there was no user named STARTTLS. An IPMI client though should not attempt to request a session challenge for STARTTLS 'user' if Get Channel Auth Capabilities didn't report an OpenBMC identification and the corresponding OEM command mentioned earlier didn't indicate support for RMCP+DTLS."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "I guess we'll need a separate document to capture all the OEM / Device-specific completion codes (range 01h-7Eh) used by OpenBMC. Also, doesn't this specific case fall under 06h (No matching authentication payload) ?"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 125,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "This is a bonafide IPMI command and needs to respond with an IPMI completion code, not a RAKP status code. It might be possible to use Invalid Parameter or something instead."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Looks very much like RMCP+ 04h (Invalid authentication algorithm)."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 128,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "This is a bonafide IPMI command and needs to respond with an IPMI completion code, not a RAKP status code. It might be possible to use Invalid Parameter or something instead."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "How exactly that is specified in the request? I suppose auth type 5 (OEM) implies password auth, doesn't it? I don't see any other options."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I intended 4 to be password auth and 5 to be mTLS auth."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Well, ok... But then I don't get it how it is supposed to pass both a username and a password if the username field is used to pass the `STARTTLS` greeting. At least that needs to be elaborated on in this document."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 136,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "I wonder how does this match the foundational idea of no longer storing passwords on the BMC? Do you mean that something like \"straight password\" would be used here and the BMC would check that against PAM? Just trying to understand the idea."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 136,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Yes. While not perfect, a straight password (once the TLS session is established) could be used by PAM to authenticate the user. This way, we would no longer need to store the plaintext password on the BMC."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Again, how exactly in that command anyone could request a certificate authentication?"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "And in general, the request for client certificate is a part of the standard TLS handshake, so I don't think we need to duplicate this piece at the IPMI level."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I guess at this point, it is more a question of how do we detect if the user has been authenticated after the session has been established.\n\nThe client knows if it has attempted mTLS auth. I assume they will get some sort of error if that does not succeed. If it failed and the BMC supports password authentication, they need to then start that. If the BMC does not support password authentication, it would need to bail on the connection then."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "That would be \"TLS\" (the protocol), not OpenSSL (the library)"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 139,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Won't CCh (Invalid data field in request) or C1h (Invalid command) suffice? I don't like the idea of hi-jacking reserved entities, be it bits or completion codes."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "The error code here corresponds to byte 2 of the RAKP2/RAKP4 responses, not a standard IPMI completion code. The codes are defined in Section 13.24 of the IPMI spec (RMCP+ and RAKP Message Status Codes). Maybe 12h (Illegal or unrecognized parameter?)"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 143,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "Yes, that could do I guess"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "nit: this should be \"to\""
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 144,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 163,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Consider adding a new alternative: Create a new cipher suite for the existing RMCP+ protocol?  This could use the latest encryption ciphers.  Would it meet the first 4 requirements?  Of course, such a design would leave \"passwords ... stored unencrypted on the BMC\"."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 163,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Passwords unencrypted on the BMC is partly a different problem that can be worked around by using a TEE (which we are currently working on). The real problem here is that the RAKP/RCMP+ CIA protocols were created using the authors' best encryption knowledge, not crypto standards like TLS. It doesn't make sense to just push this down the road when we have a very clear path ahead that offers a solution that will be updated as time goes by.\n\nI will add this as an alternative considered with the reasons why is cannot be considered seriously."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 163,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "Thanks."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Alexander Tereschenko",
                        "email": "aleksandr.v.tereschenko@intel.com",
                        "username": "alext-w"
                    },
                    "message": "In the name of making as few changes into protocols as possible (because that may have unforeseen security consequences), I wonder if we could simply do a first-message analysis at the BMC side and if it's the DTLS ClientHello - we do RMCP+ over DTLS with appropriate authentication mechanism modifications (because we know it's the DTLS-enabled client that's talking to us), but if it's a standard IPMI RMCP+ message, we then turn to the legacy flows (if enabled by BMC admin). When user runs a tool, they would anyway specify the mode they want to run in explicitly (or the tool would have it in the defaults), so it seems to me we could avoid this dynamic determination/fallback with Get Channel Authentication Capabilities changes."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "This was actually the first idea I had come up with, but then abandoned it. When I was coming up with this idea, I was reading about other solutions and I came across the SMTP STARTTLS extension to upgrade the unencrypted connection to an encrypted one. I modeled it after that because I figured that there may have been some issues with doing what you propose here.\n\nIf there are not any technical issues with this idea, I would agree that we should promote this to the chosen solution to avoid the messaging changes I came up with."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 164,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "I like this idea too (\"in the name if making as feq changes into protocols as possible\")."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Alexander Amelkin",
                        "email": "a.amelkin@yadro.com",
                        "username": "AlexanderAmelkin"
                    },
                    "message": "There is also an option to run OpenVPN on OpenBMC and tunnel all the IPMI traffic inside a VPN. Not very convenient if there are multiple BMCs to communicate with."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 190,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "I will add that as an option. I had not considered it."
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "type": "ADDED",
                    "insertions": 189,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 189,
            "sizeDeletions": 0
        },
        {
            "number": 3,
            "revision": "dbdfd34340ed955505f2257022fc6d95b70f0332",
            "parents": [
                "f6ebb02fe8998ed6f0c71dde355008bcb382af30"
            ],
            "ref": "refs/changes/48/31548/3",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1598985165,
            "author": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "kind": "REWORK",
            "comments": [
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "Can you give a reference for aes 128 being no longer recommend?\n\nIn 2018 it was mandatory for TLS 1.3 albeit in GCM.\nhttps://datatracker.ietf.org/doc/html/rfc8446#section-9.1\n\nI see maybe for new applications or post quantum concerns.\n\nhttps://en.m.wikipedia.org/wiki/Security_level\nhttps://blog.1password.com/guess-why-were-moving-to-256-bit-aes-keys/"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I found rfc7457 section 2.4, saying why mac then cbc didn't make tls 1.3."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 33,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Yeah, mostly it is post quantum concerns over 'small' key sizes. I am not worried for it right now, but new applications or applications that will be still running in 10 years should be finding ways to move to larger key sizes.\n\nReally, the encryption is the strongest part of the cipher suite 17. Truncated HMACs for integrity and authentication reduce the strength of something that is already on shaky ground. And then putting it in the clear so it can be cracked offline is the nail in the coffin."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "the BMCWeb site identity certificate?"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 80,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Yes. No need to have multiple identities for the same entity."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "This would require the private key to be shared between the web server and the ipmi, or the session to be terminated by the server and forwarded on.\n\nDoes redfish have a concept of providing services references? (As an alternative)"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Yes, the idea was that there would be one private key shared between the two services and one certificate that identifies the BMC. This would be easier to manage. I can't think of why this would be problematic, but I am only a part-time security expert :)\n\nSince this will be running over UDP, I don't think it would be possible to have redfish forwarding the connection."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I think would like to hear from our webserver developers and that out security team discussed it before accepting this.\n\nAs you already said lPMI has known weaknesses and reusing the same certificate seems like an unnecessary exposure, and an administrator may not realize the web certificate is exposed in the event of an IPMI incident -- they might start with just disabling IPMI ."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "The known weaknesses in IPMI are exactly what this new transport is overcoming. The RMCP+ transport is the problem, not IPMI itself."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Patrick Williams",
                        "email": "patrick@stwcx.xyz",
                        "username": "williamspatrick"
                    },
                    "message": "> I think would like to hear from our webserver developers and that out security team discussed it before accepting this.\n\nMilton, are you going to drive having that discussion?  What is the timeline for it?  I don't think it is reasonable to expect Vernon to gather all your experts.\n\nTo me, the primary questions here for acceptance are:\n1) Is this better than RMCP+?\n2) Are there obvious security holes in it?\n3) Can it be easily disabled by a vendor that doesn't want it?\n\nAs long as the answers are [Yes, No, No], I don't see anything wrong with allowing Vernon to go forward with implementation and experimentation."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Milton D. Miller II",
                        "email": "miltonm@us.ibm.com",
                        "username": "mdmillerii"
                    },
                    "message": "I'd also like to hear that we'll use dtls implementation from Open SSL \n- our webserver is already using this library via boost library\n- there have been documted attacks against dtls \n\nhttps://en.m.wikipedia.org/wiki/Datagram_Transport_Layer_Security\nVulnerabilities section\n\nNote it's also been reported as a amplification vector in DDoS at least when misconfigured."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "I've added this to today's Security Working Group meeting.  Noon US central time (in 2h 45m from now).  Sorry about the late notice.\nhttps://github.com/openbmc/openbmc/wiki/Security-working-group#access-information-meetings"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 82,
                    "reviewer": {
                        "name": "Ratan Gupta",
                        "email": "ratankgupta31@gmail.com",
                        "username": "ratagupt"
                    },
                    "message": "There was a comment raised in the security meeting from some one, that if some body changes the certificate   and if there is an existing session(IPMI, Redfish) going on, what would be the impact on the existing session.\n\nMy response with respect to redfish: There are two sessions 1) Application session, 2) ssl session/channel\n\nNo impact on the Application session.\nSSL channel gets re-established with the use of the new certificates for the new HTTP request.\n\nOngoing HTTP request will be abruptly ended as the bmcweb gets restarted once the replace certificate request succeeds.\n\nEd, is it true?"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "The cipher algorithms are used as part of a larger security protocol"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 114,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "The reality is that many IT shops will continue to use IPMI and desire better security."
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 135,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "Done"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Joseph Reynolds",
                        "email": "joseph-reynolds@charter.net",
                        "username": "joseph-reynolds"
                    },
                    "message": "What does this phrase mean?"
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "line": 138,
                    "reviewer": {
                        "name": "Vernon Mauery",
                        "email": "vernon.mauery@linux.intel.com",
                        "username": "vmauery"
                    },
                    "message": "yup; looks like I got distracted while typing. :)"
                }
            ],
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 16,
                    "deletions": 0
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "type": "ADDED",
                    "insertions": 254,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 254,
            "sizeDeletions": 0
        },
        {
            "number": 4,
            "revision": "73cab658433dc54ec4fb137744d20148b0220d31",
            "parents": [
                "264d4e0fb19bb0aba5f154dafa5242a15c71bace"
            ],
            "ref": "refs/changes/48/31548/4",
            "uploader": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "createdOn": 1628047024,
            "author": {
                "name": "Vernon Mauery",
                "email": "vernon.mauery@linux.intel.com",
                "username": "vmauery"
            },
            "kind": "REWORK",
            "files": [
                {
                    "file": "/COMMIT_MSG",
                    "type": "ADDED",
                    "insertions": 20,
                    "deletions": 0
                },
                {
                    "file": "designs/ipmi-over-dtls.md",
                    "type": "ADDED",
                    "insertions": 311,
                    "deletions": 0
                }
            ],
            "sizeInsertions": 311,
            "sizeDeletions": 0
        }
    ]
}